"use strict";(globalThis.webpackChunkdesign_system=globalThis.webpackChunkdesign_system||[]).push([[9451],{"./packages/design-system/src/components/Dropdown/Dropdown.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,Default:()=>Default,Disabled:()=>Disabled,HtmlOptionGroups:()=>HtmlOptionGroups,HtmlOptions:()=>HtmlOptions,InverseOption:()=>InverseOption,OptionGroups:()=>OptionGroups,WithError:()=>WithError,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Dropdown__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/design-system/src/components/Dropdown/Dropdown.tsx"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),_storybook_preview_api__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("@storybook/preview-api"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Dropdown",component:_Dropdown__WEBPACK_IMPORTED_MODULE_3__.Z,args:{name:"dropdown-field"},argTypes:{errorMessage:{control:"text"},hint:{control:"text"},requirementLabel:{control:"text"}},parameters:{docs:{underlyingHtmlElements:["button"]}}},dropdownOptions=[{label:"- Select an option -",value:""},{label:"Confederated Tribes and Bands of the Yakama Nation",value:"1"},{label:"Confederated Tribes of the Chehalis Reservation",value:"2"},{label:"Confederated Tribes of the Colville Reservation",value:"3"},{label:"Cowlitz Indian Tribe",value:"4"},{label:"Hoh Indian Tribe (formerly the Hoh Indian Tribe of the Hoh Indian Reservation)",value:"5"},{label:"Nisqually Indian Tribe (formerly the Nisqually Indian Tribe of the Nisqually Reservation)",value:"6"},{label:"Lummi Tribe of the Lummi Reservation",value:"7"}],htmlOptGroups=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.BX)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.HY,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"",children:"- Select an option -"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.BX)("optgroup",{label:"Group A",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"a-1",children:"Option A-1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"a-2",children:"Option A-2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"a-3",children:"Option A-3"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.BX)("optgroup",{label:"Group B","data-extra-attribute":"something",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"b-1",children:"Option B-1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"b-2",children:"Option B-2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"b-3",children:"Option B-3"})]})]}),htmlOptions=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.BX)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.HY,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"1",children:"Option 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"2",children:"Option 2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"3",children:"Option 3"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"4",children:"Option 4"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"5",children:"Option 5"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"6",children:"Option 6"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"7",children:"Option 7"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)("option",{value:"8","data-extra-attribute":"something",children:"Option 8"})]}),Default={args:{options:dropdownOptions,label:"Select your tribe name."}},WithError={args:{options:dropdownOptions,errorMessage:"This is an example error message.",hint:"This is where you put helpful hint text.",label:"Select your tribe name."}},Disabled={args:{options:dropdownOptions,label:"Disabled example",disabled:!0}},OptionGroups={args:{options:[{label:"Group A",options:[{value:"a-1",label:"Option A-1"},{value:"a-2",label:"Option A-2"},{value:"a-3",label:"Option A-3"}]},{label:"Group B",options:[{value:"b-1",label:"Option B-1"},{value:"b-2",label:"Option B-2"},{value:"b-3",label:"Option B-3"}]}],label:"Select an option.",hint:"This is an option-group example."}},HtmlOptionGroups={args:{options:void 0,label:"Select an option.",hint:"In this example, options and groups are defined as HTML.",children:htmlOptGroups}},HtmlOptions={args:{options:void 0,label:"Select an option.",hint:"In this example, options defined as HTML.",children:htmlOptions}},InverseOption={args:{options:dropdownOptions,errorMessage:"This is an example error message.",hint:"This component is on an inversed background.",label:"Select your tribe name.",inversed:!0},parameters:{onDark:!0,layout:"fullscreen"}},Controlled={args:{options:dropdownOptions,label:"Select your tribe name.",hint:"In this example, the selected value is controlled by the parent component.",value:"3"},render:function Component(args){const[{value},updateArgs]=(0,_storybook_preview_api__WEBPACK_IMPORTED_MODULE_1__.useArgs)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.tZ)(_Dropdown__WEBPACK_IMPORTED_MODULE_3__.Z,{...args,value,onChange:event=>{(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("onChange")(event),updateArgs({value:event.currentTarget.value})}})}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: dropdownOptions,\n    label: 'Select your tribe name.'\n  }\n}",...Default.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: dropdownOptions,\n    errorMessage: 'This is an example error message.',\n    hint: 'This is where you put helpful hint text.',\n    label: 'Select your tribe name.'\n  }\n}",...WithError.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: dropdownOptions,\n    label: 'Disabled example',\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},OptionGroups.parameters={...OptionGroups.parameters,docs:{...OptionGroups.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Group A',\n      options: [{\n        value: 'a-1',\n        label: 'Option A-1'\n      }, {\n        value: 'a-2',\n        label: 'Option A-2'\n      }, {\n        value: 'a-3',\n        label: 'Option A-3'\n      }]\n    }, {\n      label: 'Group B',\n      options: [{\n        value: 'b-1',\n        label: 'Option B-1'\n      }, {\n        value: 'b-2',\n        label: 'Option B-2'\n      }, {\n        value: 'b-3',\n        label: 'Option B-3'\n      }]\n    }],\n    label: 'Select an option.',\n    hint: 'This is an option-group example.'\n  }\n}",...OptionGroups.parameters?.docs?.source}}},HtmlOptionGroups.parameters={...HtmlOptionGroups.parameters,docs:{...HtmlOptionGroups.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: undefined,\n    label: 'Select an option.',\n    hint: 'In this example, options and groups are defined as HTML.',\n    children: htmlOptGroups\n  }\n}",...HtmlOptionGroups.parameters?.docs?.source}}},HtmlOptions.parameters={...HtmlOptions.parameters,docs:{...HtmlOptions.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: undefined,\n    label: 'Select an option.',\n    hint: 'In this example, options defined as HTML.',\n    children: htmlOptions\n  }\n}",...HtmlOptions.parameters?.docs?.source}}},InverseOption.parameters={...InverseOption.parameters,docs:{...InverseOption.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: dropdownOptions,\n    errorMessage: 'This is an example error message.',\n    hint: 'This component is on an inversed background.',\n    label: 'Select your tribe name.',\n    inversed: true\n  },\n  parameters: {\n    // Must supply `layout: 'fullscreen'` when we use `onDark: true`\n    onDark: true,\n    layout: 'fullscreen'\n  }\n}",...InverseOption.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: dropdownOptions,\n    label: 'Select your tribe name.',\n    hint: 'In this example, the selected value is controlled by the parent component.',\n    value: '3'\n  },\n  render: function Component(args) {\n    const [{\n      value\n    }, updateArgs] = useArgs();\n    const onChange = event => {\n      action('onChange')(event);\n      updateArgs({\n        value: event.currentTarget.value\n      });\n    };\n    return <Dropdown {...args} value={value} onChange={onChange} />;\n  }\n}",...Controlled.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithError","Disabled","OptionGroups","HtmlOptionGroups","HtmlOptions","InverseOption","Controlled"]}}]);