{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/components/masked-field",
    "result": {"data":{"mdx":{"id":"3cf872c8-fd98-55cd-9067-6e51692eb9e6","frontmatter":{"title":"Masked field","status":null,"intro":"A masked field is an enhanced input field that improves readability by providing visual and non-visual cues to a user about the expected value.","core":{"githubLink":"design-system/src/components/TextField","sketchLink":null,"storybookLink":"components-text-field--masked-field"},"healthcare":null,"medicare":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Masked field\",\n  \"intro\": \"A masked field is an enhanced input field that improves readability by providing visual and non-visual cues to a user about the expected value.\",\n  \"core\": {\n    \"githubLink\": \"design-system/src/components/TextField\",\n    \"storybookLink\": \"components-text-field--masked-field\"\n  }\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar EmbeddedExample = makeShortcode(\"EmbeddedExample\");\nvar PropTable = makeShortcode(\"PropTable\");\nvar ComponentThemeOptions = makeShortcode(\"ComponentThemeOptions\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Masked field\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<TextField mask={...}>\")), mdx(\"p\", null, \"A Mask component renders a controlled input field that applies formatting to the input value when the field is blurred.\"), mdx(\"p\", null, \"Passing a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mask\"), \" prop into the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TextField\"), \" component with a valid value will\\nenable formatting to occur when the field is blurred. To \\\"unmask\\\" the\\nvalue, you can import and call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"unmaskValue\"), \" method.\"), mdx(EmbeddedExample, {\n    mdxType: \"EmbeddedExample\"\n  }, mdx(React.Fragment, null, mdx(TextField, {\n    ariaLabel: \"Enter monthly income amount in dollars.\",\n    labelClassName: \"ds-u-margin-top--0\",\n    label: \"Currency\",\n    mask: \"currency\",\n    inputMode: \"numeric\",\n    type: \"text\",\n    name: \"currency_example\",\n    onBlur: function onBlur(evt) {\n      return console.log('Unmasked value: ', unmaskValue(evt.target.value, 'currency'));\n    },\n    defaultValue: \"2,500\",\n    mdxType: \"TextField\"\n  }), mdx(TextField, {\n    label: \"Phone number\",\n    mask: \"phone\",\n    name: \"phone_example\",\n    onBlur: function onBlur(evt) {\n      return console.log('Unmasked value: ', unmaskValue(evt.target.value, 'phone'));\n    },\n    type: \"tel\",\n    defaultValue: \"1234567890\",\n    mdxType: \"TextField\"\n  }), mdx(TextField, {\n    label: \"Social security number (SSN)\",\n    mask: \"ssn\",\n    inputMode: \"numeric\",\n    type: \"text\",\n    name: \"ssn_example\",\n    onBlur: function onBlur(evt) {\n      return console.log('Unmasked value: ', unmaskValue(evt.target.value, 'ssn'));\n    },\n    defaultValue: \"123456789\",\n    mdxType: \"TextField\"\n  }), mdx(TextField, {\n    label: \"Zip code\",\n    mask: \"zip\",\n    inputMode: \"numeric\",\n    type: \"text\",\n    name: \"zip_example\",\n    onBlur: function onBlur(evt) {\n      return console.log('Unmasked value: ', unmaskValue(evt.target.value, 'zip'));\n    },\n    defaultValue: \"123456789\",\n    mdxType: \"TextField\"\n  }))), mdx(\"h3\", null, \"Props\"), mdx(PropTable, {\n    componentName: \"TextField\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, \"Customization\"), mdx(\"p\", null, \"The following Sass variables can be overridden to customize Input/Form components:\"), mdx(ComponentThemeOptions, {\n    componentname: \"text-input\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Form components\"), mdx(ComponentThemeOptions, {\n    componentname: \"form\",\n    mdxType: \"ComponentThemeOptions\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#masked-field","title":"Masked field"},{"url":"#customization","title":"Customization"}]}}},"pageContext":{"id":"3cf872c8-fd98-55cd-9067-6e51692eb9e6"}},
    "staticQueryHashes": ["1050346478","3750824424"]}