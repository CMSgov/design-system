"use strict";(globalThis.webpackChunkdesign_system=globalThis.webpackChunkdesign_system||[]).push([[7911],{"./packages/design-system/src/components/web-components/ds-text-field/ds-text-field.tsx":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{var _preactement_define__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/design-system/src/components/web-components/preactement/define.ts"),_TextField__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/design-system/src/components/TextField/TextField.tsx"),_wrapperUtils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/design-system/src/components/web-components/wrapperUtils.ts"),_shared_attributes_form__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/design-system/src/components/web-components/shared-attributes/form.ts"),_TextField_useLabelMask__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/design-system/src/components/TextField/useLabelMask.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const attributes=["autofocus","aria-disabled","class-name","disabled","field-class-name","inversed","label-mask","multiline","name","numeric","value","root-id","rows","size","type",..._shared_attributes_form__WEBPACK_IMPORTED_MODULE_2__.z];function getMaskFunction(value){switch(value){case"phone":return _TextField_useLabelMask__WEBPACK_IMPORTED_MODULE_4__.N_;case"zip":return _TextField_useLabelMask__WEBPACK_IMPORTED_MODULE_4__.AJ;case"ssn":return _TextField_useLabelMask__WEBPACK_IMPORTED_MODULE_4__.Nl;case"currency":return _TextField_useLabelMask__WEBPACK_IMPORTED_MODULE_4__.vP}}const Wrapper=_ref=>{let{autofocus,rootId,...otherProps}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.tZ)(_TextField__WEBPACK_IMPORTED_MODULE_5__.n,{...otherProps,autoFocus:(0,_wrapperUtils__WEBPACK_IMPORTED_MODULE_1__.Mt)(autofocus),"aria-disabled":(0,_wrapperUtils__WEBPACK_IMPORTED_MODULE_1__.Mt)(otherProps.ariaDisabled),disabled:(0,_wrapperUtils__WEBPACK_IMPORTED_MODULE_1__.Mt)(otherProps.disabled),id:rootId,inversed:(0,_wrapperUtils__WEBPACK_IMPORTED_MODULE_1__.Mt)(otherProps.inversed),labelMask:getMaskFunction(otherProps.labelMask),multiline:(0,_wrapperUtils__WEBPACK_IMPORTED_MODULE_1__.Mt)(otherProps.multiline)})};(0,_preactement_define__WEBPACK_IMPORTED_MODULE_0__.O)("ds-text-field",(()=>Wrapper),{attributes,events:["onChange","onBlur"]})},"./packages/design-system/src/components/web-components/shared-attributes/form.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>formAttrs});const formAttrs=["label","label-class-name","label-id","hint","hint-id","requirement-label","hint-class-name","error-id","error-placement","error-message","error-message-class-name"]},"./packages/design-system/src/components/web-components/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{e:()=>isPossibleValue});const isPossibleValue=(value,possibleValues)=>possibleValues.includes(value)},"./packages/design-system/src/components/web-components/wrapperUtils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function parseBooleanAttr(attr){return void 0!==attr&&"false"!==attr}function parseDateAttr(attr){return attr?new Date(attr):void 0}function parseIntegerAttr(attr){if(void 0!==attr)return parseInt(attr)}function parseJsonAttr(attr){return(str=>{try{JSON.parse(str)}catch(e){return!1}return!0})(attr)?JSON.parse(attr):attr}__webpack_require__.d(__webpack_exports__,{Mt:()=>parseBooleanAttr,Py:()=>parseDateAttr,RC:()=>parseJsonAttr,bD:()=>parseIntegerAttr})},"./packages/design-system/src/components/web-components/ds-autocomplete/ds-autocomplete.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AsyncItems:()=>AsyncItems,Default:()=>Default,GroupsAndStandaloneItems:()=>GroupsAndStandaloneItems,ItemGroups:()=>ItemGroups,LabeledList:()=>LabeledList,LoadingMessage:()=>LoadingMessage,NoResults:()=>NoResults,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ds_autocomplete_stories});var compat_module=__webpack_require__("./node_modules/preact/compat/dist/compat.module.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),WebComponentDocTemplate=__webpack_require__("./.storybook/docs/WebComponentDocTemplate.mdx"),storybook=__webpack_require__("./packages/design-system/src/components/web-components/storybook.tsx"),preactement_define=__webpack_require__("./packages/design-system/src/components/web-components/preactement/define.ts"),Autocomplete=__webpack_require__("./packages/design-system/src/components/Autocomplete/Autocomplete.tsx"),wrapperUtils=__webpack_require__("./packages/design-system/src/components/web-components/wrapperUtils.ts"),TextField=__webpack_require__("./packages/design-system/src/components/TextField/TextField.tsx"),shared_attributes_form=__webpack_require__("./packages/design-system/src/components/web-components/shared-attributes/form.ts"),useInlineError=__webpack_require__("./packages/design-system/src/components/InlineError/useInlineError.tsx"),utils=__webpack_require__("./packages/design-system/src/components/web-components/utils.ts"),jsx_runtime=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const attributes=["aria-clear-label","aria-complete-label","autofocus","disabled","class-name","clear-input-text","clear-search-button","items","loading-message","loading","menu-heading-id","menu-heading","name","no-results-message","root-id","value",...shared_attributes_form.z],Wrapper=_ref=>{let{autofocus,clearSearchButton,hint,items,label,loading,menuHeading,menuHeadingId,name,rootId,value,...otherProps}=_ref;return(0,jsx_runtime.tZ)(Autocomplete.F,{...otherProps,autoFocus:(0,wrapperUtils.Mt)(autofocus),clearSearchButton:(0,wrapperUtils.Mt)(clearSearchButton),id:rootId,items:(0,wrapperUtils.RC)(items),label:menuHeading,labelId:menuHeadingId,loading:(0,wrapperUtils.Mt)(loading),children:(0,jsx_runtime.tZ)(TextField.n,{disabled:(0,wrapperUtils.Mt)(otherProps.disabled),errorMessage:otherProps.errorMessage,errorPlacement:(0,utils.e)(otherProps.errorPlacement,useInlineError.D)?otherProps.errorPlacement:void 0,errorMessageClassName:otherProps.errorMessageClassName,label,hint,name:name??"autocomplete",value})})};(0,preactement_define.O)("ds-autocomplete",(()=>Wrapper),{attributes,events:[["onChange",selectedItem=>({detail:{selectedItem}})],["onInputValueChange",value=>({detail:{value}})]]});var uniqueId=__webpack_require__("./node_modules/lodash/uniqueId.js"),uniqueId_default=__webpack_require__.n(uniqueId),testMocks=(__webpack_require__("./packages/design-system/src/components/web-components/ds-text-field/ds-text-field.tsx"),__webpack_require__("./packages/design-system/src/components/Autocomplete/testMocks.tsx")),debounce=__webpack_require__("./packages/design-system/src/components/utilities/debounce.ts");const ds_autocomplete_stories={title:"Web Components/ds-autocomplete",decorators:[storybook.h],parameters:{docs:{page:WebComponentDocTemplate.Z}},args:{"clear-input-text":"Clear search","clear-search-button":!0,"loading-message":"Loading...","no-results-message":"No results",name:"autocomplete"},argTypes:{"aria-clear-label":{description:"Screen reader-specific label for the Clear search `<button>`. Intended to provide a longer, more descriptive explanation of the button's behavior.",control:"text"},"aria-complete-label":{description:'Control the `TextField` autocomplete attribute. Defaults to "off" to support accessibility. [Read more.](https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion)',control:"text"},autofocus:{description:"Sets the focus on the select during the first mount",control:"boolean"},children:{control:!1,table:{disable:!0}},"class-name":{description:"Additional classes to be added to the root element. Useful for adding utility classes.",control:"text"},"clear-input-text":{description:'Text rendered on the page if `clearInput` prop is passed. Default is "Clear search".',control:"text"},"clear-search-button":{description:"Removes the Clear search button when set to `false`",control:"boolean"},disabled:{description:"Disables the input text field.",control:"boolean"},"error-message":{description:"Enable the error state by providing an error message",control:"text"},"error-placement":{description:"Location of the error message relative to the field input",options:[void 0,"top","bottom"],control:{type:"radio"}},"error-message-class-name":{description:"Provides the option to add styling to error messages placed at the bottom of the autcomplete.",control:"text"},hint:{description:"An optional hint for the label",control:"text"},"hint-class-name":{control:"text",description:"Custom CSS class name(s) for the hint element"},items:{description:'An array of objects used to populate the suggestion list that appears below the input as users type. Passing an empty array will show a "No results" message. If you do not yet want to show results, this props should be undefined. This parameter needs to be stringified (please see examples for usage and [read more on the autocomplete docs](https://design.cms.gov/storybook/?path=/docs/components-autocomplete--docs):).',control:"text"},label:{description:"A label for the input",control:"text"},loading:{description:"Can be called when the `items` array is being fetched remotely, or will be delayed for more than 1-2 seconds.",control:"boolean"},"loading-message":{description:"Message users will see when the `loading` prop is passed to `Autocomplete`.",control:"text"},"menu-heading":{description:"Adds a heading to the top of the autocomplete list. This can be used to convey to the user that they're required to select an option from the autocomplete list.",control:"text"},"menu-heading-id":{description:"A unique `id` to be used on the child `TextField` label tag",control:"text"},name:{description:"The `input` field's `name` attribute.",control:"text"},"no-results-message":{description:"Message users will see when the `items` array returns empty and the `loading` prop is passed to `<Autocomplete />`.",control:"text"},"root-id":{description:"A unique ID for this element. A unique ID will be generated if one isn't provided.",control:"text"},textFieldHint:{table:{disable:!0}},textFieldLabel:{table:{disable:!0}},value:{description:"Input value",control:"text"}}},Template=args=>{const{items,label,hint,...autocompleteArgs}=args,[input,setInput]=(0,compat_module.useState)("");let filteredItems=null;return input.length>0&&items&&(filteredItems=items.map((item=>{if("label"in item){const filteredGroupItems=item.items.filter((groupItem=>!groupItem.name||groupItem.name.toLowerCase().includes(input.toLowerCase())));return 0===filteredGroupItems.length?null:{...item,items:filteredGroupItems}}return!item.name||item.name.toLowerCase().includes(input.toLowerCase())?item:null})).filter(Boolean)),(0,compat_module.useEffect)((()=>{const element=document.querySelector("ds-autocomplete");if(element){const handleOnChange=event=>(setInput(event.detail.selectedItem.name),(0,dist.aD)("ds-change")(event)),handleOnInputValueChange=event=>{(0,dist.aD)("ds-input-value-change")(event),setInput(event.detail.value)};return element.addEventListener("ds-change",handleOnChange),element.addEventListener("ds-input-value-change",handleOnInputValueChange),()=>{element.removeEventListener("ds-change",handleOnChange),element.removeEventListener("ds-input-value-change",handleOnInputValueChange)}}}),[]),(0,jsx_runtime.tZ)("ds-autocomplete",{...autocompleteArgs,items:JSON.stringify(filteredItems),label,hint,value:input})};function makeGroup(label,items){return{id:uniqueId_default()(),label,items}}function makeItem(name,children){return{id:uniqueId_default()(),name,children}}const Default={render:Template,args:{label:"Enter and select a drug to see its cost under each plan.",hint:"Type a letter to see results, then use ARROW keys to change options, ENTER key to make a selection, ESC to dismiss.",items:[makeItem("Acetaminophen"),makeItem("Advil"),makeItem("Benadryl"),makeItem("Claritin"),makeItem("Detrol"),makeItem("Excedrin"),makeItem("Flonase"),makeItem("Gas-X"),makeItem("Hydrocortisone"),makeItem("Ibuprofen"),makeItem("Insulin glargine"),makeItem("Jublia"),makeItem("Ketoprofen"),makeItem("Lidocaine"),makeItem("Lunestra"),makeItem("Melatonin"),makeItem("Meloxicam"),makeItem("Neosporin"),makeItem("Oxycodone"),makeItem("Prednisone"),makeItem("Prilosec"),makeItem("Quinine"),makeItem("Robitussin"),makeItem("Sudafed"),makeItem("Tamiflu"),makeItem("Unisom"),makeItem("Vicodin"),makeItem("Warfarin"),makeItem("Xanax"),makeItem("Yonsa"),makeItem("Zyrtec")]}},LabeledList={render:Template,args:{label:"Search for and select your county.",hint:'Type "C" then use ARROW keys to change options, ENTER key to make a selection, ESC to dismiss.',"menu-heading":"Select from the options below:",items:[makeItem("Cook County, IL"),makeItem("Cook County, MD"),makeItem("Cook County, TN"),makeItem("Cook County, AK"),makeItem("Cook County, FL"),makeItem("Cook County, AL"),makeItem("Cook County, WA"),makeItem("Cook County, OR")]}},ItemGroups={render:Template,args:{label:"Select a state.",hint:'Type "A" then use ARROW keys to change options, ENTER key to make a selection, ESC to dismiss.',items:[makeGroup("Group A",[makeItem("Alabama"),makeItem("Alaska"),makeItem("Arizona"),makeItem("Arkansas")]),makeGroup("Group C",[makeItem("California"),makeItem("Colorado"),makeItem("Connecticut")]),makeGroup("Group D",[makeItem("Delaware"),makeItem("District of Columbia")])]}},GroupsAndStandaloneItems={render:Template,args:{label:"Search for a healthcare specialty or doctor’s office.",hint:"Type to filter options. Use ARROW keys to navigate, ENTER to select, ESC to dismiss.",items:[makeItem("Care Clinic - Specialty Center"),makeItem("Healthy Life Gastroenterology - Main Campus"),makeItem("Dermatology Associates - East Wing"),makeGroup("Healthcare Specialties",[makeItem("Pediatrics"),makeItem("Gastroenterology"),makeItem("Dermatology"),makeItem("Cardiology"),makeItem("Neurology"),makeItem("Orthopedics")])]}},LoadingMessage={render:Template,args:{"clear-search-button":"false",loading:"true",items:[],label:"This will only show a loading message.",hint:"List should return string Loading to simulate async data call."}},NoResults={render:Template,args:{items:[],"clear-search-button":"false",label:'This will show a "no results" message.',hint:'Start typing, but you’ll only get a "no results" message.'}},AsyncItems={render:function Component(args){const{items,...autocompleteArgs}=args,[input,setInput]=(0,compat_module.useState)(""),[additionalItems,setAdditionalItems]=(0,compat_module.useState)([]),hasResults=input.length>2&&additionalItems.length,debouncedSearch=(0,compat_module.useCallback)((0,debounce.Z)((()=>{fetch(`https://api.artic.edu/api/v1/artworks/search?q=${input}&fields=id,title,artist_title&limit=10`).then((response=>{if(200===response.status)return response.json()})).then((_ref=>{let{data}=_ref;const additionalItems=data.map((_ref2=>{let{id,title,artist_title}=_ref2;return{id:id.toString(),name:`${title} by ${artist_title}`}}));setAdditionalItems(additionalItems)}))}),500),[]);return(0,compat_module.useEffect)((()=>{const element=document.querySelector("ds-autocomplete");if(element){const handleOnChange=event=>(setInput(event.detail.selectedItem.name),(0,dist.aD)("ds-change")(event)),handleOnInputValueChange=event=>{(0,dist.aD)("ds-input-value-change")(event),setInput(event.detail.value),input.length>2&&input!==event.detail.value&&debouncedSearch()};return element.addEventListener("ds-change",handleOnChange),element.addEventListener("ds-input-value-change",handleOnInputValueChange),()=>{element.removeEventListener("ds-change",handleOnChange),element.removeEventListener("ds-input-value-change",handleOnInputValueChange)}}}),[debouncedSearch,input]),(0,jsx_runtime.tZ)("ds-autocomplete",{...autocompleteArgs,"menu-heading":hasResults?void 0:autocompleteArgs["menu-heading"],onChange:(0,dist.aD)("onChange"),items:hasResults?JSON.stringify(additionalItems):JSON.stringify(items)})},args:{label:"Search for artwork",hint:"Enter the name of an artist, title, or genre","menu-heading":"Popular searches includes:",items:[makeItem("Mountains"),makeItem("Watercolor"),makeItem("Georgia O'Keeffe"),makeItem("City Landscape"),makeItem("Self-Portrait")]},parameters:{fetchMock:{mocks:[testMocks.s]}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Enter and select a drug to see its cost under each plan.',\n    hint: 'Type a letter to see results, then use ARROW keys to change options, ENTER key to make a selection, ESC to dismiss.',\n    items: [makeItem('Acetaminophen'), makeItem('Advil'), makeItem('Benadryl'), makeItem('Claritin'), makeItem('Detrol'), makeItem('Excedrin'), makeItem('Flonase'), makeItem('Gas-X'), makeItem('Hydrocortisone'), makeItem('Ibuprofen'), makeItem('Insulin glargine'), makeItem('Jublia'), makeItem('Ketoprofen'), makeItem('Lidocaine'), makeItem('Lunestra'), makeItem('Melatonin'), makeItem('Meloxicam'), makeItem('Neosporin'), makeItem('Oxycodone'), makeItem('Prednisone'), makeItem('Prilosec'), makeItem('Quinine'), makeItem('Robitussin'), makeItem('Sudafed'), makeItem('Tamiflu'), makeItem('Unisom'), makeItem('Vicodin'), makeItem('Warfarin'), makeItem('Xanax'), makeItem('Yonsa'), makeItem('Zyrtec')]\n  }\n}",...Default.parameters?.docs?.source}}},LabeledList.parameters={...LabeledList.parameters,docs:{...LabeledList.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Search for and select your county.',\n    hint: 'Type \"C\" then use ARROW keys to change options, ENTER key to make a selection, ESC to dismiss.',\n    'menu-heading': 'Select from the options below:',\n    items: [makeItem('Cook County, IL'), makeItem('Cook County, MD'), makeItem('Cook County, TN'), makeItem('Cook County, AK'), makeItem('Cook County, FL'), makeItem('Cook County, AL'), makeItem('Cook County, WA'), makeItem('Cook County, OR')]\n  }\n}",...LabeledList.parameters?.docs?.source}}},ItemGroups.parameters={...ItemGroups.parameters,docs:{...ItemGroups.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Select a state.',\n    hint: 'Type \"A\" then use ARROW keys to change options, ENTER key to make a selection, ESC to dismiss.',\n    items: [makeGroup('Group A', [makeItem('Alabama'), makeItem('Alaska'), makeItem('Arizona'), makeItem('Arkansas')]), makeGroup('Group C', [makeItem('California'), makeItem('Colorado'), makeItem('Connecticut')]), makeGroup('Group D', [makeItem('Delaware'), makeItem('District of Columbia')])]\n  }\n}",...ItemGroups.parameters?.docs?.source}}},GroupsAndStandaloneItems.parameters={...GroupsAndStandaloneItems.parameters,docs:{...GroupsAndStandaloneItems.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Search for a healthcare specialty or doctor’s office.',\n    hint: 'Type to filter options. Use ARROW keys to navigate, ENTER to select, ESC to dismiss.',\n    items: [makeItem('Care Clinic - Specialty Center'), makeItem('Healthy Life Gastroenterology - Main Campus'), makeItem('Dermatology Associates - East Wing'), makeGroup('Healthcare Specialties', [makeItem('Pediatrics'), makeItem('Gastroenterology'), makeItem('Dermatology'), makeItem('Cardiology'), makeItem('Neurology'), makeItem('Orthopedics')])]\n  }\n}",...GroupsAndStandaloneItems.parameters?.docs?.source}}},LoadingMessage.parameters={...LoadingMessage.parameters,docs:{...LoadingMessage.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    'clear-search-button': 'false',\n    loading: 'true',\n    items: [],\n    label: 'This will only show a loading message.',\n    hint: 'List should return string Loading to simulate async data call.'\n  }\n}",...LoadingMessage.parameters?.docs?.source}}},NoResults.parameters={...NoResults.parameters,docs:{...NoResults.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    items: [],\n    'clear-search-button': 'false',\n    label: 'This will show a \"no results\" message.',\n    hint: 'Start typing, but you’ll only get a \"no results\" message.'\n  }\n}",...NoResults.parameters?.docs?.source}}},AsyncItems.parameters={...AsyncItems.parameters,docs:{...AsyncItems.parameters?.docs,source:{originalSource:"{\n  render: function Component(args: DSAutocompleteProps) {\n    const {\n      items,\n      ...autocompleteArgs\n    } = args;\n    const [input, setInput] = useState('');\n    const [additionalItems, setAdditionalItems] = useState<AutocompleteItem[]>([]);\n    const hasResults = input.length > 2 && additionalItems.length;\n    const searchArtwork = () => {\n      // Note: the response is mocked\n      const searchURL = `https://api.artic.edu/api/v1/artworks/search?q=${input}&fields=id,title,artist_title&limit=10`;\n      fetch(searchURL).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        }\n      }).then(({\n        data\n      }: {\n        data: MockedDataResponse[];\n      }) => {\n        const additionalItems = data.map(({\n          id,\n          title,\n          artist_title\n        }) => ({\n          id: id.toString(),\n          name: `${title} by ${artist_title}`\n        }));\n        setAdditionalItems(additionalItems);\n      });\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const debouncedSearch = useCallback(debounce(() => {\n      searchArtwork();\n    }, 500), []);\n    useEffect(() => {\n      const element = document.querySelector('ds-autocomplete');\n      if (element) {\n        const handleOnChange = (event: CustomEvent<{\n          selectedItem: AutocompleteItem;\n        }>) => {\n          setInput(event.detail.selectedItem.name);\n          return action('ds-change')(event);\n        };\n        const handleOnInputValueChange = (event: CustomEvent<{\n          value: string;\n        }>) => {\n          action('ds-input-value-change')(event);\n          setInput(event.detail.value);\n          if (input.length > 2 && input !== event.detail.value) {\n            debouncedSearch();\n          }\n        };\n        element.addEventListener('ds-change', handleOnChange);\n        element.addEventListener('ds-input-value-change', handleOnInputValueChange);\n        return () => {\n          element.removeEventListener('ds-change', handleOnChange);\n          element.removeEventListener('ds-input-value-change', handleOnInputValueChange);\n        };\n      }\n    }, [debouncedSearch, input]);\n    return <ds-autocomplete {...autocompleteArgs} menu-heading={hasResults ? undefined : autocompleteArgs['menu-heading']} onChange={action('onChange')} items={hasResults ? JSON.stringify(additionalItems) : JSON.stringify(items)} />;\n  },\n  args: {\n    label: 'Search for artwork',\n    hint: 'Enter the name of an artist, title, or genre',\n    'menu-heading': 'Popular searches includes:',\n    items: [makeItem('Mountains'), makeItem('Watercolor'), makeItem(\"Georgia O'Keeffe\"), makeItem('City Landscape'), makeItem('Self-Portrait')]\n  },\n  parameters: {\n    fetchMock: {\n      mocks: [searchMock]\n    }\n  }\n}",...AsyncItems.parameters?.docs?.source}}};const __namedExportsOrder=["Default","LabeledList","ItemGroups","GroupsAndStandaloneItems","LoadingMessage","NoResults","AsyncItems"]}}]);