{"version":3,"file":"component---src-components-info-page-tsx-81509619f012e5693ade.js","mappings":"iNAWMA,EAAW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SACxB,EAAqDD,EAAKE,IAAlDC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,gBAAiBC,EAA5C,EAA4CA,KACtCC,GAAQC,EAAAA,EAAAA,KAEd,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAD,CACEP,YAAaA,EACbF,SAAUA,EACVK,KAAMA,EACNC,MAAOA,EACPI,oBAAqBN,MAAAA,OAAF,EAAEA,EAAiBO,MALxC,UAOEH,EAAAA,EAAAA,KAACI,EAAAA,EAAD,CAAiBb,KAAMI,EAAMG,MAAOA,OAmC1C,SAASO,EAAaC,EAAWC,GAC/B,IAAMC,EAAeD,EAAUf,SACzBiB,EAAeH,EAAUd,SAM/B,OACEgB,EAAaE,WAAaD,EAAaC,UACvCF,EAAaG,SAAWF,EAAaE,OAOzC,WAAeC,EAAAA,EAAAA,MAAKtB,EAAUe","sources":["webpack://@cmsgov/cms-design-system-docs/./src/components/InfoPage.tsx"],"sourcesContent":["import { memo } from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from './layout/Layout';\nimport { MdxQuery } from '../helpers/graphQLTypes';\nimport useTheme from '../helpers/useTheme';\nimport ContentRenderer from './content/ContentRenderer';\n\n/**\n * Template for information content pages.\n */\nconst InfoPage = ({ data, location }: MdxQuery) => {\n  const { frontmatter, body, tableOfContents, slug } = data.mdx;\n  const theme = useTheme();\n\n  return (\n    <Layout\n      frontmatter={frontmatter}\n      location={location}\n      slug={slug}\n      theme={theme}\n      tableOfContentsData={tableOfContents?.items}\n    >\n      <ContentRenderer data={body} theme={theme} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      frontmatter {\n        title\n        intro\n        core {\n          githubLink\n          sketchLink\n          storybookLink\n        }\n        healthcare {\n          sketchLink\n          storybookLink\n          githubLink\n        }\n        medicare {\n          sketchLink\n          storybookLink\n          githubLink\n        }\n      }\n      slug\n      body\n      tableOfContents(maxDepth: 3)\n    }\n  }\n`;\n\nfunction compareProps(prevProps, nextProps) {\n  const nextLocation = nextProps.location;\n  const prevLocation = prevProps.location;\n  /*\n  return true if passing nextProps to render would return\n  the same result as passing prevProps to render,\n  otherwise return false\n  */\n  if (\n    nextLocation.pathname === prevLocation.pathname &&\n    nextLocation.search === prevLocation.search\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport default memo(InfoPage, compareProps);\n"],"names":["InfoPage","data","location","mdx","frontmatter","body","tableOfContents","slug","theme","useTheme","_jsx","Layout","tableOfContentsData","items","ContentRenderer","compareProps","prevProps","nextProps","nextLocation","prevLocation","pathname","search","memo"],"sourceRoot":""}