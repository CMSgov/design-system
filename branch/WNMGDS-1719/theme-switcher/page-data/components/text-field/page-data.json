{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/components/text-field",
    "result": {"data":{"mdx":{"id":"133aae96-6e46-5488-b2b4-26ac7a098813","frontmatter":{"title":"Text field","status":null,"relatedUswdsGuidance":"components/form-controls/#text-input"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Text field\",\n  \"relatedUswdsGuidance\": \"components/form-controls/#text-input\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar StorybookExample = makeShortcode(\"StorybookExample\");\nvar PropTable = makeShortcode(\"PropTable\");\nvar ComponentThemeOptions = makeShortcode(\"ComponentThemeOptions\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Text fields allow users to enter any combination of letters, numbers, or symbols of their choosing (unless otherwise restricted). Text fields can span single or multiple lines.\"), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<TextField>\")), mdx(\"p\", null, \"A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TextField\"), \" component renders an input field as well as supporting UI elements like a label, error message, and hint text.\"), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/TextField/TextField.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(\"h3\", null, \"Single line field\"), mdx(StorybookExample, {\n    componentName: \"single text field\",\n    storyId: \"components-text-field--single-line-field\",\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Multiline field\"), mdx(StorybookExample, {\n    componentName: \"multi text field\",\n    storyId: \"components-text-field--multiline-field\",\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Error field\"), mdx(StorybookExample, {\n    componentName: \"error field\",\n    storyId: \"components-text-field--error-field\",\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Success field\"), mdx(StorybookExample, {\n    componentName: \"success text field\",\n    storyId: \"components-text-field--success-field\",\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Disabled field\"), mdx(StorybookExample, {\n    componentName: \"disabled field\",\n    storyId: \"components-text-field--disabled-field\",\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Props\"), mdx(PropTable, {\n    componentName: \"TextField\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, \"Guidance\"), mdx(\"h3\", null, \"When to use\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you can\\u2019t reasonably predict a user\\u2019s answer to a prompt and there might be wide variability in users\\u2019 answers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When using another type of input will make answering more difficult. For example, birthdays and other known dates are easier to type in than they are to select from a calendar picker.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When users want to paste in a response.\")), mdx(\"h3\", null, \"When to consider alternatives\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When users are choosing from a specific set of options. Consider \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1719/theme-switcher/components/checkbox-and-radio/\"\n  }, \"checkboxes, radio buttons\"), \", or a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1719/theme-switcher/components/dropdown/\"\n  }, \"dropdown\"), \" in these cases.\")), mdx(\"h3\", null, \"Usage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't use placeholder text in form fields. Use hint text instead, if you need to provide contextual information. Placeholder text disappears after a user types a value, therefore users will no longer have that text available when they need to review their entries. People who have cognitive or visual disabilities have additional problems with placeholder text.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The length of the text field provides a hint to users as to how much text to write. Do not require users to write paragraphs of text into a single-line \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"input\"), \" box; use a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"textarea\"), \" instead.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Text fields are among the easiest type of input for desktop users but are more difficult for mobile users.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only show error messages or styling after a user has interacted with a particular field.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/design-system/branch/WNMGDS-1719/theme-switcher/guidelines/forms/\"\n  }, \"View the \\\"Forms\\\" guidelines for additional guidance and best practices.\"))), mdx(\"h3\", null, \"Accessibility\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Group each set of thematically related controls in a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fieldset\"), \" element. Use the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"legend\"), \" element to offer a label within each \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fieldset\"), \". The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fieldset\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"legend\"), \" elements make it easier for screen reader users to navigate the form.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keep your form blocks in a vertical pattern. This approach is ideal, from an accessibility standpoint, because of limited vision that makes it hard to scan from left to right.\")), mdx(\"h2\", null, \"Customization\"), mdx(\"p\", null, \"The following Sass variables can be overridden to customize Input/Form components:\"), mdx(ComponentThemeOptions, {\n    componentname: \"text-input\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Form components\"), mdx(ComponentThemeOptions, {\n    componentname: \"form\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Related patterns\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1719/theme-switcher/components/masked-field/\"\n  }, \"Masked field\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1719/theme-switcher/components/date-field/\"\n  }, \"Date field\"))), mdx(\"h3\", null, \"Learn more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1719/theme-switcher/guidelines/forms/\"\n  }, \"Form Guidelines\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.nngroup.com/articles/form-design-placeholders/\"\n  }, \"\\\"Placeholders in Form Fields Are Harmful\\\"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://designnotes.blog.gov.uk/2013/12/05/asking-for-a-date-of-birth/\"\n  }, \"Asking for a date of birth\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://paper.dropbox.com/doc/Text-boxes-8NLlgz9tjR8OzTz2N9wE3\"\n  }, \"GOV.UK text boxes discussion\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.formsthatwork.com/files/Articles/dropdown.pdf\"\n  }, \"Four steps for choosing form elements on the Web (PDF)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#textfield","title":"<TextField>"},{"url":"#guidance","title":"Guidance"},{"url":"#customization","title":"Customization"}]}}},"pageContext":{"id":"133aae96-6e46-5488-b2b4-26ac7a098813"}},
    "staticQueryHashes": ["1050346478","2862643552"]}