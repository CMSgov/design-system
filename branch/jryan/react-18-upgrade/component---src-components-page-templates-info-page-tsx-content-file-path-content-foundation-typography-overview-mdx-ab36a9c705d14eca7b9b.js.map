{"version":3,"file":"component---src-components-page-templates-info-page-tsx-content-file-path-content-foundation-typography-overview-mdx-ab36a9c705d14eca7b9b.js","mappings":"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","sources":["webpack://@cmsgov/cms-design-system-docs/./content/foundation/typography/overview.mdx","webpack://@cmsgov/cms-design-system-docs/./src/components/page-templates/InfoPage.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {ThemeContent} = _components;\n  if (!ThemeContent) _missingMdxReference(\"ThemeContent\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"font-families\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#font-families\",\n    \"aria-label\": \"font families permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Font Families\"), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['core']\n  }, React.createElement(_components.p, null, \"Core uses Open Sans as the base font for the site.\"), React.createElement(_components.p, null, \"The full Open Sans type family consists of a variety of weights including light, regular, semibold, bold, and extrabold which allows for a wide range of type treatments and hierarchies within a page while still maintaining a unified look and feel.\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Open Sans font is used for headings and body content.\"), \"\\n\")), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['cmsgov']\n  }, React.createElement(_components.p, null, \"CMS.gov uses Lexend for headings and Public Sans for all other text.\")), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['healthcare']\n  }, React.createElement(_components.p, null, \"Healthcare.gov uses Open Sans as the base font for the site.\"), React.createElement(_components.p, null, \"The full Open Sans type family consists of a variety of weights including light, regular, semibold, bold, and extrabold which allows for a wide range of type treatments and hierarchies within a page while still maintaining a unified look and feel.\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Open Sans font is used for headings and body content.\"), \"\\n\")), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['medicare']\n  }, React.createElement(_components.p, null, \"Medicare.gov uses Montserrat for headings and Rubik for all other text.\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"web-font-stack\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#web-font-stack\",\n    \"aria-label\": \"web font stack permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Web font stack\"), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['core']\n  }, React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Web font stack:\"), \" Open Sans > Helvetica > Arial > Verdana > Sans-Serif\")), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['cmsgov']\n  }, React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Headings font stack:\"), \" Lexend > Inter > Roboto > Helvetica Neue > Arial Nova > Nimbus Sans > Arial > sans-serif\"), React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Body copy font stack:\"), \" Public Sans > Inter > Roboto > Helvetica Neue > Arial Nova > Nimbus Sans > Arial > sans-serif\")), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['healthcare']\n  }, React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Web font stack:\"), \" Open Sans > Helvetica > Arial > Verdana > Sans-Serif\")), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['medicare']\n  }, React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Headings font stack:\"), \" Montserrat > Avenir > Corbel > URW Gothic > source-sans-pro > sans-serif\"), React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Body copy font stack:\"), \" Rubik > Seravek > Gill Sans Nova > Ubuntu > Calibri > DejaVu Sans > source-sans-pro > sans-serif\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"working-with-these-fonts\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#working-with-these-fonts\",\n    \"aria-label\": \"working with these fonts permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Working with these fonts\"), \"\\n\", React.createElement(_components.p, null, \"The design system provides guidance for \", React.createElement(_components.a, {\n    href: \"/design-system/branch/jryan/react-18-upgrade/foundation/typography/headings/\"\n  }, \"headings\"), \", \", React.createElement(_components.a, {\n    href: \"/design-system/branch/jryan/react-18-upgrade/foundation/typography/body/\"\n  }, \"body copy\"), \", \", React.createElement(_components.a, {\n    href: \"/design-system/branch/jryan/react-18-upgrade/foundation/typography/links/\"\n  }, \"links\"), \", and \", React.createElement(_components.a, {\n    href: \"/design-system/branch/jryan/react-18-upgrade/foundation/typography/lists/\"\n  }, \"lists\"), \".\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"the-ds-content-class\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#the-ds-content-class\",\n    \"aria-label\": \"the ds content class permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"The \", React.createElement(_components.code, null, \"ds-content\"), \" class\"), \"\\n\", React.createElement(_components.p, null, \"For pages that are mainly about written content or places where you want to use a standard mapping of heading-level styles to semantic heading levels, consider using the \", React.createElement(_components.a, {\n    href: \"/design-system/branch/jryan/react-18-upgrade/foundation/typography/content/\"\n  }, React.createElement(_components.code, null, \"ds-content\"), \" class\"), \".\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"responsive-typography\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#responsive-typography\",\n    \"aria-label\": \"responsive typography permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Responsive typography\"), \"\\n\", React.createElement(_components.p, null, \"To apply responsive typography elsewhere, use the \", React.createElement(_components.a, {\n    href: \"/design-system/branch/jryan/react-18-upgrade/utilities/font/font-size/#responsive-font-sizes\"\n  }, \"font size utility class\"), \". Since the base typography margins and line height is measured in em units, they'll automatically adjust as you change the font size.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"accessibility\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#accessibility\",\n    \"aria-label\": \"accessibility permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Accessibility\"), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['core']\n  }, React.createElement(_components.p, null, \"Sans-serifs have been proven to be easier to read on-screen and are incredibly adaptable when resized and displayed across different platforms and browsers. Accordingly, Open Sans is used for body type, secondary and tertiary headlines, and instructional text.\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Standard body text is Open Sans Regular, 16px, #333, 24px line-height, 32px bottom-margin on paragraphs.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Smallest paragraph text for legibility reasons is Open Sans Regular, 14px, #333, 20px line-height, 28px bottom-margin on paragraphs (except for legal/caption text).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Uppercase font should not be used.\"), \"\\n\"), \"\\n\")), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['cmsgov']\n  }, React.createElement(_components.p, null, \"Sans-serifs have been proven to be easier to read on-screen and are incredibly adaptable when resized and displayed across different platforms and browsers. Accordingly, Public Sans is used for body type, secondary and tertiary headlines, and instructional text.\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Standard body text is Public Sans Regular, 16px, #333, 24px line-height, 32px bottom-margin on paragraphs.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Smallest paragraph text for legibility reasons is Public Sans Regular, 14px, #333, 20px line-height, 28px bottom-margin on paragraphs (except for legal/caption text).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Uppercase font should not be used.\"), \"\\n\"), \"\\n\")), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['healthcare']\n  }, React.createElement(_components.p, null, \"Sans-serifs have been proven to be easier to read on-screen and are incredibly adaptable when resized and displayed across different platforms and browsers. Accordingly, Open Sans is used for body type, secondary and tertiary headlines, and instructional text.\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Standard body text is Open Sans Regular, 16px, #333, 24px line-height, 32px bottom-margin on paragraphs.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Smallest paragraph text for legibility reasons is Open Sans Regular, 14px, #333, 20px line-height, 28px bottom-margin on paragraphs (except for legal/caption text).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Uppercase font should not be used.\"), \"\\n\"), \"\\n\")), \"\\n\", React.createElement(ThemeContent, {\n    onlyThemes: ['medicare']\n  }, React.createElement(_components.p, null, \"Sans-serifs have been proven to be easier to read on-screen and are incredibly adaptable when resized and displayed across different platforms and browsers. Accordingly, Rubik is used for body type, secondary and tertiary headlines, and instructional text.\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Standard body text is Rubik Regular, 16px, #333, 24px line-height, 32px bottom-margin on paragraphs.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Smallest paragraph text for legibility reasons is Rubik Regular, 14px, #333, 20px line-height, 28px bottom-margin on paragraphs (except for legal/caption text).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Uppercase font should not be used.\"), \"\\n\"), \"\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/kimniedermaier/code/spoc/design-system/packages/docs/content/foundation/typography/overview.mdx\";\nimport ContentRenderer from '../content/ContentRenderer';\nimport Layout from '../layout/Layout';\nimport SEO from '../layout/DocSiteSeo';\nimport useTheme from '../../helpers/useTheme';\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nconst InfoPage = _ref => {\n  let {children, data, location} = _ref;\n  const {frontmatter, tableOfContents, fields: {slug}} = data.mdx;\n  const theme = useTheme();\n  return _jsx(Layout, {\n    frontmatter: frontmatter,\n    location: location,\n    slug: slug,\n    theme: theme,\n    tableOfContentsData: tableOfContents === null || tableOfContents === void 0 ? void 0 : tableOfContents.items,\n    children: _jsx(ContentRenderer, {\n      theme: theme,\n      location: location,\n      children: children\n    })\n  });\n};\nexport const Head = _ref2 => {\n  let {data, location} = _ref2;\n  const {frontmatter, fields: {slug}} = data.mdx;\n  return _jsx(SEO, {\n    frontmatter: frontmatter,\n    slug: slug,\n    location: location\n  });\n};\nconst query = \"3373280226\";\nInfoPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(InfoPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","span","p","ul","li","strong","h3","code","_provideComponents","components","ThemeContent","id","component","Error","_missingMdxReference","React","style","position","href","className","dangerouslySetInnerHTML","__html","onlyThemes","wrapper","MDXLayout","InfoPage","_ref","children","data","location","frontmatter","tableOfContents","fields","slug","mdx","theme","useTheme","_jsx","Layout","tableOfContentsData","items","ContentRenderer","Head","_ref2","SEO","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}