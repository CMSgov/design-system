"use strict";(globalThis.webpackChunkdesign_system=globalThis.webpackChunkdesign_system||[]).push([[2607],{"./.storybook/docs/WebComponentDocTemplate.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>MDXContent});__webpack_require__("./node_modules/preact/compat/dist/compat.module.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs"),_Users_kimniedermaier_code_spoc_design_system_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_WebComponentAttrs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.storybook/docs/WebComponentAttrs.tsx"),_WebComponentArgsTable__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./.storybook/docs/WebComponentArgsTable.tsx"),_WebComponentEventsTable__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./.storybook/docs/WebComponentEventsTable.tsx"),_WebComponentSlotsTable__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./.storybook/docs/WebComponentSlotsTable.tsx");function _createMdxContent(props){const _components={h2:"h2",hr:"hr",...(0,_Users_kimniedermaier_code_spoc_design_system_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_6__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.FD)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.FK,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_7__.W8,{isTemplate:!0}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_7__.hE,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_7__.Pd,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_7__.VY,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_7__.Tn,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_components.h2,{id:"attributes",children:"Attributes"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_WebComponentArgsTable__WEBPACK_IMPORTED_MODULE_3__.t,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_WebComponentAttrs__WEBPACK_IMPORTED_MODULE_2__.I,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_WebComponentSlotsTable__WEBPACK_IMPORTED_MODULE_5__.F,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_WebComponentEventsTable__WEBPACK_IMPORTED_MODULE_4__.B,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_components.hr,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_7__.om,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_Users_kimniedermaier_code_spoc_design_system_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_6__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./packages/design-system/src/components/web-components/ds-date-field/ds-date-field.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithError:()=>WithError,WithPicker:()=>WithPicker,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ds_date_field_stories});var compat_module=__webpack_require__("./node_modules/preact/compat/dist/compat.module.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),WebComponentDocTemplate=__webpack_require__("./.storybook/docs/WebComponentDocTemplate.mdx"),storybook=__webpack_require__("./packages/design-system/src/components/web-components/storybook.tsx"),preactement_define=__webpack_require__("./packages/design-system/src/components/web-components/preactement/define.ts"),SingleInputDateField=__webpack_require__("./packages/design-system/src/components/DateField/SingleInputDateField.tsx"),wrapperUtils=__webpack_require__("./packages/design-system/src/components/web-components/wrapperUtils.ts"),shared_attributes_form=__webpack_require__("./packages/design-system/src/components/web-components/shared-attributes/form.ts"),jsx_runtime=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const attributes=["name","root-id","inversed","value","default-month","from-date","from-month","from-year","to-date","to-month","to-year",...shared_attributes_form.p],Wrapper=_ref=>{let{rootId,inversed,defaultMonth,fromDate,fromMonth,fromYear,toDate,toMonth,toYear,value,...otherProps}=_ref;return(0,jsx_runtime.Y)(SingleInputDateField.A,{id:rootId,inversed:(0,wrapperUtils.$Q)(inversed),defaultValue:value,defaultMonth:(0,wrapperUtils.tv)(defaultMonth),fromDate:(0,wrapperUtils.tv)(fromDate),fromMonth:(0,wrapperUtils.tv)(fromMonth),fromYear:(0,wrapperUtils.Tt)(fromYear),toDate:(0,wrapperUtils.tv)(toDate),toMonth:(0,wrapperUtils.tv)(toMonth),toYear:(0,wrapperUtils.Tt)(toYear),...otherProps})};(0,preactement_define.E)("ds-date-field",(()=>Wrapper),{attributes,events:[["onChange",(updatedValue,formattedValue)=>({detail:{updatedValue,formattedValue}})],"onBlur"]});const formatDateArg=dateArg=>"number"==typeof dateArg?new Date(dateArg).toISOString():dateArg,ds_date_field_stories={title:"Web Components/ds-date-field",decorators:[storybook.V],parameters:{docs:{page:WebComponentDocTemplate.A,componentEvents:{"ds-change":{description:"Called anytime any date input is changed. This function is called with two arguments. The first argument should be used to update whatever state your application uses to supply back to this component's `value` prop in a _controlled component_ pattern.",eventObjectDescription:"`event.detail.updatedValue` - The input's new value, `event.detail.formattedValue` - The input's new value with date formatting applied for convenience. Do not use this value as the component's `value` prop. An appropriate use for this value would be to run date-validation checks against it."},"ds-blur":{description:"Dispatched whenever the date input loses focus."}}}},args:{hint:"If you were born on a leap day, entering the date will either crash our servers or open a portal to an alternate dimension.",label:"Enter your date of birth.",name:"ds-date-field"},argTypes:{name:{description:"The `input` field's `name` attribute.",control:"text"},"root-id":{description:"A unique ID for this element. A unique ID will be generated if one isn't provided.",control:"text"},inversed:{description:'Set to `true` to apply the "inverse" color scheme.',control:"boolean"},value:{description:"The `input` field's `value` attribute. Typically not used for uncontrolled components (web components).",control:"text"},"default-value":{description:"Sets the initial value for the component. This value will be used until the user changes the input, at which point the new value will be handled by the component's internal state.\n                    The `onChange` event will still be triggered with the updated value, but the component will manage the state internally.",control:"text"},"default-month":{description:"The initial month to show in the calendar picker. If not provided, defaults to the month of the currently selected date.",control:"date"},"from-date":{description:"Earliest day to start month navigation in the calendar picker. (This does not restrict dates entered manually.)",control:"date"},"from-month":{description:"Earliest month to start month navigation in the calendar picker. (This does not restrict dates entered manually.)",control:"date"},"from-year":{description:"Earliest year to start month navigation in the calendar picker. (This does not restrict dates entered manually.)",control:"text"},"to-date":{description:"Latest day to end month navigation in the calendar picker. (This does not restrict dates entered manually.)",control:"date"},"to-month":{description:"Latest month to end month navigation in the calendar picker. (This does not restrict dates entered manually.)",control:"date"},"to-year":{description:"Latest year to end month navigation in the calendar picker. (This does not restrict dates entered manually.)",control:"text"},hint:{description:"Hint text or HTML.",control:"text"},"hint-class-name":{control:"text",description:"Custom CSS class name(s) for the hint element"},"hint-id":{description:"The ID of the hint element",control:"text"},label:{description:"Label text or HTML.",control:"text"},"label-class-name":{description:"Additional classes to be added to the field label",control:"text"},"label-id":{description:"A unique `id` to be used on the field label. If one isn't provided, a unique ID will be generated.",control:"text"},"requirement-label":{description:'Text showing the requirement (e.g., "Optional", or "Required"). In most cases, this should be used to indicate which fields are optional. See the [form guidelines](https://design.cms.gov/patterns/Forms/forms/) for more info.',control:"text"},"error-message":{description:"Enable the error state by providing an error message.",control:"text"},"error-id":{description:"The ID of the error message applied to this field. If none is provided, the id will be derived from the `root-id` attribute.",control:"text"},"error-placement":{description:"Location of the error message relative to the field input",options:["top","bottom"],control:{type:"radio"}}}},Template=args=>{(0,compat_module.useEffect)((()=>{const element=document.querySelector("ds-date-field");if(element){const handleStoryBookChange=event=>{(0,dist.XI)("ds-change")(event)},handleStoryBookBlur=event=>{(0,dist.XI)("ds-blur")(event)};return element.addEventListener("ds-change",handleStoryBookChange),element.addEventListener("ds-blur",handleStoryBookBlur),()=>{element.removeEventListener("ds-change",handleStoryBookChange),element.removeEventListener("ds-blur",handleStoryBookBlur)}}}),[]);const formattedArgs={...args,"to-date":formatDateArg(args["to-date"]),"to-month":formatDateArg(args["to-month"]),"from-month":formatDateArg(args["from-month"]),"default-month":formatDateArg(args["default-month"]),"from-date":formatDateArg(args["from-date"])};return(0,jsx_runtime.Y)("ds-date-field",{...formattedArgs})},Default=Template.bind({});Default.args={name:"ds-date-field"};const WithPicker=Template.bind({});WithPicker.args={label:"What day did you move?",hint:"This date should be within the past 60 days in order to qualify.","from-year":"2023","to-date":new Date("2023-02-15T21:56:34.272Z").toISOString()};const WithError=Template.bind({});WithError.args={"error-message":"This is an example error message.",...WithPicker.args};const __namedExportsOrder=["Default","WithPicker","WithError"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  useEffect(() => {\n    const element = document.querySelector('ds-date-field');\n    if (element) {\n      const handleStoryBookChange = (event: CustomEvent<{\n        updatedValue: string;\n        formattedValue: string;\n      }>) => {\n        action('ds-change')(event);\n      };\n      const handleStoryBookBlur = (event: Event) => {\n        action('ds-blur')(event);\n      };\n      element.addEventListener('ds-change', handleStoryBookChange as EventListener);\n      element.addEventListener('ds-blur', handleStoryBookBlur as EventListener);\n      return () => {\n        element.removeEventListener('ds-change', handleStoryBookChange as EventListener);\n        element.removeEventListener('ds-blur', handleStoryBookBlur as EventListener);\n      };\n    }\n  }, []);\n  const formattedArgs = {\n    ...args,\n    'to-date': formatDateArg(args['to-date']),\n    'to-month': formatDateArg(args['to-month']),\n    'from-month': formatDateArg(args['from-month']),\n    'default-month': formatDateArg(args['default-month']),\n    'from-date': formatDateArg(args['from-date'])\n  };\n  return <ds-date-field {...formattedArgs} />;\n}",...Default.parameters?.docs?.source}}},WithPicker.parameters={...WithPicker.parameters,docs:{...WithPicker.parameters?.docs,source:{originalSource:"args => {\n  useEffect(() => {\n    const element = document.querySelector('ds-date-field');\n    if (element) {\n      const handleStoryBookChange = (event: CustomEvent<{\n        updatedValue: string;\n        formattedValue: string;\n      }>) => {\n        action('ds-change')(event);\n      };\n      const handleStoryBookBlur = (event: Event) => {\n        action('ds-blur')(event);\n      };\n      element.addEventListener('ds-change', handleStoryBookChange as EventListener);\n      element.addEventListener('ds-blur', handleStoryBookBlur as EventListener);\n      return () => {\n        element.removeEventListener('ds-change', handleStoryBookChange as EventListener);\n        element.removeEventListener('ds-blur', handleStoryBookBlur as EventListener);\n      };\n    }\n  }, []);\n  const formattedArgs = {\n    ...args,\n    'to-date': formatDateArg(args['to-date']),\n    'to-month': formatDateArg(args['to-month']),\n    'from-month': formatDateArg(args['from-month']),\n    'default-month': formatDateArg(args['default-month']),\n    'from-date': formatDateArg(args['from-date'])\n  };\n  return <ds-date-field {...formattedArgs} />;\n}",...WithPicker.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:"args => {\n  useEffect(() => {\n    const element = document.querySelector('ds-date-field');\n    if (element) {\n      const handleStoryBookChange = (event: CustomEvent<{\n        updatedValue: string;\n        formattedValue: string;\n      }>) => {\n        action('ds-change')(event);\n      };\n      const handleStoryBookBlur = (event: Event) => {\n        action('ds-blur')(event);\n      };\n      element.addEventListener('ds-change', handleStoryBookChange as EventListener);\n      element.addEventListener('ds-blur', handleStoryBookBlur as EventListener);\n      return () => {\n        element.removeEventListener('ds-change', handleStoryBookChange as EventListener);\n        element.removeEventListener('ds-blur', handleStoryBookBlur as EventListener);\n      };\n    }\n  }, []);\n  const formattedArgs = {\n    ...args,\n    'to-date': formatDateArg(args['to-date']),\n    'to-month': formatDateArg(args['to-month']),\n    'from-month': formatDateArg(args['from-month']),\n    'default-month': formatDateArg(args['default-month']),\n    'from-date': formatDateArg(args['from-date'])\n  };\n  return <ds-date-field {...formattedArgs} />;\n}",...WithError.parameters?.docs?.source}}}},"./packages/design-system/src/components/DateField/SingleInputDateField.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DateField_SingleInputDateField});var compat_module=__webpack_require__("./node_modules/preact/compat/dist/compat.module.js"),ArrowIcon=__webpack_require__("./packages/design-system/src/components/Icons/ArrowIcon.tsx"),index_esm=__webpack_require__("./node_modules/react-day-picker/dist/index.esm.js"),jsx_runtime=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");function CustomDayPickerCaption(props){const{classNames,styles,labels:{labelPrevious,labelNext},locale,onMonthChange}=(0,index_esm.wj)(),{previousMonth,nextMonth,goToMonth}=(0,index_esm.cq)(),previousLabel=labelPrevious(previousMonth,{locale}),nextLabel=labelNext(nextMonth,{locale});return(0,jsx_runtime.FD)("div",{className:classNames.caption,style:styles.caption,children:[(0,jsx_runtime.Y)("button",{"aria-label":previousLabel,className:"ds-c-single-input-date-field__nav",onClick:()=>{previousMonth&&(goToMonth(previousMonth),onMonthChange?.(previousMonth))},type:"button",disabled:!previousMonth,children:(0,jsx_runtime.Y)(ArrowIcon.H,{direction:"left"})}),(0,jsx_runtime.Y)(index_esm.xQ,{displayMonth:props.displayMonth,id:props.id}),(0,jsx_runtime.Y)("button",{"aria-label":nextLabel,className:"ds-c-single-input-date-field__nav",onClick:()=>{nextMonth&&(goToMonth(nextMonth),onMonthChange?.(nextMonth))},type:"button",disabled:!nextMonth,children:(0,jsx_runtime.Y)(ArrowIcon.H,{direction:"right"})})]})}const DateField_CustomDayPickerCaption=CustomDayPickerCaption;try{CustomDayPickerCaption.displayName="CustomDayPickerCaption",CustomDayPickerCaption.__docgenInfo={description:"Implements custom month/year navigation controls and caption for the DayPicker\ncomponent. Much of this code is copied out of the `react-day-picker` source and\nthen modified to fit our needs.",displayName:"CustomDayPickerCaption",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/DateField/CustomDayPickerCaption.tsx#CustomDayPickerCaption"]={docgenInfo:CustomDayPickerCaption.__docgenInfo,name:"CustomDayPickerCaption",path:"packages/design-system/src/components/DateField/CustomDayPickerCaption.tsx#CustomDayPickerCaption"})}catch(__react_docgen_typescript_loader_error){}var format=__webpack_require__("./node_modules/date-fns/format.mjs"),ArrowsStackedIcon=__webpack_require__("./packages/design-system/src/components/Icons/ArrowsStackedIcon.tsx"),i18n=__webpack_require__("./packages/design-system/src/components/i18n.ts");function CustomDayPickerDayContent(props){const{locale,classNames,styles,labels:{labelDay},formatters:{formatDay}}=(0,index_esm.wj)();return(0,jsx_runtime.FD)(jsx_runtime.FK,{children:[(0,jsx_runtime.Y)("span",{"aria-hidden":"true",children:formatDay(props.date,{locale})}),(0,jsx_runtime.Y)("span",{className:classNames.vhidden,style:styles.vhidden,children:labelDay(props.date,props.activeModifiers,{locale})})]})}try{CustomDayPickerDayContent.displayName="CustomDayPickerDayContent",CustomDayPickerDayContent.__docgenInfo={description:"Render the content of the day cell.",displayName:"CustomDayPickerDayContent",props:{date:{defaultValue:null,description:"The date representing the day.",name:"date",required:!0,type:{name:"Date"}},displayMonth:{defaultValue:null,description:"The month where the day is displayed.",name:"displayMonth",required:!0,type:{name:"Date"}},activeModifiers:{defaultValue:null,description:"The active modifiers for the given date.",name:"activeModifiers",required:!0,type:{name:"ActiveModifiers"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/DateField/CustomDayPickerDayContent.tsx#CustomDayPickerDayContent"]={docgenInfo:CustomDayPickerDayContent.__docgenInfo,name:"CustomDayPickerDayContent",path:"packages/design-system/src/components/DateField/CustomDayPickerDayContent.tsx#CustomDayPickerDayContent"})}catch(__react_docgen_typescript_loader_error){}function formatMonthCaption(month,options){return(0,format.GP)(month,"LLL",options)}function CustomDayPicker(props){return(0,jsx_runtime.Y)(index_esm.hv,{mode:"single",footer:(0,jsx_runtime.Y)("span",{className:"ds-u-visibility--screen-reader",children:(0,i18n.t)("singleInputDateField.arrowKeyInstructions")}),captionLayout:"dropdown",components:{Caption:DateField_CustomDayPickerCaption,IconDropdown:ArrowsStackedIcon.H,DayContent:CustomDayPickerDayContent},formatters:{formatMonthCaption},...props})}const DateField_CustomDayPicker=CustomDayPicker;try{formatMonthCaption.displayName="formatMonthCaption",formatMonthCaption.__docgenInfo={description:"The default formatter for the Month caption.",displayName:"formatMonthCaption",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/DateField/CustomDayPicker.tsx#formatMonthCaption"]={docgenInfo:formatMonthCaption.__docgenInfo,name:"formatMonthCaption",path:"packages/design-system/src/components/DateField/CustomDayPicker.tsx#formatMonthCaption"})}catch(__react_docgen_typescript_loader_error){}try{CustomDayPicker.displayName="CustomDayPicker",CustomDayPicker.__docgenInfo={description:"",displayName:"CustomDayPicker",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/DateField/CustomDayPicker.tsx#CustomDayPicker"]={docgenInfo:CustomDayPicker.__docgenInfo,name:"CustomDayPicker",path:"packages/design-system/src/components/DateField/CustomDayPicker.tsx#CustomDayPicker"})}catch(__react_docgen_typescript_loader_error){}var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),cleanFieldProps=__webpack_require__("./packages/design-system/src/components/utilities/cleanFieldProps.ts"),describeField=__webpack_require__("./packages/design-system/src/components/utilities/describeField.ts"),isMatch=__webpack_require__("./node_modules/date-fns/isMatch.mjs"),mergeIds=__webpack_require__("./packages/design-system/src/components/utilities/mergeIds.ts"),useLabelMask=__webpack_require__("./packages/design-system/src/components/TextField/useLabelMask.tsx"),useClickOutsideHandler=__webpack_require__("./packages/design-system/src/components/utilities/useClickOutsideHandler.ts"),usePressEscapeHandler=__webpack_require__("./packages/design-system/src/components/utilities/usePressEscapeHandler.ts"),useId=__webpack_require__("./packages/design-system/src/components/utilities/useId.ts"),CalendarIcon=__webpack_require__("./packages/design-system/src/components/Icons/CalendarIcon.tsx"),Label=__webpack_require__("./packages/design-system/src/components/Label/Label.tsx"),TextInput=__webpack_require__("./packages/design-system/src/components/TextField/TextInput.tsx"),useLabelProps=__webpack_require__("./packages/design-system/src/components/Label/useLabelProps.ts"),useHint=__webpack_require__("./packages/design-system/src/components/Hint/useHint.tsx"),useInlineError=__webpack_require__("./packages/design-system/src/components/InlineError/useInlineError.tsx");const SingleInputDateField=props=>{const{className,onChange,defaultMonth,fromDate,fromMonth,fromYear,toDate,toMonth,toYear,...remainingProps}=props,withPicker=(null!=fromDate||null!=fromMonth||Number.isInteger(fromYear))&&(null!=toDate||null!=toMonth||Number.isInteger(toYear)),[pickerVisible,setPickerVisible]=(0,compat_module.useState)(!1),id=(0,useId.A)("date-field--",props.id),isControlled=void 0!==remainingProps.value,[internalValueState,setInternalValueState]=(0,compat_module.useState)(remainingProps.defaultValue),value=isControlled?remainingProps.value:internalValueState,{errorId,topError,bottomError,invalid}=(0,useInlineError.h)({...props,id}),{hintId,hintElement}=(0,useHint.n)({...props,id}),labelProps=(0,useLabelProps.S)({...props,id}),inputRef=(0,compat_module.useRef)(),{labelMask,inputProps}=(0,useLabelMask.Ay)(useLabelMask.ss,{...(0,cleanFieldProps.A)(remainingProps),value,id,onChange:event=>{const updatedValue=event.currentTarget.value;onChange&&onChange(updatedValue,(0,useLabelMask.ss)(updatedValue,!0)),isControlled||setInternalValueState(updatedValue)},type:"text",inputRef,"aria-invalid":invalid,"aria-describedby":(0,describeField.A)({...props,errorId,hintId})}),dayPickerRef=(0,compat_module.useRef)(),calendarButtonRef=(0,compat_module.useRef)();(0,useClickOutsideHandler.A)([dayPickerRef,calendarButtonRef],(()=>setPickerVisible(!1))),(0,usePressEscapeHandler.A)(dayPickerRef,(()=>{setPickerVisible(!1),inputRef.current?.focus()}));const dateString=(0,useLabelMask.ss)(props.value,!0),date=(0,isMatch.u)(dateString,"MM/dd/yyyy")?new Date(dateString):null;return(0,jsx_runtime.FD)("div",{className:classnames_default()("ds-c-single-input-date-field",withPicker&&"ds-c-single-input-date-field--with-picker",className),children:[(0,jsx_runtime.Y)(Label.J,{...labelProps,fieldId:id}),hintElement,topError,labelMask,(0,jsx_runtime.FD)("div",{className:"ds-c-single-input-date-field__field-wrapper",children:[(0,jsx_runtime.Y)(TextInput.A,{...inputProps}),withPicker&&(0,jsx_runtime.Y)("button",{className:"ds-c-single-input-date-field__button",onClick:()=>setPickerVisible(!pickerVisible),type:"button",ref:calendarButtonRef,"aria-describedby":(0,mergeIds.A)(labelProps.id,hintId),children:(0,jsx_runtime.Y)(CalendarIcon.C,{ariaHidden:!1,title:(0,i18n.t)(pickerVisible?"singleInputDateField.close":"singleInputDateField.open"),id:`${id}__icon`})})]}),pickerVisible&&(0,jsx_runtime.Y)("div",{ref:dayPickerRef,role:"dialog",children:(0,jsx_runtime.Y)(DateField_CustomDayPicker,{selected:date,onSelect:date=>{const updatedValue=`${date.getMonth()+1}/${date.getDate()}/${date.getFullYear()}`,maskedValue=(0,useLabelMask.ss)(updatedValue);onChange&&onChange(maskedValue,(0,useLabelMask.ss)(updatedValue,!0)),isControlled||setInternalValueState(maskedValue),setPickerVisible(!1),inputRef.current?.focus()},defaultMonth:date??defaultMonth,fromDate,fromMonth,fromYear,toDate,toMonth,toYear})}),bottomError]})},DateField_SingleInputDateField=SingleInputDateField;try{SingleInputDateField.displayName="SingleInputDateField",SingleInputDateField.__docgenInfo={description:"For information about how and when to use this component, refer to the\n[Single Input Date Field](https://design.cms.gov/components/date-field/single-input-date-field/) and\n[Calendar Picker](https://design.cms.gov/components/date-field/date-picker/) documentation pages.",displayName:"SingleInputDateField",props:{name:{defaultValue:null,description:"The `input` field's `name` attribute",name:"name",required:!0,type:{name:"string"}},onBlur:{defaultValue:null,description:"Called anytime any date input is blurred",name:"onBlur",required:!1,type:{name:"(event: FocusEvent<HTMLInputElement, Element>) => any"}},onChange:{defaultValue:null,description:"Called anytime any date input is changed. This function is called with two arguments.\nThe first argument should be used to update whatever state your application uses to\nsupply back to this component's `value` prop in a _controlled component_ pattern.\n@param updatedValue - The input's new value\n@param formattedValue - The input's new value with date formatting applied, included\nfor convenience. Do not use this value as the component's `value` prop. An appropriate\nuse for this value would be to run date-validation checks against it.",name:"onChange",required:!1,type:{name:"(updatedValue: string, formattedValue: string) => any"}},id:{defaultValue:null,description:"A unique ID for this element. A unique ID will be generated if one isn't provided.",name:"id",required:!1,type:{name:"string"}},inversed:{defaultValue:null,description:'Set to `true` to apply the "inverse" color scheme',name:"inversed",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"Sets the input's `value`. Use in combination with an `onChange` handler to implement\na _controlled component_ pattern. This component expects the `value` to match\nwhatever string the user types (i.e., the first argument provided to your `onChange`\nhandler).",name:"value",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Sets the initial value. Use this for an uncontrolled component; otherwise,\nuse the `value` property.",name:"defaultValue",required:!1,type:{name:"string"}},defaultMonth:{defaultValue:null,description:"The initial month to show in the calendar picker. If not provided, defaults to the\nmonth of the currently selected date.",name:"defaultMonth",required:!1,type:{name:"Date"}},fromDate:{defaultValue:null,description:"Earliest day to start month navigation in the calendar picker.\n(This does not restrict dates entered manually.)",name:"fromDate",required:!1,type:{name:"Date"}},fromMonth:{defaultValue:null,description:"Earliest month to start month navigation in the calendar picker.\n(This does not restrict dates entered manually.)",name:"fromMonth",required:!1,type:{name:"Date"}},fromYear:{defaultValue:null,description:"Earliest year to start month navigation in the calendar picker.\n(This does not restrict dates entered manually.)",name:"fromYear",required:!1,type:{name:"number"}},toDate:{defaultValue:null,description:"Latest day to end month navigation in the calendar picker.\n(This does not restrict dates entered manually.)",name:"toDate",required:!1,type:{name:"Date"}},toMonth:{defaultValue:null,description:"Latest month to end month navigation in the calendar picker.\n(This does not restrict dates entered manually.)",name:"toMonth",required:!1,type:{name:"Date"}},toYear:{defaultValue:null,description:"Latest year to end month navigation in the calendar picker.\n(This does not restrict dates entered manually.)",name:"toYear",required:!1,type:{name:"number"}},numeric:{defaultValue:null,description:'Sets `inputMode`, `type`, and `pattern` to improve accessibility and consistency for number fields. Use this prop instead of `type="number"`, see [here](https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/) for more information.',name:"numeric",required:!1,type:{name:"boolean"}},ariaLabel:{defaultValue:null,description:"Apply an `aria-label` to the text field to provide additional\ncontext to assistive devices.",name:"ariaLabel",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"Set the max-width of the input either to `'small'` or `'medium'`.",name:"size",required:!1,type:{name:"enum",value:[{value:'"medium"'},{value:'"small"'}]}},fieldClassName:{defaultValue:null,description:"Additional classes to be added to the field element",name:"fieldClassName",required:!1,type:{name:"string"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"Ref<any> | MutableRefObject<any>"}},multiline:{defaultValue:null,description:"Whether or not the text field is a multiline text field",name:"multiline",required:!1,type:{name:"boolean"}},rows:{defaultValue:null,description:"Optionally specify the number of visible text lines for the field. Only\napplicable if this is a multiline field.",name:"rows",required:!1,type:{name:"TextInputRows"}},requirementLabel:{defaultValue:null,description:'Text showing the requirement ("Required", "Optional", etc.). See [Required and Optional Fields](https://design.cms.gov/patterns/Forms/forms/#required-and-optional-fields).',name:"requirementLabel",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Label for the field.",name:"label",required:!0,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Additional hint text to display",name:"hint",required:!1,type:{name:"ReactNode"}},labelClassName:{defaultValue:null,description:"Additional classes to be added to the label",name:"labelClassName",required:!1,type:{name:"string"}},labelId:{defaultValue:null,description:"A unique `id` to be used on the field label. If one isn't provided, a unique ID\nwill be generated.",name:"labelId",required:!1,type:{name:"string"}},hintId:{defaultValue:null,description:"The ID of the hint element",name:"hintId",required:!1,type:{name:"string"}},hintClassName:{defaultValue:null,description:"Custom CSS class name(s) for the hint element",name:"hintClassName",required:!1,type:{name:"string"}},errorId:{defaultValue:null,description:"The ID of the error message applied to this field. If none is provided, the id\nwill be derived from the `id` prop for the field.",name:"errorId",required:!1,type:{name:"string"}},errorPlacement:{defaultValue:null,description:"Location of the error message relative to the field input",name:"errorPlacement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"top"'}]}},errorMessage:{defaultValue:null,description:"Enable the error state by providing an error message.",name:"errorMessage",required:!1,type:{name:"ReactNode"}},errorMessageClassName:{defaultValue:null,description:"Additional classes to be added to the error message",name:"errorMessageClassName",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/DateField/SingleInputDateField.tsx#SingleInputDateField"]={docgenInfo:SingleInputDateField.__docgenInfo,name:"SingleInputDateField",path:"packages/design-system/src/components/DateField/SingleInputDateField.tsx#SingleInputDateField"})}catch(__react_docgen_typescript_loader_error){}},"./packages/design-system/src/components/Icons/ArrowIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>ArrowIcon});var _SvgIcon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/design-system/src/components/Icons/SvgIcon.tsx"),classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),_i18n__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/design-system/src/components/i18n.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const defaultProps={className:"",direction:"right",viewBox:"0 0 320 512"};function ArrowIcon(props){const direction=props.direction||defaultProps.direction,iconCssClasses=classnames__WEBPACK_IMPORTED_MODULE_0___default()("ds-c-icon--arrow",`ds-c-icon--arrow-${direction}`,props.className);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)(_SvgIcon__WEBPACK_IMPORTED_MODULE_2__.A,{title:(0,_i18n__WEBPACK_IMPORTED_MODULE_3__.t)(`icons.${direction}Arrow`),...defaultProps,...props,className:iconCssClasses,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)("path",{fill:"currentColor",d:"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"})})}try{ArrowIcon.displayName="ArrowIcon",ArrowIcon.__docgenInfo={description:"",displayName:"ArrowIcon",props:{direction:{defaultValue:null,description:"",name:"direction",required:!1,type:{name:"enum",value:[{value:'"down"'},{value:'"left"'},{value:'"right"'},{value:'"up"'}]}},className:{defaultValue:null,description:"Additional CSS classes to be added to the svg element",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"A custom `id` attribute for the SVG",name:"id",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"The descriptive name for the SVG icon",name:"title",required:!1,type:{name:"string"}},inversed:{defaultValue:null,description:"If `true` sets inverse fill color. Default is `false`.",name:"inversed",required:!1,type:{name:"boolean"}},ariaHidden:{defaultValue:null,description:"Describes the value of the `aria-hidden` attribute on the SVG. Defaulted to true with the assumption that most icons are decorative.\nIf the icon does not have any associated label text, set this to `false` and ensure a `title` is provided for improved accessibility.",name:"ariaHidden",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Long-text description of any SVG. Use for complex icons, otherwise `title` prop will suffice.",name:"description",required:!1,type:{name:"string"}},viewBox:{defaultValue:null,description:"A string describing the viewbox of the SVG.\n\nIt is recommended that the icon is centered and fill up the default viewport size.\nSee [this blog post](https://webdesign.tutsplus.com/tutorials/svg-viewport-and-viewbox-for-beginners--cms-30844) for further explanation on viewBox and how to use it.",name:"viewBox",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/Icons/ArrowIcon.tsx#ArrowIcon"]={docgenInfo:ArrowIcon.__docgenInfo,name:"ArrowIcon",path:"packages/design-system/src/components/Icons/ArrowIcon.tsx#ArrowIcon"})}catch(__react_docgen_typescript_loader_error){}},"./packages/design-system/src/components/Icons/ArrowsStackedIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>ArrowsStackedIcon});var _i18n__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/design-system/src/components/i18n.ts"),_SvgIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/design-system/src/components/Icons/SvgIcon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const defaultProps={className:"",viewBox:"0 0 10 14"};function ArrowsStackedIcon(props){const iconCssClasses=`ds-c-icon--arrows-stacked ${props.className||""}`;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Y)(_SvgIcon__WEBPACK_IMPORTED_MODULE_1__.A,{title:(0,_i18n__WEBPACK_IMPORTED_MODULE_2__.t)("icons.arrowsStacked"),...defaultProps,...props,className:iconCssClasses,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Y)("path",{d:"M.626 6h8.747a.624.624 0 00.443-1.067L5.44.183a.614.614 0 00-.875 0L.184 4.934a.614.614 0 000 .876.604.604 0 00.442.19zm8.747 2H.626a.604.604 0 00-.442.181.614.614 0 000 .876l4.38 4.76a.614.614 0 00.876 0l4.376-4.75A.624.624 0 009.373 8z",fillRule:"evenodd"})})}try{ArrowsStackedIcon.displayName="ArrowsStackedIcon",ArrowsStackedIcon.__docgenInfo={description:"",displayName:"ArrowsStackedIcon",props:{className:{defaultValue:null,description:"Additional CSS classes to be added to the svg element",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"A custom `id` attribute for the SVG",name:"id",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"The descriptive name for the SVG icon",name:"title",required:!1,type:{name:"string"}},inversed:{defaultValue:null,description:"If `true` sets inverse fill color. Default is `false`.",name:"inversed",required:!1,type:{name:"boolean"}},ariaHidden:{defaultValue:null,description:"Describes the value of the `aria-hidden` attribute on the SVG. Defaulted to true with the assumption that most icons are decorative.\nIf the icon does not have any associated label text, set this to `false` and ensure a `title` is provided for improved accessibility.",name:"ariaHidden",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Long-text description of any SVG. Use for complex icons, otherwise `title` prop will suffice.",name:"description",required:!1,type:{name:"string"}},viewBox:{defaultValue:null,description:"A string describing the viewbox of the SVG.\n\nIt is recommended that the icon is centered and fill up the default viewport size.\nSee [this blog post](https://webdesign.tutsplus.com/tutorials/svg-viewport-and-viewbox-for-beginners--cms-30844) for further explanation on viewBox and how to use it.",name:"viewBox",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/Icons/ArrowsStackedIcon.tsx#ArrowsStackedIcon"]={docgenInfo:ArrowsStackedIcon.__docgenInfo,name:"ArrowsStackedIcon",path:"packages/design-system/src/components/Icons/ArrowsStackedIcon.tsx#ArrowsStackedIcon"})}catch(__react_docgen_typescript_loader_error){}},"./packages/design-system/src/components/Icons/CalendarIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>CalendarIcon});var _i18n__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/design-system/src/components/i18n.ts"),_SvgIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/design-system/src/components/Icons/SvgIcon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const defaultProps={className:"",viewBox:"0 0 448 512"};function CalendarIcon(props){const iconCssClasses=`ds-c-icon--calendar ${props.className||""}`;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Y)(_SvgIcon__WEBPACK_IMPORTED_MODULE_1__.A,{title:(0,_i18n__WEBPACK_IMPORTED_MODULE_2__.t)("icons.calendar"),...defaultProps,...props,className:iconCssClasses,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Y)("path",{d:"M152 64H296V24C296 10.75 306.7 0 320 0C333.3 0 344 10.75 344 24V64H384C419.3 64 448 92.65 448 128V448C448 483.3 419.3 512 384 512H64C28.65 512 0 483.3 0 448V128C0 92.65 28.65 64 64 64H104V24C104 10.75 114.7 0 128 0C141.3 0 152 10.75 152 24V64zM48 448C48 456.8 55.16 464 64 464H384C392.8 464 400 456.8 400 448V192H48V448z"})})}try{CalendarIcon.displayName="CalendarIcon",CalendarIcon.__docgenInfo={description:"",displayName:"CalendarIcon",props:{className:{defaultValue:null,description:"Additional CSS classes to be added to the svg element",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"A custom `id` attribute for the SVG",name:"id",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"The descriptive name for the SVG icon",name:"title",required:!1,type:{name:"string"}},inversed:{defaultValue:null,description:"If `true` sets inverse fill color. Default is `false`.",name:"inversed",required:!1,type:{name:"boolean"}},ariaHidden:{defaultValue:null,description:"Describes the value of the `aria-hidden` attribute on the SVG. Defaulted to true with the assumption that most icons are decorative.\nIf the icon does not have any associated label text, set this to `false` and ensure a `title` is provided for improved accessibility.",name:"ariaHidden",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Long-text description of any SVG. Use for complex icons, otherwise `title` prop will suffice.",name:"description",required:!1,type:{name:"string"}},viewBox:{defaultValue:null,description:"A string describing the viewbox of the SVG.\n\nIt is recommended that the icon is centered and fill up the default viewport size.\nSee [this blog post](https://webdesign.tutsplus.com/tutorials/svg-viewport-and-viewbox-for-beginners--cms-30844) for further explanation on viewBox and how to use it.",name:"viewBox",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/Icons/CalendarIcon.tsx#CalendarIcon"]={docgenInfo:CalendarIcon.__docgenInfo,name:"CalendarIcon",path:"packages/design-system/src/components/Icons/CalendarIcon.tsx#CalendarIcon"})}catch(__react_docgen_typescript_loader_error){}},"./packages/design-system/src/components/utilities/useClickOutsideHandler.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/preact/compat/dist/compat.module.js");const __WEBPACK_DEFAULT_EXPORT__=function useClickOutsideHandler(insideRefs,handler){function handleClickOutside(event){insideRefs.some((ref=>ref.current?.contains(event.target)))||handler(event)}(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(document.addEventListener("mousedown",handleClickOutside),document.addEventListener("touchstart",handleClickOutside),()=>{document.removeEventListener("mousedown",handleClickOutside),document.removeEventListener("touchstart",handleClickOutside)})),[handleClickOutside])}},"./packages/design-system/src/components/utilities/usePressEscapeHandler.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/preact/compat/dist/compat.module.js");const __WEBPACK_DEFAULT_EXPORT__=function usePressEscapeHandler(ref,handler){function handleEscapeKey(event){27!==event.keyCode&&"Escape"!==event.key||handler(event)}(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const node=ref?ref.current:document;if(node)return node.addEventListener("keydown",handleEscapeKey),()=>{node.removeEventListener("keydown",handleEscapeKey)}}),[handleEscapeKey])}},"./packages/design-system/src/components/web-components/shared-attributes/form.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>formAttrs});const formAttrs=["label","label-class-name","label-id","hint","hint-id","requirement-label","hint-class-name","error-id","error-placement","error-message","error-message-class-name"]},"./packages/design-system/src/components/web-components/wrapperUtils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function parseBooleanAttr(attr){return void 0!==attr&&"false"!==attr}function parseDateAttr(attr){return attr?new Date(attr):void 0}function parseIntegerAttr(attr){if(void 0!==attr)return parseInt(attr)}function parseJsonAttr(attr){return(str=>{try{JSON.parse(str)}catch(e){return!1}return!0})(attr)?JSON.parse(attr):attr}__webpack_require__.d(__webpack_exports__,{$Q:()=>parseBooleanAttr,Rk:()=>parseJsonAttr,Tt:()=>parseIntegerAttr,tv:()=>parseDateAttr})}}]);