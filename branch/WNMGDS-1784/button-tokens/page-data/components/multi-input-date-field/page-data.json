{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/components/multi-input-date-field",
    "result": {"data":{"mdx":{"id":"8a71acdc-a697-516d-80d4-eddbc941853d","frontmatter":{"title":"Date field (multi-input)","status":null,"relatedUswdsGuidance":"components/memorable-date/"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Date field (multi-input)\",\n  \"relatedUswdsGuidance\": \"components/memorable-date/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar StorybookExample = makeShortcode(\"StorybookExample\");\nvar PropTable = makeShortcode(\"PropTable\");\nvar ComponentThemeOptions = makeShortcode(\"ComponentThemeOptions\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Date field (multi-input) provides date entry, spaced over three separate inputs for month, day, and year.\"), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<MultiInputDateField>\")), mdx(StorybookExample, {\n    componentName: \"multiInputDateField\",\n    sourceFilePath: \"components/DateField/MultiInputDateField.tsx\",\n    storyId: \"components-multiinputdatefield--multi-input-date-field-default\",\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Props\"), mdx(PropTable, {\n    componentName: \"MultiInputDateField\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, \"Guidance\"), mdx(\"h3\", null, \"When to use\"), mdx(\"p\", null, \"Use this date field when:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"User flow requires inputs be separated\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Functionality/back-end systems can't support a single date field entry\")), mdx(\"p\", null, \"Generally used for more memorable dates like date of birth, marriage date, or income start date.\"), mdx(\"h3\", null, \"When to consider alternatives\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't use this date field if either \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1784/button-tokens/components/single-input-date-field/\"\n  }, \"single-input\"), \" or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1784/button-tokens/components/date-picker/\"\n  }, \"date picker\"), \" are feasible. This pattern is least effective with users.\")), mdx(\"h3\", null, \"Usage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow users to enter one-digit numbers with or without the \\\"0\\\" prior to the number. Example: \\\"1\\\" as well as \\\"01\\\" for a month or day.\")), mdx(\"h3\", null, \"Accessibility\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"These text fields should follow the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1784/button-tokens/components/text-field/#guidance\"\n  }, \"accessibility guidelines for all text inputs\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not use JavaScript to auto advance the focus from one field to the next. This makes it difficult for keyboard-only users to navigate and correct mistakes.\")), mdx(\"h2\", null, \"Customization\"), mdx(\"p\", null, \"The following Sass variables can be overridden to customize Input/Form components:\"), mdx(ComponentThemeOptions, {\n    componentname: \"text-input\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Form components\"), mdx(ComponentThemeOptions, {\n    componentname: \"form\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Related patterns\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1784/button-tokens/components/single-input-date-field/\"\n  }, \"Date field (single-input)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1784/button-tokens/components/date-picker/\"\n  }, \"Date field (with calendar)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#multiinputdatefield","title":"<MultiInputDateField>","items":[{"url":"#props","title":"Props"}]},{"url":"#guidance","title":"Guidance","items":[{"url":"#when-to-use","title":"When to use"},{"url":"#when-to-consider-alternatives","title":"When to consider alternatives"},{"url":"#usage","title":"Usage"},{"url":"#accessibility","title":"Accessibility"}]},{"url":"#customization","title":"Customization","items":[{"url":"#form-components","title":"Form components"},{"url":"#related-patterns","title":"Related patterns"}]}]}}},"pageContext":{"id":"8a71acdc-a697-516d-80d4-eddbc941853d"}},
    "staticQueryHashes": ["1050346478","2862643552"]}