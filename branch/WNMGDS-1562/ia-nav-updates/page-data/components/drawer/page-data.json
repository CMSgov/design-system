{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/components/drawer",
    "result": {"data":{"mdx":{"id":"40d33fdd-c530-52e4-8ae5-7e030c712a81","frontmatter":{"title":"Drawer & Help Drawer","status":null,"relatedUswdsGuidance":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Drawer & Help Drawer\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar StorybookExample = makeShortcode(\"StorybookExample\");\nvar PropTable = makeShortcode(\"PropTable\");\nvar ComponentThemeOptions = makeShortcode(\"ComponentThemeOptions\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A drawer provides a space for medium to long-form help content \\u2014 content that's too long or not common enough to warrant being on the page by default.\"), mdx(\"p\", null, \"On large screens it's fixed to the side of the screen, and on smaller screens it overlays the entire screen.\"), mdx(\"p\", null, \"Render the drawer below the toggle button that triggers it. This way the markup remains semantically sound and screen reader friendly.\"), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<Drawer>\")), mdx(StorybookExample, {\n    componentName: \"drawer\",\n    sourceFilePath: \"components/Drawer/Drawer.tsx\",\n    storyId: \"components-drawer--drawer-default\",\n    minHeight: 500,\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Props\"), mdx(PropTable, {\n    componentName: \"Drawer\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h3\", null, \"Layout Alternatives\"), mdx(\"p\", null, \"A header and/or footer can have a \\\"sticky\\\" position if the following properties are applied to their respective elements:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"isHeaderSticky\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"isFooterSticky\"))), mdx(StorybookExample, {\n    componentName: \"sticky-drawer\",\n    storyId: \"components-drawer--drawer-with-sticky-positioning\",\n    minHeight: 300,\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Focus Trap\"), mdx(\"p\", null, \"A focus trap can be set on a drawer if the property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hasFocusTrap\"), \" is enabled. A user can escape the focus trap by pressing the \", mdx(\"kbd\", null, \"ESC\"), \" key.\"), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<DrawerToggle>\")), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/Drawer/DrawerToggle.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(PropTable, {\n    componentName: \"DrawerToggle\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<HelpDrawer>\")), mdx(\"p\", null, \"This component is an enhanced \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Drawer>\"), \" component, providing the same properties as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Drawer>\"), \" in addition to Google Analytics properties.\"), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/HelpDrawer/HelpDrawer.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(PropTable, {\n    componentName: \"HelpDrawer\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, \"Guidance\"), mdx(\"h3\", null, \"When to use\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When users need content to remain viewable while also allowing the user to views/interacts with the main page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the content is longer than 2 sentences.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the content needs to be available at a particular point in the process, but doesn't need to be included on the main page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the content just needs to be available at the user's discretion, to provide additional details or context.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When users may need additional information to complete the task than can be supplied on the main page without overwhelming the primary content.\")), mdx(\"h3\", null, \"When to consider alternatives\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the content is timely/urgent, or critical to the action being taken.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the content is intended to clarify or call attention to other content on the page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the content must be displayed without being initiated by a user action.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When additional information is necessary to the primary information the user is interacting with.\")), mdx(\"h3\", null, \"Usage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Link text used to trigger the help drawer should be specific and descriptive.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Avoid using only \\\"Learn more\\\" to link to help drawer content\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Limit the amount of link text\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Drawer content area should include a close button clearly at the top.\")), mdx(\"h3\", null, \"Accessibility\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Focus should move to the content in the help drawer after the user has opened it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Drawer should support keyboard navigation.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Enter\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Space\"), \" to select the highlighted item.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Tab\"), \" to move the focus sequentially through the list of focusable items\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Shift + Tab\"), \" to move the focus sequentially through the list of focusable items in reversed order\")))), mdx(\"h4\", null, \"Focus Management\"), mdx(\"p\", null, \"The property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hasFocusTrap\"), \" is an available option that will prevent keyboard focus from leaving the confines of the HelpDrawer when enabled.\"), mdx(\"p\", null, \"When the property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hasFocusTrap\"), \" is enabled...\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keyboard focus is trapped within the HelpDrawer component.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pressing the escape key will close the Drawer.\")), mdx(\"p\", null, \"A focus trap should \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"not\"), \" be used when it's anticipated that the user will rely on the Drawer as a reference resource for doing something outside of the Drawer. For instance, if the user is completing a form, Drawer may contain a reference guide defining specific requirements.\"), mdx(\"p\", null, \"However, there are times when it makes sense to trap focus within the Drawer. One occassion where it can benefit the user is when the Drawer is anticipated to fill the viewport of a screen, i.e., mobile layout.\"), mdx(\"h2\", null, \"Customization\"), mdx(\"p\", null, \"The following Sass variables can be overridden to customize Drawer components:\"), mdx(ComponentThemeOptions, {\n    componentname: \"drawer\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Future Work\"), mdx(\"p\", null, \"Future design iterations and possible user research to ensure the enhanced help drawer link design isn't confused or mistaken for transitional hyperlinks, glossary terms, or tooltips.\"), mdx(\"h2\", null, \"Google Analytics\"), mdx(\"p\", null, \"Google analytics are available via the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<HelpDrawer>\"), \" component.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Analytics event tracking is disabled by default.\")), mdx(\"h3\", null, \"Enable event tracking\"), mdx(\"p\", null, \"Import and set the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setHelpDrawerSendsAnalytics\"), \" feature flag to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" in your application's entry file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { setHelpDrawerSendsAnalytics } from '@cmsgov/<design-system-package>';\\nsetHelpDrawerSendsAnalytics(true);\\n\")), mdx(\"p\", null, \"On application where the page has \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"utag\"), \" loaded, the data goes to Tealium which allows it to route to Google Analytics or the currently approved data analytics tools.\"), mdx(\"h3\", null, \"Disable event tracking\"), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"analytics\"), \" prop, pass the value \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \" to the component to disable analytics tracking for a singular component instance\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"analytics={false}\\n\")), mdx(\"h3\", null, \"Override event tracking\"), mdx(\"p\", null, \"A custom heading value can be sent for an analytics event by using the prop \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"analyticsLabelOverride\"), \". It is recommended that this value be used to prevent sensitive personal information from being passed to analytics trackers.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#drawer","title":"<Drawer>","items":[{"url":"#props","title":"Props"},{"url":"#layout-alternatives","title":"Layout Alternatives"},{"url":"#focus-trap","title":"Focus Trap"}]},{"url":"#drawertoggle","title":"<DrawerToggle>"},{"url":"#helpdrawer","title":"<HelpDrawer>"},{"url":"#guidance","title":"Guidance","items":[{"url":"#when-to-use","title":"When to use"},{"url":"#when-to-consider-alternatives","title":"When to consider alternatives"},{"url":"#usage","title":"Usage"},{"url":"#accessibility","title":"Accessibility","items":[{"url":"#focus-management","title":"Focus Management"}]}]},{"url":"#customization","title":"Customization","items":[{"url":"#future-work","title":"Future Work"}]},{"url":"#google-analytics","title":"Google Analytics","items":[{"url":"#enable-event-tracking","title":"Enable event tracking"},{"url":"#disable-event-tracking","title":"Disable event tracking"},{"url":"#override-event-tracking","title":"Override event tracking"}]}]}}},"pageContext":{"id":"40d33fdd-c530-52e4-8ae5-7e030c712a81"}},
    "staticQueryHashes": ["1050346478","1902122157"]}