{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/getting-started/developers/using-sass-and-css",
    "result": {"data":{"mdx":{"id":"385a80e9-add8-5e28-90c9-9fa1bb421d24","frontmatter":{"title":"Using Sass and CSS","status":null,"relatedUswdsGuidance":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Using Sass and CSS\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Using SCSS\"), mdx(\"p\", null, \"If your project is already using Sass/SCSS, you can include the design system's styles by importing precompiled SCSS files from NPM.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"First, make sure your build system is configured so that the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node_modules\"), \" directory is in the list of Sass \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sass/node-sass#includepaths\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"includePaths\")), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add the following to your Sass file:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@import '@cmsgov/design-system/dist/scss/index';\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/WNMGDS-1562/ia-nav-updates/getting-started/developers/using-sass-and-css/#using-fonts-and-images\"\n  }, \"Ensure fonts and images are rendered correctly.\"))), mdx(\"h2\", null, \"Using CSS\"), mdx(\"p\", null, \"If your project does not use Sass/SCSS, add the design system styles by referencing its minified CSS.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Copy the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dist/css/index.css\"), \" file into a relevant place in your code base \\u2014 likely a directory where you keep third-party libraries. In the example below, our directory is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"css/vendor\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<link>\"), \" to the stylesheet in your site's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<head>\"))), mdx(\"p\", null, \"For example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<link rel=\\\"stylesheet\\\" src=\\\"/css/vendor/design-system/index.css\\\" />\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"getting-started/developers/using-sass-and-css/#using-fonts-and-images\"\n  }, \"Ensure fonts and images are rendered correctly.\"))), mdx(\"h2\", null, \"Using fonts and images\"), mdx(\"p\", null, \"By default, the design system expects a file structure like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\u2514\\u2500\\u2500 Your site's build folder/\\n    \\u251C\\u2500\\u2500 images/\\n    \\u251C\\u2500\\u2500 fonts/\\n    \\u2514\\u2500\\u2500 css/\\n      \\u2514\\u2500\\u2500 index.css/\\n\")), mdx(\"p\", null, \"You can manually copy the image and font directories, or you could integrate this step into your build process.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/CMSgov/design-system/blob/master/examples/react-app/Gulpfile.js\"\n  }, \"Here's an example of copying assets using Gulp\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/CMSgov/design-system/blob/master/examples/webpack-demo/webpack.config.js\"\n  }, \"Here's an example of copy assets using Webpack\"), \".\")), mdx(\"p\", null, \"Alternatively if your project uses Webpack or Create React App, you can \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/design-system/branch/WNMGDS-1562/ia-nav-updates/getting-started/developers/using-sass-and-css/#setting-asset-paths-to-node_modules\"\n  }, \"configure the bundler to process the assets\"), \".\"), mdx(\"h3\", null, \"Overriding asset paths\"), mdx(\"p\", null, \"If you are using Sass/SCSS, you can change the default asset paths by overriding the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$font-path\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$image-path\"), \" Sass variables.\"), mdx(\"p\", null, \"For example, if your project build directory file structure looked like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\u2514\\u2500\\u2500 Your site's build folder/\\n    \\u251C\\u2500\\u2500 images/\\n    \\u251C\\u2500\\u2500 fonts/\\n    \\u2514\\u2500\\u2500 index.css\\n\")), mdx(\"p\", null, \"The asset paths would have to be redefined like so:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"$font-path: './fonts';\\n$image-path: './image';\\n\")), mdx(\"p\", null, \"Without overriding these variables, it's possible that your fonts and images will not render correctly in your project.\"), mdx(\"h4\", null, \"Setting asset paths to node_modules\"), mdx(\"p\", null, \"If your project uses Webpack or Create React App, you can set the asset paths directly to the fonts and image folders in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node_modules\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"$font-path: '~@cmsgov/design-system/dist/fonts';\\n$image-path: '~@cmsgov/design-system/dist/images';\\n\")), mdx(\"p\", null, \"This approach is recommended, as you no longer have to copy assets into your project. It does however require some additional configuration.\"), mdx(\"p\", null, \"For Create React App projects, simply add the following to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\"), \". This will allow Create React App's Webpack configuration to know to process the fonts and images in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node_modules\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"SASS_PATH=\\\"node_modules\\\"\\n\")), mdx(\"p\", null, \"If you have your own custom Webpack configuration, you need to use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://webpack.js.org/loaders/file-loader/\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"file-loader\")), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/bholloway/resolve-url-loader\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"resolve-url-loader\")), \" to copy assets into your build folder and inject the correct URLS to your build files.\"), mdx(\"h2\", null, \"Applying styles to your page\"), mdx(\"p\", null, \"Once your page is loading the design system's CSS, you can then begin applying its styling to your pages. Below is an example of a project applying the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/design-system/branch/WNMGDS-1562/ia-nav-updates/styles/base/\"\n  }, \"base-level of styles\"), \" and a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/design-system/branch/WNMGDS-1562/ia-nav-updates/utilities/overview/\"\n  }, \"utility class\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" src=\\\"/css/vendor/design-system/index.css\\\" />\\n  </head>\\n  <body class=\\\"ds-base\\\">\\n    <h1 class=\\\"ds-u-font-size--title\\\">Hello world</h1>\\n  </body>\\n</html>\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/design-system/branch/WNMGDS-1562/ia-nav-updates/getting-started/developers/code-conventions/\"\n  }, \"Learn about the naming conventions\")), mdx(\"h2\", null, \"Need help or ran into an issue?\"), mdx(\"p\", null, \"If you're having trouble installing or setting up the design system, or if you think you've found a bug, feel free to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/CMSgov/design-system/issues\"\n  }, \"open an issue on GitHub\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#using-scss","title":"Using SCSS"},{"url":"#using-css","title":"Using CSS"},{"url":"#using-fonts-and-images","title":"Using fonts and images","items":[{"url":"#overriding-asset-paths","title":"Overriding asset paths","items":[{"url":"#setting-asset-paths-to-node_modules","title":"Setting asset paths to node_modules"}]}]},{"url":"#applying-styles-to-your-page","title":"Applying styles to your page"},{"url":"#need-help-or-ran-into-an-issue","title":"Need help or ran into an issue?"}]}}},"pageContext":{"id":"385a80e9-add8-5e28-90c9-9fa1bb421d24"}},
    "staticQueryHashes": ["1009640368","1050346478"]}