/*! For license information please see components-StepList-StepList-stories.cd119c64.iframe.bundle.js.LICENSE.txt */
(globalThis.webpackChunkdesign_system=globalThis.webpackChunkdesign_system||[]).push([[9089],{"./packages/design-system/src/components/StepList/StepList.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{StepListExample:()=>StepListExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _mocks_stepListStepData__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/design-system/src/components/StepList/__mocks__/stepListStepData.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/StepList",component:__webpack_require__("./packages/design-system/src/components/StepList/StepList.tsx").b},StepListExample={args:{steps:_mocks_stepListStepData__WEBPACK_IMPORTED_MODULE_1__.X}};StepListExample.parameters={...StepListExample.parameters,docs:{...StepListExample.parameters?.docs,source:{originalSource:"{\n  args: {\n    steps: stepListStepData\n  }\n}",...StepListExample.parameters?.docs?.source}}};const __namedExportsOrder=["StepListExample"]},"./packages/design-system/src/components/Icons/CheckIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S:()=>CheckIcon});var _i18n__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/design-system/src/components/i18n.ts"),_SvgIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/design-system/src/components/Icons/SvgIcon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const defaultProps={className:"",viewBox:"0 0 16 12"};function CheckIcon(props){const iconCssClasses=`ds-c-icon--check ${props.className||""}`;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Y)(_SvgIcon__WEBPACK_IMPORTED_MODULE_1__.A,{title:(0,_i18n__WEBPACK_IMPORTED_MODULE_2__.t)("icons.check"),...defaultProps,...props,className:iconCssClasses,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Y)("path",{d:"M16 2.343a.969.969 0 00-.289-.686L14.307.283a1.012 1.012 0 00-1.404 0L6.132 6.919 3.097 3.94a1.012 1.012 0 00-1.404 0L.289 5.313A.969.969 0 000 6c0 .253.103.505.289.687l5.14 5.03a1.012 1.012 0 001.405 0L15.71 3.03A.969.969 0 0016 2.343z"})})}try{CheckIcon.displayName="CheckIcon",CheckIcon.__docgenInfo={description:"",displayName:"CheckIcon",props:{className:{defaultValue:null,description:"Additional CSS classes to be added to the svg element",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"A custom `id` attribute for the SVG",name:"id",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"The descriptive name for the SVG icon",name:"title",required:!1,type:{name:"string"}},ariaHidden:{defaultValue:null,description:"Describes the value of the `aria-hidden` attribute on the SVG. Defaulted to true with the assumption that most icons are decorative.\nIf the icon does not have any associated label text, set this to `false` and ensure a `title` is provided for improved accessibility.",name:"ariaHidden",required:!1,type:{name:"boolean"}},inversed:{defaultValue:null,description:"If `true` sets inverse fill color.",name:"inversed",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Long-text description of any SVG. Use for complex icons, otherwise `title` prop will suffice.",name:"description",required:!1,type:{name:"string"}},viewBox:{defaultValue:null,description:"A string describing the viewbox of the SVG.\n\nIt is recommended that the icon is centered and fill up the default viewport size.\nSee [this blog post](https://webdesign.tutsplus.com/tutorials/svg-viewport-and-viewbox-for-beginners--cms-30844) for further explanation on viewBox and how to use it.",name:"viewBox",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/Icons/CheckIcon.tsx#CheckIcon"]={docgenInfo:CheckIcon.__docgenInfo,name:"CheckIcon",path:"packages/design-system/src/components/Icons/CheckIcon.tsx#CheckIcon"})}catch(__react_docgen_typescript_loader_error){}},"./packages/design-system/src/components/Icons/SvgIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>SvgIcon});var classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),_utilities_useId__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/design-system/src/components/utilities/useId.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const SvgIcon=_ref=>{let{ariaHidden,className,children,description,id,inversed,title,viewBox,...otherProps}=_ref;const svgClasses=classnames__WEBPACK_IMPORTED_MODULE_0___default()("ds-c-icon",{"ds-c-icon--inverse":inversed},className),rootId=(0,_utilities_useId__WEBPACK_IMPORTED_MODULE_2__.A)("icon--",id),titleId=`${rootId}__title`,descriptionId=`${rootId}__desc`,ariaLabelledBy=description?`${titleId} ${descriptionId}`:titleId,isSrVisible=!ariaHidden,screenReaderProps={};return isSrVisible&&(screenReaderProps["aria-labelledby"]=ariaLabelledBy,screenReaderProps.role="img"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.FD)("svg",{"aria-hidden":ariaHidden,className:svgClasses,id:id??isSrVisible?rootId:void 0,viewBox,xmlns:"http://www.w3.org/2000/svg",...screenReaderProps,...otherProps,children:[isSrVisible&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)("title",{id:titleId,children:title}),isSrVisible&&description&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)("desc",{id:descriptionId,children:description}),children]})};SvgIcon.defaultProps={ariaHidden:!0,inversed:!1};try{SvgIcon.displayName="SvgIcon",SvgIcon.__docgenInfo={description:"",displayName:"SvgIcon",props:{ariaHidden:{defaultValue:{value:"true"},description:"Describes the value of the `aria-hidden` attribute on the SVG. Defaulted to true with the assumption that most icons are decorative.\nIf the icon does not have any associated label text, set this to `false` and ensure a `title` is provided for improved accessibility.",name:"ariaHidden",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Additional CSS classes to be added to the svg element",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The elements that make up the SVG",name:"children",required:!0,type:{name:"ReactNode"}},description:{defaultValue:null,description:"Long-text description of any SVG. Use for complex icons, otherwise `title` prop will suffice.",name:"description",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"A custom `id` attribute for the SVG",name:"id",required:!1,type:{name:"string"}},inversed:{defaultValue:{value:"false"},description:"If `true` sets inverse fill color.",name:"inversed",required:!1,type:{name:"boolean"}},title:{defaultValue:null,description:"The descriptive name for the SVG icon",name:"title",required:!1,type:{name:"string"}},viewBox:{defaultValue:null,description:"A string describing the viewbox of the SVG.\n\nIt is recommended that the icon is centered and fill up the default viewport size.\nSee [this blog post](https://webdesign.tutsplus.com/tutorials/svg-viewport-and-viewbox-for-beginners--cms-30844) for further explanation on viewBox and how to use it.",name:"viewBox",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/Icons/SvgIcon.tsx#SvgIcon"]={docgenInfo:SvgIcon.__docgenInfo,name:"SvgIcon",path:"packages/design-system/src/components/Icons/SvgIcon.tsx#SvgIcon"})}catch(__react_docgen_typescript_loader_error){}},"./packages/design-system/src/components/StepList/StepList.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{b:()=>StepList});var jsx_runtime=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const StepLink=props=>{const ComponentType=props.component??"a";return(0,jsx_runtime.FD)(ComponentType,{href:props.href,onClick:function handleClick(event){props.onClick&&(event.preventDefault(),props.onClick(props.href,props.stepId))},className:props.className,children:[props.children,props.screenReaderText&&(0,jsx_runtime.FD)("span",{className:"ds-u-visibility--screen-reader",children:[" ",props.screenReaderText]})]})},StepList_StepLink=StepLink;try{StepLink.displayName="StepLink",StepLink.__docgenInfo={description:"",displayName:"StepLink",props:{children:{defaultValue:null,description:"Label text or HTML.",name:"children",required:!0,type:{name:"ReactNode"}},href:{defaultValue:null,description:"",name:"href",required:!1,type:{name:"string"}},stepId:{defaultValue:null,description:"",name:"stepId",required:!1,type:{name:"string"}},screenReaderText:{defaultValue:null,description:"",name:"screenReaderText",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(href?: string, stepId?: string) => any"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:'"a" | ComponentType<StepLinkComponentProps>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/StepList/StepLink.tsx#StepLink"]={docgenInfo:StepLink.__docgenInfo,name:"StepLink",path:"packages/design-system/src/components/StepList/StepLink.tsx#StepLink"})}catch(__react_docgen_typescript_loader_error){}const SubStep=_ref=>{let{step,...props}=_ref;return(0,jsx_runtime.FD)("li",{role:"listitem",className:"ds-c-substep",children:[(0,jsx_runtime.Y)("div",{className:"ds-c-substep__heading",children:step.heading}),(step.completed||step.started)&&(0,jsx_runtime.Y)(StepList_StepLink,{component:step.component,href:step.href,stepId:step.id,screenReaderText:step.heading,onClick:step.onClick||props.onStepLinkClick,className:"ds-c-substep__edit",children:step.linkText||props.editText}),step.steps&&props.showSubSubSteps&&(0,jsx_runtime.Y)("ul",{role:"list",children:step.steps.map(((s,i)=>(0,jsx_runtime.Y)(SubStep,{step:s,...props},s.id||i)))})]})},StepList_SubStep=SubStep;try{SubStep.displayName="SubStep",SubStep.__docgenInfo={description:"",displayName:"SubStep",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"StepObject"}},onStepLinkClick:{defaultValue:null,description:"",name:"onStepLinkClick",required:!1,type:{name:"(href?: string, stepId?: string) => any"}},showSubSubSteps:{defaultValue:null,description:"",name:"showSubSubSteps",required:!1,type:{name:"boolean"}},editText:{defaultValue:null,description:"",name:"editText",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/StepList/SubStep.tsx#SubStep"]={docgenInfo:SubStep.__docgenInfo,name:"SubStep",path:"packages/design-system/src/components/StepList/SubStep.tsx#SubStep"})}catch(__react_docgen_typescript_loader_error){}var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),CheckIcon=__webpack_require__("./packages/design-system/src/components/Icons/CheckIcon.tsx");const Step=_ref=>{let{step,...props}=_ref;const Heading=`h${step.headingLevel||"2"}`,start=step.isNextStep,resume=step.started&&!step.completed,className=classnames_default()("ds-c-step",{"ds-c-step--current":start||resume,"ds-c-step--completed":step.completed}),contentClassName=classnames_default()("ds-c-step__content",{"ds-c-step__content--with-content":step.description||step.steps});let linkLabel,linkClassName;return step.completed&&!step.steps?linkLabel=step.linkText||props.editText:start?linkLabel=step.linkText||props.startText:resume&&(linkLabel=step.linkText||props.resumeText),(start||resume)&&(linkClassName="ds-c-button ds-c-button--solid ds-c-button--main ds-c-button--on-light"),(0,jsx_runtime.FD)("li",{role:"listitem",className,children:[(0,jsx_runtime.FD)("div",{className:contentClassName,children:[(0,jsx_runtime.Y)(Heading,{className:"ds-c-step__heading",children:step.heading}),step.description&&(0,jsx_runtime.Y)("div",{className:"ds-c-step__description",role:"region",children:step.description}),step.steps&&(0,jsx_runtime.Y)("ol",{role:"list",className:"ds-c-step__substeps",children:step.steps.map(((s,i)=>(0,jsx_runtime.Y)(StepList_SubStep,{step:{...s,component:step.component||s.component},...props},s.id||i)))})]}),(0,jsx_runtime.FD)("div",{className:"ds-c-step__actions",role:"region",children:[step.completed&&(0,jsx_runtime.FD)("div",{className:"ds-c-step__completed-text",children:[(0,jsx_runtime.Y)(CheckIcon.S,{className:"ds-c-icon-color--success"}),props.completedText]}),linkLabel&&(0,jsx_runtime.Y)(StepList_StepLink,{component:step.component,href:step.href,stepId:step.id,screenReaderText:step.heading,onClick:step.onClick||props.onStepLinkClick,className:linkClassName,children:linkLabel})]})]})},StepList_Step=Step;try{Step.displayName="Step",Step.__docgenInfo={description:"",displayName:"Step",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"StepObject"}},onStepLinkClick:{defaultValue:null,description:"",name:"onStepLinkClick",required:!1,type:{name:"(href?: string, stepId?: string) => any"}},showSubSubSteps:{defaultValue:null,description:"",name:"showSubSubSteps",required:!1,type:{name:"boolean"}},completedText:{defaultValue:null,description:"",name:"completedText",required:!0,type:{name:"string"}},editText:{defaultValue:null,description:"",name:"editText",required:!0,type:{name:"string"}},resumeText:{defaultValue:null,description:"",name:"resumeText",required:!0,type:{name:"string"}},startText:{defaultValue:null,description:"",name:"startText",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/StepList/Step.tsx#Step"]={docgenInfo:Step.__docgenInfo,name:"Step",path:"packages/design-system/src/components/StepList/Step.tsx#Step"})}catch(__react_docgen_typescript_loader_error){}const StepList=_ref=>{let{steps,component,showSubSubSteps=!1,completedText="Completed",editText="Edit",resumeText="Resume",startText="Start",...otherProps}=_ref;return(0,jsx_runtime.Y)("ol",{role:"list",className:"ds-c-step-list",children:steps.map(((step,i)=>(0,jsx_runtime.Y)(StepList_Step,{step:{...step,component:component||step.component},showSubSubSteps,completedText,editText,resumeText,startText,...otherProps},step.id||i)))})};try{StepList.displayName="StepList",StepList.__docgenInfo={description:'For information about how and when to use this component,\n[refer to its full documentation page](https://design.cms.gov/components/step-list/).\n\n## Start, Resume, and Edit links\n\nA user interacts with the steps through "Start", "Resume", and "Edit"\nlinks.\n\nIn the React component, the links\' `href` properties are determined by the\n`step` object\'s `href` property. One can also optionally pass an\n`onStepLinkClick` function that will cancel the default link behavior and call\n`onStepLinkClick` with `href` as a parameter for apps that handle routing with\nJavaScript.\n\nWhen a step has substeps and is incomplete, the `href` property should be set to\nmatch the `href` of the current substep—that is, the first incomplete substep.\nThe "Edit" button will only appear on substeps that have been completed.\n\n## Managing list state\n\n### Substeps\n\nThe `<StepList>` component takes an array of step objects. From there steps can\nbe broken down infinitely into sub-steps. This allows us to have unique URLs for\neach part of a step; however, by default we only display two levels of this tree\n—the _step_ and _substep_. This default behavior should remain unchanged except\nfor special circumstances. It is better not to overwhelm the user with showing\nall the substeps and giving them names.\n\nWe do, nonetheless, encourage the use of sub-substeps that are not visible where\nthese substeps span multiple pages and have their own unique URLs. If, for\nexample, the user completes the first page of the `household > overall` substep\nwhere they list the household members but has not completed the second page\nwhere they define those members\' relationships to each other, we want the\n"Resume" button to take them back to the relationships page and not the first\npage where they entered their names. This, of course, requires an extra\nsteps-building process to update a top-level steps\' `href` property by\ntraversing the substep tree to find the first incomplete step. See the\n[Completed, started, and isNextStep](#completed-started-and-isnextstep) section\nbelow for an example JavaScript function that can change the `href` of steps\nbased on their substeps.\n\n### Completed, started, and isNextStep\n\nThe _state_ of a step object will be defined for these purposes as the values\nof its `completed`, `started`, and `isNextStep` properties. These correspond to\ndifferent visual states when rendered by the `<StepList>`, showing "Completed",\n"Resume", or "Start" respectively. For steps with substeps, the state should be\nrepresentative of the collective states of its substeps. For example, if a step\nhas substeps that have `completed: false`, that step should not have\n`completed: true` because not all of its substeps have been completed. Similarly\na step can only be `started` if at least one of its substeps has been `started`.\nThis should be true for each of the substep\'s substeps and so on. Below is an\nexample function that can propagate this state information up from the smallest\nsubstep to the largest step before passing the steps array to the `<StepList>`\ncomponent.\n\n```js\nfunction propagateSubstepState(step) {\n  if (step.steps) {\n    const steps = step.steps.map(propagateSubstepState);\n    const newStep = {\n      ...step,\n      steps,\n      started: steps.some((s) => s.started),\n      completed: steps.every((s) => s.completed),\n    };\n    if (!newStep.completed) {\n      const nextStep = steps.find((s) => !s.completed);\n      newStep.href = nextStep.href;\n    }\n    return newStep;\n  } else {\n    return step;\n  }\n}\n\n// ...\n//\n// Render function:\n\nconst steps = rawSteps.map(propagateSubstepState);\nreturn <StepList steps={steps} />;\n```',displayName:"StepList",props:{steps:{defaultValue:null,description:"An array of `StepObjects` that contain text, state, link URLs, and other\ninfo needed to render steps.\n\n| Name                              | Type                      | Description                                                                                                                                                                              |\n| --------------------------------- | ------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `completed`                       | `bool`                    | Whether the step has been completed                                                                                                                                                      |\n| `component`                       | `element, func`           | When provided, this will render the passed in component for link elements in this Step. This is useful when integrating with React Router's `<Link>` or using your own custom component. |\n| `description`                     | `string`                  | Additional text to dsiplay under (only rendered for top-level steps)                                                                                                                     |\n| `heading` (required)              | `string`                  | Text to display as the step heading                                                                                                                                                      |\n| `headingLevel`                    | `'1', '2', '3', '4', '5'` | Heading type to override default `<h2>`.                                                                                                                                                 |\n| `href` (required)                 | `string`                  | URL or partial URL that routes to the step. Will be passed to `onStepLinkClick` as first parameter                                                                                       |\n| `id`                              | `string`                  | Unique string representing the step. WIll be passed to `onStepLinkClick` as second parameter                                                                                             |\n| `isNextStep`                      | `bool`                    | Whether this is the next unstarted step                                                                                                                                                  |\n| `linkText`                        | `string`                  | Alternative text for the link or button for this step. Will override the defaults                                                                                                        |\n| `onClick`                         | `func`                    | `onClick` handler for this specific step's link/button                                                                                                                                   |\n| `started`                         | `bool`                    | Whether the step has been started                                                                                                                                                        |\n| `steps`                           | `StepObject[]`            | Array of substeps                                                                                                                                                                        |",name:"steps",required:!0,type:{name:"StepObject[]"}},component:{defaultValue:null,description:"When provided, this will render the passed in component for all link elements. This is useful when\nintegrating with React Router's `<Link>` or using your own custom component.\nIf more specific control is needed, each `step` object also accepts a `component` prop.",name:"component",required:!1,type:{name:'"a" | ComponentType<StepLinkComponentProps>'}},showSubSubSteps:{defaultValue:{value:"false"},description:"Whether or not to render a substep's substeps.",name:"showSubSubSteps",required:!1,type:{name:"boolean"}},onStepLinkClick:{defaultValue:null,description:"Function called when a step's Edit, Start, or Resume button/link is\nclicked. The step's `href` property will be passed as a parameter.",name:"onStepLinkClick",required:!1,type:{name:"(href?: string, stepId?: string) => any"}},completedText:{defaultValue:{value:"Completed"},description:"",name:"completedText",required:!1,type:{name:"string"}},editText:{defaultValue:{value:"Edit"},description:"",name:"editText",required:!1,type:{name:"string"}},resumeText:{defaultValue:{value:"Resume"},description:"",name:"resumeText",required:!1,type:{name:"string"}},startText:{defaultValue:{value:"Start"},description:"",name:"startText",required:!1,type:{name:"string"}},actionsLabelText:{defaultValue:null,description:"A template string for the aria-label describing a step's actions where\nthe substring `%{step}` is replaced with that step's `heading`.",name:"actionsLabelText",required:!1,type:{name:"string"}},substepsLabelText:{defaultValue:null,description:"A template string for the aria-label describing a step's substeps where\nthe substring `%{step}` is replaced with that step's `heading`.",name:"substepsLabelText",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/design-system/src/components/StepList/StepList.tsx#StepList"]={docgenInfo:StepList.__docgenInfo,name:"StepList",path:"packages/design-system/src/components/StepList/StepList.tsx#StepList"})}catch(__react_docgen_typescript_loader_error){}},"./packages/design-system/src/components/StepList/__mocks__/stepListStepData.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{X:()=>stepListStepData});var classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/preact/compat/jsx-runtime.mjs");const stepListStepData=[{id:"taxYear",heading:"Choose a tax year",href:"#step-1",started:!0,completed:!0},{id:"household",heading:"Enter household details",description:"Answer questions about who in your household qualifies for a premium tax credit and information on each person, including date of birth, location(s) they lived in for the year, and months of marketplace coverage.",href:"#step-2",started:!0,completed:!1,component:_ref=>{let{className,...props}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Y)("a",{className:classnames__WEBPACK_IMPORTED_MODULE_0___default()(className,"special-link"),...props,children:props.children})},steps:[{id:"household.overall",heading:"Overall household",href:"#step-2a",started:!0,completed:!0},{id:"household.bob",heading:"Bob's information",href:"#step-2b",started:!1,completed:!1},{id:"household.barb",heading:"Barb's information",href:"#step-2c",started:!1,completed:!1}]},{id:"review",heading:"Review your information",href:"#step-3",started:!1,completed:!1},{id:"finish",heading:"View premium results",href:"#step-4",started:!1,completed:!1}]},"./packages/design-system/src/components/utilities/useId.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>useId});var lodash_uniqueId__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/uniqueId.js"),lodash_uniqueId__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(lodash_uniqueId__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/preact/compat/dist/compat.module.js");function useId(prefix,providedId){return(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(providedId??lodash_uniqueId__WEBPACK_IMPORTED_MODULE_0___default()(prefix)).current}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/lodash/uniqueId.js":(module,__unused_webpack_exports,__webpack_require__)=>{var toString=__webpack_require__("./node_modules/lodash/toString.js"),idCounter=0;module.exports=function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id}}}]);