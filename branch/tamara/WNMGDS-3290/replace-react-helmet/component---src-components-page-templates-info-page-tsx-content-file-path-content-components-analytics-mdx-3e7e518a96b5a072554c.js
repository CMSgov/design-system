"use strict";(self.webpackChunk_cmsgov_cms_design_system_docs=self.webpackChunk_cmsgov_cms_design_system_docs||[]).push([[6110],{804:function(e,t,n){n.r(t),n.d(t,{Head:function(){return p},default:function(){return g}});var a=n(4041),l=n(8453),r=n(1610);function o(e){const t=Object.assign({p:"p",ul:"ul",li:"li",a:"a",h2:"h2",span:"span",strong:"strong",ol:"ol",code:"code",pre:"pre"},(0,l.R)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"Some of the design system components come with built-in analytics functionality that can be opted into. The following components are capable of reporting analytics data:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/alert/"},"Alert")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/button/"},"Button")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/dialog/"},"Dialog")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/drawer/"},"Help Drawer")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/header/healthcare-header/"},"Header")," (HealthCare.gov)"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/footer/healthcare-footer/"},"Footer")," (HealthCare.gov)"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/third-party-external-link/"},"Third Party External Link")),"\n"),"\n",a.createElement(t.h2,{id:"turning-it-on-and-off",style:{position:"relative"}},a.createElement(t.a,{href:"#turning-it-on-and-off","aria-label":"turning it on and off permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Turning it on and off"),"\n",a.createElement(t.p,null,"Analytics event tracking is ",a.createElement(t.strong,null,"disabled by default"),", except for the HealthCare.gov header. There are two ways you can enable or disable analytics in your application:"),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"At the application level, globally for all instances of a component with the ",a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/config/"},"config function")),"\n",a.createElement(t.li,null,"At the component-instance level by using the ",a.createElement(t.code,null,"analytics")," prop"),"\n"),"\n",a.createElement(t.p,null,"The ",a.createElement(t.code,null,"analytics")," prop on a particular component instance will always override the global setting. For instance, you can turn on analytics globally for all alerts but turn it off for a particular ",a.createElement(t.code,null,"Alert")," on a particular page by setting ",a.createElement(t.code,null,"analytics={false}")," on that ",a.createElement(t.code,null,"Alert")," (or ",a.createElement(t.code,null,'analytics="false"')," on a ",a.createElement(t.code,null,"ds-alert")," web component). It works the other way around too where analytics are turned off globally but turned on for a particular ",a.createElement(t.code,null,"Alert")," instance."),"\n",a.createElement(t.p,null,"As an example, to turn analytics on globally for alerts, ",a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/config/"},"call the config function")," from somewhere universal to your application, like this:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-js"},"// Import from the package that corresponds to your theme (one of these):\nimport { config } from '@cmsgov/design-system';\nimport { config } from '@cmsgov/ds-cms-gov';\nimport { config } from '@cmsgov/ds-healthcare-gov';\nimport { config } from '@cmsgov/ds-medicare-gov';\n\n// Then call the config function with your configuration settings\nconfig({ alertSendsAnalytics: true });\n")),"\n",a.createElement(t.p,null,"Here is the list of each component config property for analytics:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,"alertSendsAnalytics")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"buttonSendsAnalytics")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"dialogSendsAnalytics")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"helpDrawerSendsAnalytics")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"headerSendsAnalytics")," (HealthCare.gov)"),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"footerSendsAnalytics")," (HealthCare.gov)"),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"thirdPartyExternalLinkSendsAnalytics")),"\n"),"\n",a.createElement(t.h2,{id:"handling-the-events",style:{position:"relative"}},a.createElement(t.a,{href:"#handling-the-events","aria-label":"handling the events permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Handling the events"),"\n",a.createElement(t.p,null,"We currently provide two ways of handling analytics events in the design system:"),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"Through a global default event handler function, which can be changed"),"\n",a.createElement(t.li,null,"Through a function provided to a component instance via the ",a.createElement(t.code,null,"onAnalyticsEvent")," prop (React) or ",a.createElement(t.code,null,"ds-analytics-event")," event listener (web components)"),"\n"),"\n",a.createElement(t.p,null,"For the global default handler, the design system will currently attempt to pass all events to the ",a.createElement(t.code,null,"window.utag.link")," function if it exists. If this is not the desired analytics behavior for your application, you can provide your own default analytics event handler by setting the ",a.createElement(t.a,{href:"/design-system/branch/tamara/WNMGDS-3290/replace-react-helmet/components/config/"},a.createElement(t.code,null,"defaultAnalyticsFunction")," global config setting")," with your custom implementation, or you can pass a handler to each component instance with the ",a.createElement(t.code,null,"onAnalyticsEvent")," prop."),"\n",a.createElement(r.F,{heading:"Overriding events in web components"},a.createElement(t.p,null,"If you wish to override the analytics event handling for a particular web component instance by listening to the ",a.createElement(t.code,null,"ds-analytics-event"),", simply listening to the event will not override the default behavior. If you want to keep the component from calling the ",a.createElement(t.code,null,"defaultAnalyticsFunction")," with its events, you must call the ",a.createElement(t.code,null,"event.preventDefault()")," function within your event handler.")),"\n",a.createElement(t.h2,{id:"overriding-logged-data",style:{position:"relative"}},a.createElement(t.a,{href:"#overriding-logged-data","aria-label":"overriding logged data permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Overriding logged data"),"\n",a.createElement(t.p,null,"When you need to prevent sensitive personal information from being passed to analytics trackers from a particular component instance, you can either override the content that contains sensitive information using the ",a.createElement(t.code,null,"analyticsLabelOverride")," prop, or you can disable tracking on that component instance entirely by setting ",a.createElement(t.code,null,"analytics={false}"),"."))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.R)(),e.components);return t?a.createElement(t,e,a.createElement(o,e)):o(e)},i=n(7132),s=n(6799),m=n(5434),h=n(406),d=n(1085);const u=e=>{let{children:t,data:n,location:a}=e;const{frontmatter:l,tableOfContents:r,fields:{slug:o}}=n.mdx,c=(0,h.A)();return(0,d.jsx)(s.A,{frontmatter:l,location:a,slug:o,theme:c,tableOfContentsData:null==r?void 0:r.items,children:(0,d.jsx)(i.A,{theme:c,children:t})})},p=e=>{let{data:t,location:n}=e;const{frontmatter:a,fields:{slug:l}}=t.mdx;return(0,d.jsx)(m.A,{frontmatter:a,slug:l,location:n})};function g(e){return a.createElement(u,e,a.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-components-page-templates-info-page-tsx-content-file-path-content-components-analytics-mdx-3e7e518a96b5a072554c.js.map