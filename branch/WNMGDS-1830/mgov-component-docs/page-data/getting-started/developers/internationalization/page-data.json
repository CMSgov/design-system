{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/getting-started/developers/internationalization",
    "result": {"data":{"mdx":{"id":"aed060a3-67f3-5d18-8f8c-a177a6b60636","frontmatter":{"title":"Internationalization","status":null,"intro":null,"core":null,"healthcare":null,"medicare":null},"slug":"getting-started/developers/internationalization","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Internationalization\",\n  \"order\": 14\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"providing-your-own-internationalized-content\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#providing-your-own-internationalized-content\",\n    \"aria-label\": \"providing your own internationalized content permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Providing your own internationalized content\"), mdx(\"p\", null, \"The design system attempts to make all of its components' text content assignable through their React props. That means you can use your own internationalization solutions to provide the content in your applications. Here is an example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// Example of an application providing its own internationalized content\\n\\nimport { Alert } from '@cmsgov/design-system';\\nimport i18n from 'i18n';\\n\\nexport default function () {\\n  return <Alert heading={i18n('success')}>{i18n('account.created')}</Alert>;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"default-internationalized-content-in-the-design-system\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#default-internationalized-content-in-the-design-system\",\n    \"aria-label\": \"default internationalized content in the design system permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Default internationalized content in the design system\"), mdx(\"p\", null, \"While we want components to be flexible, we also want them to be easy to use, so for some components we do \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"provide default content\"), \". Some of this content comes in both English and Spanish, but our goal is to have Spanish translations for all default content in the near future.\"), mdx(\"p\", null, \"For applications that have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lang\"), \" attribute on their html element, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"the language will be detected automatically\"), \". If that language is not English or Spanish, the language of the design system will fall back to English. If automatic language detection does not work for your use case, the language can be set manually through the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setLanguage\"), \" function. Similarly, the current language can also be read from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getLanguage\"), \" function. Here's an example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { getLanguage, setLanguage } from '@cmsgov/design-system';\\n\\n// Set the design system language to something other than the document's detected language\\nsetLanguage('es');\\n\\n// Get the design system's current language\\nconsole.log(getLanguage());\\n\")), mdx(Alert, {\n    heading: \"Deprecated per-component langauge props\",\n    variation: \"warn\",\n    className: \"ds-u-margin-top--3\",\n    mdxType: \"Alert\"\n  }, mdx(\"p\", {\n    className: \"ds-c-alert__text\"\n  }, \"You may notice that some components accept an older `language` or `locale` prop to set the language of the content on a per-component basis, but these per-component props have been deprecated and will be removed in a future breaking-change release.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#providing-your-own-internationalized-content","title":"Providing your own internationalized content"},{"url":"#default-internationalized-content-in-the-design-system","title":"Default internationalized content in the design system"}]}}},"pageContext":{"id":"aed060a3-67f3-5d18-8f8c-a177a6b60636"}},
    "staticQueryHashes": ["1050346478","3661704687"]}