{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/components/tooltip",
    "result": {"data":{"mdx":{"id":"b709cf01-597d-5671-a607-83cb5d85d66a","frontmatter":{"title":"Tooltip","status":"draft","relatedUswdsGuidance":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tooltip\",\n  \"status\": \"draft\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar StorybookExample = makeShortcode(\"StorybookExample\");\nvar PropTable = makeShortcode(\"PropTable\");\nvar ComponentThemeOptions = makeShortcode(\"ComponentThemeOptions\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Tooltips provide additional information upon hover, focus or click. The information should be contextual, useful, and nonessential information.\"), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<Tooltip>\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tooltip\"), \" component can render a variety of content ranging from short descriptive text, to paragraphs with links, or more complex interactive popovers.\"), mdx(\"p\", null, \"The component provides a variety of props to configure tooltip behavior for these different use cases (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"interactive\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dialog\"), \"), and to customize styling (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"offset\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"maxWidth\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"className\"), \"). The element that triggers a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tooltip\"), \" can also be fully customized via props (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"triggerComponent\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"triggerContent\"), \").\"), mdx(\"p\", null, \"This component makes use of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://popper.js.org/docs/v2/\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"@popperjs/core\")), \" for tooltip positioning, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/focus-trap/focus-trap-react#readme\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"focus-trap-react\")), \" for trapping focus in Tooltip Dialogs, and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://reactcommunity.org/react-transition-group/css-transition\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"react-transition-group\")), \" for animations.\"), mdx(\"h3\", null, \"Icon Trigger\"), mdx(StorybookExample, {\n    componentName: \"icon tooltip\",\n    sourceFilePath: \"components/Tooltip/Tooltip.tsx\",\n    storyId: \"components-tooltip--icon-trigger\",\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Inline\"), mdx(StorybookExample, {\n    componentName: \"inline tooltip\",\n    sourceFilePath: \"components/Tooltip/Tooltip.tsx\",\n    storyId: \"components-tooltip--inline-trigger\",\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Interactive content\"), mdx(StorybookExample, {\n    componentName: \"interactive tooltip\",\n    sourceFilePath: \"components/Tooltip/Tooltip.tsx\",\n    storyId: \"components-tooltip--interactive-content\",\n    minHeight: 350,\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"With Close\"), mdx(StorybookExample, {\n    componentName: \"tooltip with close\",\n    sourceFilePath: \"components/Tooltip/Tooltip.tsx\",\n    storyId: \"components-tooltip--tooltip-with-close-button\",\n    minHeight: 350,\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Tooltip Props\"), mdx(PropTable, {\n    componentName: \"Tooltip\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<TooltipIcon>\")), mdx(\"p\", null, \"When using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<TooltipIcon>\"), \" as the only child of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Tooltip>\"), \", be sure to provide an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label\"), \" on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Tooltip>\"), \" to ensure an accessible name for the trigger.\"), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/Tooltip/TooltipIcon.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(\"h3\", null, \"Tooltip Icon Props\"), mdx(PropTable, {\n    componentName: \"TooltipIcon\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, \"Guidance\"), mdx(\"h3\", null, \"When to use\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use for helpful, non-critical information to strengthen an existing message.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use to increase certainty and enhance confidence about an interaction.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use with brief descriptions as tooltips perform best with succinct text.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tooltips are useful as a last resort for space-constrained UI. Explore other options for keeping content visible without a tooltip.\")), mdx(\"h3\", null, \"When to consider alternatives\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t hide information necessary for completing a task behind a tooltip interaction.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tooltips are microcopy and should be brief. Don't use a tooltip if you need a lot of text.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t use a tooltip when its content is repetitive or if usability is obvious.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If content can fit outside a tooltip, don't use a tooltip.\")), mdx(\"h2\", null, \"Customization\"), mdx(\"p\", null, \"The following Sass variables can be overridden to customize Tooltip fields:\"), mdx(ComponentThemeOptions, {\n    componentname: \"tooltip\",\n    mdxType: \"ComponentThemeOptions\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#tooltip","title":"<Tooltip>"},{"url":"#tooltipicon","title":"<TooltipIcon>"},{"url":"#guidance","title":"Guidance"},{"url":"#customization","title":"Customization"}]}}},"pageContext":{"id":"b709cf01-597d-5671-a607-83cb5d85d66a"}},
    "staticQueryHashes": ["1050346478","3750824424"]}