"use strict";(self.webpackChunkdesign_system=self.webpackChunkdesign_system||[]).push([[42],{"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MDXContext:function(){return MDXContext},MDXProvider:function(){return MDXProvider},useMDXComponents:function(){return useMDXComponents},withMDXComponents:function(){return withMDXComponents}});var compat_module=__webpack_require__("./node_modules/preact/compat/dist/compat.module.js");const MDXContext=compat_module.default.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return compat_module.default.createElement(Component,{...props,allComponents:allComponents})}}function useMDXComponents(components){const contextComponents=compat_module.default.useContext(MDXContext);return compat_module.default.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components:components,children:children,disableParentContext:disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),compat_module.default.createElement(MDXContext.Provider,{value:allComponents},children)}}}]);