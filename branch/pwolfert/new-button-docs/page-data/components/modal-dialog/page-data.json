{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/components/modal-dialog",
    "result": {"data":{"mdx":{"id":"19b381f7-d1ec-5195-bd3c-fedcc9f9f991","frontmatter":{"title":"Modal dialog","status":null,"intro":"The dialog component can be used to focus a user's attention on a single piece of content, without taking them to a new screen. Please use with caution; view our guidance for more details.","core":{"githubLink":"design-system/src/components/Dialog","sketchLink":"Jn3kY4k","storybookLink":"components-dialog--dialog-example"},"healthcare":{"sketchLink":"m1Y5wQ7","storybookLink":null,"githubLink":null},"medicare":{"sketchLink":"YGOggo0"}},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Modal dialog\",\n  \"intro\": \"The dialog component can be used to focus a user's attention on a single piece of content, without taking them to a new screen. Please use with caution; view our guidance for more details.\",\n  \"core\": {\n    \"githubLink\": \"design-system/src/components/Dialog\",\n    \"sketchLink\": \"Jn3kY4k\",\n    \"storybookLink\": \"components-dialog--dialog-example\"\n  },\n  \"healthcare\": {\n    \"sketchLink\": \"m1Y5wQ7\"\n  },\n  \"medicare\": {\n    \"sketchLink\": \"YGOggo0\"\n  }\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar StorybookExample = makeShortcode(\"StorybookExample\");\nvar PropTable = makeShortcode(\"PropTable\");\nvar ComponentThemeOptions = makeShortcode(\"ComponentThemeOptions\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Dialog size variants\"), mdx(\"p\", null, \"Apply one of the size modifier classes to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ds-c-dialog\"), \" element to change the dialog width.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".ds-c-dialog--narrow\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".ds-c-dialog--wide\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".ds-c-dialog--full\"))), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<Dialog>\")), mdx(StorybookExample, {\n    componentName: \"dialog\",\n    storyId: \"components-dialog--dialog-example\",\n    minHeight: 400,\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Props\"), mdx(PropTable, {\n    componentName: \"Dialog\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, \"Guidance\"), mdx(\"h3\", null, \"Usage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Dialog>\"), \" makes use of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<AriaModal>\"), \" component maintained by \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/davidtheclark/react-aria-modal\"\n  }, \"react-aria-modal docs on Github\"), \". The above documented props are only those directly exposed by the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Dialog>\"), \" component, but you can pass props specific to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<AriaModal>\"), \" here as well, e.g. you can set the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/davidtheclark/react-aria-modal#scrolldisabled\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"scrollDisabled\")), \" prop if you'd like to enable scrolling behind the modal window.\")), mdx(\"h3\", null, \"Accessibility\"), mdx(\"h4\", null, \"Keyboard support\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Enter\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Space\"), \" to select the highlighted item.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Tab\"), \" to move the focus sequentially through the list of focusable items.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Shift + Tab\"), \" to move the focus sequentially through the list of focusable items in reversed order.\")), mdx(\"h4\", null, \"Focus Management\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the modal is opened, the entire modal is the default focus state. Most screen readers will announce the entire dialog content.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Focus is trapped within the modal and users can then navigate through the dialog actions with the keyboard.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Escape will close the modal. To disable exiting when users press the Escape key, set the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"escapeExits\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the modal closes, focus returns to the element that was focused just before the modal is activated\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To place the focus inside of the dialog on activating the modal, set the dialog focus using the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"initialFocus\"), \" prop with boolean prop \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"focusDialog\"), \" set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"))), mdx(\"h3\", null, \"Learn more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.nczonline.net/blog/2013/02/12/making-an-accessible-dialog-box/\"\n  }, \"Making an accessible dialog box\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://paper.dropbox.com/doc/Modal-dialog-boxes-jbsTPoITg37IIc6ybjetM\"\n  }, \"GOV.UK modal dialog boxes discussion\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.nngroup.com/articles/overuse-of-overlays/\"\n  }, \"Overuse of Overlays: How to Avoid Misusing Lightboxes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3.org/WAI/GL/wiki/Using_ARIA_role%3Ddialog_to_implement_a_modal_dialog_box\"\n  }, \"Using ARIA role=dialog to implement a modal dialog box\"))), mdx(\"h2\", null, \"Customization\"), mdx(\"p\", null, \"The following Sass variables can be overridden to customize Dialog components:\"), mdx(ComponentThemeOptions, {\n    componentname: \"dialog\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Related patterns\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/pwolfert/new-button-docs/components/alert/\"\n  }, \"Alert\"))), mdx(\"h2\", null, \"Google Analytics\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Analytics event tracking is disabled by default.\")), mdx(\"h3\", null, \"Enable event tracking\"), mdx(\"p\", null, \"Import and set the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setDialogSendsAnalytics\"), \" feature flag to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" in your application's entry file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { setDialogSendsAnalytics } from '@cmsgov/<design-system-package>';\\nsetDialogSendsAnalytics(true);\\n\")), mdx(\"p\", null, \"On applications where the page has \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"utag\"), \" loaded, the data goes to Tealium which allows it to route to Google Analytics or the currently approved data analytics tools.\"), mdx(\"h3\", null, \"Disable event tracking\"), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"analytics\"), \" prop, pass the value \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \" to the component to disable analytics tracking for a singular component instance\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"analytics={false}\\n\")), mdx(\"h3\", null, \"Override event tracking\"), mdx(\"p\", null, \"A custom heading value can be sent for an analytics event by using the prop \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"analyticsLabelOverride\"), \". It is recommended that this value be used to prevent sensitive personal information from being passed to analytics trackers.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#dialog-size-variants","title":"Dialog size variants"},{"url":"#dialog","title":"<Dialog>","items":[{"url":"#props","title":"Props"}]},{"url":"#guidance","title":"Guidance","items":[{"url":"#usage","title":"Usage"},{"url":"#accessibility","title":"Accessibility"},{"url":"#learn-more","title":"Learn more"}]},{"url":"#customization","title":"Customization","items":[{"url":"#related-patterns","title":"Related patterns"}]},{"url":"#google-analytics","title":"Google Analytics","items":[{"url":"#enable-event-tracking","title":"Enable event tracking"},{"url":"#disable-event-tracking","title":"Disable event tracking"},{"url":"#override-event-tracking","title":"Override event tracking"}]}]}}},"pageContext":{"id":"19b381f7-d1ec-5195-bd3c-fedcc9f9f991"}},
    "staticQueryHashes": ["1050346478","3750824424"]}