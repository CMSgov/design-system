{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/components/table",
    "result": {"data":{"mdx":{"id":"b55f226a-5e57-50de-869c-ab62e05042b2","frontmatter":{"title":"Table","status":"draft","relatedUswdsGuidance":"components/tables"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Table\",\n  \"relatedUswdsGuidance\": \"components/tables\",\n  \"status\": \"draft\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar EmbeddedExample = makeShortcode(\"EmbeddedExample\");\nvar ResponsiveExample = makeShortcode(\"ResponsiveExample\");\nvar PropTable = makeShortcode(\"PropTable\");\nvar ComponentThemeOptions = makeShortcode(\"ComponentThemeOptions\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Tables show tabular data in columns and rows.\"), mdx(\"h2\", null, \"Table with multi headers and a caption\"), mdx(EmbeddedExample, {\n    mdxType: \"EmbeddedExample\"\n  }, mdx(Table, {\n    mdxType: \"Table\"\n  }, mdx(TableCaption, {\n    mdxType: \"TableCaption\"\n  }, \"Household members\"), mdx(\"col\", null), mdx(\"colgroup\", {\n    span: \"2\"\n  }), mdx(\"colgroup\", {\n    span: \"2\"\n  }), mdx(TableHead, {\n    mdxType: \"TableHead\"\n  }, mdx(TableRow, {\n    mdxType: \"TableRow\"\n  }, mdx(TableCell, {\n    component: \"td\",\n    rowSpan: \"1\",\n    mdxType: \"TableCell\"\n  }), mdx(TableCell, {\n    component: \"th\",\n    colSpan: \"2\",\n    className: \"ds-u-text-align--center\",\n    scope: \"colgroup\",\n    mdxType: \"TableCell\"\n  }, \"Address\"), mdx(TableCell, {\n    component: \"th\",\n    colSpan: \"2\",\n    className: \"ds-u-text-align--center\",\n    scope: \"colgroup\",\n    mdxType: \"TableCell\"\n  }, \"Employment\")), mdx(TableRow, {\n    mdxType: \"TableRow\"\n  }, mdx(TableCell, {\n    component: \"th\",\n    scope: \"col\",\n    mdxType: \"TableCell\"\n  }, \"Name\"), mdx(TableCell, {\n    component: \"th\",\n    scope: \"col\",\n    mdxType: \"TableCell\"\n  }, \"Street\"), mdx(TableCell, {\n    component: \"th\",\n    scope: \"col\",\n    mdxType: \"TableCell\"\n  }, \"ZIP code\"), mdx(TableCell, {\n    component: \"th\",\n    scope: \"col\",\n    mdxType: \"TableCell\"\n  }, \"Employer\"), mdx(TableCell, {\n    component: \"th\",\n    scope: \"col\",\n    mdxType: \"TableCell\"\n  }, \"Industry\"))), mdx(TableBody, {\n    mdxType: \"TableBody\"\n  }, mdx(TableRow, {\n    mdxType: \"TableRow\"\n  }, mdx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    mdxType: \"TableCell\"\n  }, \"John Doe\"), mdx(TableCell, {\n    component: \"td\",\n    mdxType: \"TableCell\"\n  }, \"123 Braavos Ave.\"), mdx(TableCell, {\n    component: \"td\",\n    mdxType: \"TableCell\"\n  }, \"20005\"), mdx(TableCell, {\n    component: \"td\",\n    mdxType: \"TableCell\"\n  }, \"Acme Co.\"), mdx(TableCell, {\n    component: \"td\",\n    mdxType: \"TableCell\"\n  }, \"Healthcare\")), mdx(TableRow, {\n    mdxType: \"TableRow\"\n  }, mdx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    mdxType: \"TableCell\"\n  }, \"Jane Doe\"), mdx(TableCell, {\n    component: \"td\",\n    mdxType: \"TableCell\"\n  }, \"456 King's Landing\"), mdx(TableCell, {\n    component: \"td\",\n    mdxType: \"TableCell\"\n  }, \"20005\"), mdx(TableCell, {\n    component: \"td\",\n    mdxType: \"TableCell\"\n  }, \"Acme Co.\"), mdx(TableCell, {\n    component: \"td\",\n    mdxType: \"TableCell\"\n  }, \"Healthcare\"))))), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<Table>\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Table\"), \" is a container component that contains \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableCaption\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableHead\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableBody\"), \" as children,\\nas well as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableRow\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableCell\"), \" for the table content. These components mostly follow ordinary HTML table semantics, but also include some additional\\nresponsive features including horizontal scrolling and vertically stacked rows.\"), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/Table/Table.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(\"h3\", null, \"Scrollable Table\"), mdx(ResponsiveExample, {\n    title: \"Scrollable table example\",\n    storyId: \"components-table--scrollable-table\",\n    mdxType: \"ResponsiveExample\"\n  }), mdx(\"h3\", null, \"Stackable Table\"), mdx(ResponsiveExample, {\n    componentName: \"stackable table example\",\n    storyId: \"components-table--stackable-table\",\n    mdxType: \"ResponsiveExample\"\n  }), mdx(\"h3\", null, \"Table Props\"), mdx(PropTable, {\n    componentName: \"Table\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<TableCaption>\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableCaption\"), \" renders the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<caption>\"), \" element.\"), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/Table/TableCaption.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(\"h3\", null, \"Table Caption Props\"), mdx(PropTable, {\n    componentName: \"TableCaption\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<TableHead>\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableHead\"), \" renders the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<thead>\"), \" element and will typically contain \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableRow\"), \" elements to define table columns.\"), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/Table/TableHead.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(\"h3\", null, \"Table Head Props\"), mdx(PropTable, {\n    componentName: \"TableHead\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<TableBody>\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableBody\"), \" renders the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<tbody>\"), \" element and will typically contain \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableRow\"), \" elements to define table data.\"), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/Table/TableBody.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(\"h3\", null, \"Table Body Props\"), mdx(PropTable, {\n    componentName: \"TableBody\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<TableRow>\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableRow\"), \" renders a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<tr>\"), \" element.\"), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/Table/TableRow.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(\"h3\", null, \"Table Row Props\"), mdx(PropTable, {\n    componentName: \"TableRow\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<TableCell>\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableCell\"), \" dynamically renders a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<th>\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<td>\"), \" element based on the parent component or user specified \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" prop. By default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableCell\"), \" will automatically render a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<th>\"), \" element if the parent component is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TableHead\"), \", otherwise it will render a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<td>\"), \" element.\"), mdx(ViewSourceLink, {\n    sourceFilePath: \"components/Table/TableCell.tsx\",\n    mdxType: \"ViewSourceLink\"\n  }), mdx(\"h3\", null, \"Table Cell Props\"), mdx(PropTable, {\n    componentName: \"TableCell\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, \"Guidance\"), mdx(\"h3\", null, \"When to use\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When you need tabular information, such as statistical data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When users need to compare sets of information.\")), mdx(\"h3\", null, \"When to consider alternatives\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Depending on the type of content, consider using other presentation formats such as definition lists or hierarchical lists.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you're writing out name / value pairs, there's often a more compact way compared to using a table.\")), mdx(\"h3\", null, \"Usage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Right-align numerical data in tables. You can use the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"align\"), \" prop on the TableCell to accomplish this. Right alignment makes it easier to scan and compare numerical values.\")), mdx(\"h3\", null, \"Accessibility\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tables can have two levels of headers. Each header cell should have \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"scope=\\\"col\\\"\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"scope=\\\"row\\\"\"), \". \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-scope\"\n  }, \"Learn more about the \\\"scope\\\" attribute.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Complex tables are tables with more than two levels of headers. Each header should be given a unique \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"id\"), \" and each data cell should have a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"headers\"), \" attribute with each related header cell\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"id\"), \" listed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When adding a title to a table, include it in a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<caption>\"), \" tag inside of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<table>\"), \" element.\")), mdx(\"h2\", null, \"Customization\"), mdx(\"p\", null, \"The following Sass variables can be overridden to customize Table components:\"), mdx(ComponentThemeOptions, {\n    componentname: \"table\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Learn more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3.org/WAI/tutorials/tables/\"\n  }, \"W3C Web Accessibility Tutorial \", \"-\", \" Table Concepts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://medium.com/mission-log/design-better-data-tables-430a30a00d8c\"\n  }, \"Design Better Data Tables\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#table-with-multi-headers-and-a-caption","title":"Table with multi headers and a caption"},{"url":"#table","title":"<Table>"},{"url":"#tablecaption","title":"<TableCaption>"},{"url":"#tablehead","title":"<TableHead>"},{"url":"#tablebody","title":"<TableBody>"},{"url":"#tablerow","title":"<TableRow>"},{"url":"#tablecell","title":"<TableCell>"},{"url":"#guidance","title":"Guidance"},{"url":"#customization","title":"Customization"}]}}},"pageContext":{"id":"b55f226a-5e57-50de-869c-ab62e05042b2"}},
    "staticQueryHashes": ["1050346478","3750824424"]}