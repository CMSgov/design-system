{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/components/date-field/date-picker",
    "result": {"data":{"mdx":{"id":"38711195-12d8-5cf5-ab02-cf003067255b","frontmatter":{"title":"Calendar Picker","status":null,"relatedUswdsGuidance":"components/date-picker/"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Calendar Picker\",\n  \"relatedUswdsGuidance\": \"components/date-picker/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar StorybookExample = makeShortcode(\"StorybookExample\");\nvar PropTable = makeShortcode(\"PropTable\");\nvar ComponentThemeOptions = makeShortcode(\"ComponentThemeOptions\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Date field (with calendar picker), also known as \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"date picker\"), \", provides single date entry with a text field or selection through a visual calendar element tied to the input.\"), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<SingleInputDateField>\")), mdx(\"p\", null, \"To enable the date picker feature, you must pass both a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"from<TIME>\"), \" property (i.e., \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fromDate\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fromMonth\"), \", etc.) \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"and\"), \" a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to<TIME>\"), \" property (i.e., \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toDate\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toMonth\"), \", etc.) to the date field component.\"), mdx(StorybookExample, {\n    componentName: \"singleInputDateField\",\n    sourceFilePath: \"components/DateField/SingleInputDateField.tsx\",\n    storyId: \"components-singleinputdatefield--with-picker\",\n    mdxType: \"StorybookExample\"\n  }), mdx(\"h3\", null, \"Props\"), mdx(PropTable, {\n    componentName: \"SingleInputDateField\",\n    mdxType: \"PropTable\"\n  }), mdx(\"h2\", null, \"Guidance\"), mdx(\"h3\", null, \"When to use\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the date picker for dates that have happened within the last year, in the future, or is relevant to selecting the day of the week.\")), mdx(\"h3\", null, \"When to consider alternatives\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't use if users are entering a memorable date. Instead, use either \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/pwolfert/new-button-docs/components/single-input-date-field/\"\n  }, \"single-\"), \" or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/pwolfert/new-button-docs/components/multi-input-date-field/\"\n  }, \"multi-input\"), \" date fields.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't use if the date occurred in the distant past (like date of birth).\")), mdx(\"h3\", null, \"Usage\"), mdx(\"p\", null, \"Allow users to have flexibility in entering the date, such as allowing one-digit numbers with or without \\\"0\\\" prior to the number, or entering a date with or without slashes to separate month, day, and year.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: \\\"1\\\" as well as \\\"01\\\" for a month or day.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: \\\"05/18/2022\\\" as well as \\\"05182022\\\".\")), mdx(\"h3\", null, \"Accessibility\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"These text fields should follow the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/pwolfert/new-button-docs/components/text-field/#guidance\"\n  }, \"accessibility guidelines for all text inputs\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Users will be able to enter a variety of date formats that automatically format to the correct date format of MM/DD/YYYY. This change happens once the form field loses focus. For example, a user enters a date as \\\"4122020\\\" and it changes to \\\"04/01/2020\\\" once focus leaves the date input.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Instructions are available make this more usable/accessible for assistive technology.\")), mdx(\"h2\", null, \"Customization\"), mdx(\"p\", null, \"The following Sass variables can be overridden to customize Input/Form components:\"), mdx(ComponentThemeOptions, {\n    componentname: \"text-input\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Form components\"), mdx(ComponentThemeOptions, {\n    componentname: \"form\",\n    mdxType: \"ComponentThemeOptions\"\n  }), mdx(\"h3\", null, \"Related patterns\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/pwolfert/new-button-docs/components/multi-input-date-field/\"\n  }, \"Date field (multi-input)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/design-system/branch/pwolfert/new-button-docs/components/single-input-date-field/\"\n  }, \"Date field (single-input)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#singleinputdatefield","title":"<SingleInputDateField>"},{"url":"#guidance","title":"Guidance"},{"url":"#customization","title":"Customization"}]}}},"pageContext":{"id":"38711195-12d8-5cf5-ab02-cf003067255b"}},
    "staticQueryHashes": ["1050346478","3750824424"]}