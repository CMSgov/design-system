{"version":3,"file":"component---src-components-info-page-tsx-2c0113fd50fb22b1837d.js","mappings":"uMAWMA,EAAW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SACxB,EAAqDD,EAArD,IAAQE,EAAR,cAAqBC,EAArB,OAA2BC,EAA3B,kBAA4CC,EAA5C,OACMC,GAAQC,EAAAA,EAAAA,KAEd,OACE,qBACEL,YADF,EAEED,SAFF,EAGEI,KAHF,EAIEC,MAJF,EAKEE,oBAAqBJ,MAAAA,OAAF,EAAEA,EAAiBK,OAEtC,qBAAiBT,KAAjB,EAA6BM,MAAOA,MAoC1C,SAASI,EAAaC,EAAU,GAC9B,IAAMC,EAAeC,EAArB,SACMC,EAAeH,EAArB,SAMA,OACEC,EAAAA,WAA0BE,EAA1BF,UACAA,EAAAA,SAAwBE,EAF1B,OASF,UAAeC,EAAAA,KAAAA,EAAf","sources":["webpack://@cmsgov/cms-design-system-docs/./src/components/InfoPage.tsx"],"sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from './Layout';\nimport { MdxQuery } from '../helpers/graphQLTypes';\nimport useTheme from '../helpers/useTheme';\nimport ContentRenderer from './ContentRenderer';\n\n/**\n * Template for information content pages.\n */\nconst InfoPage = ({ data, location }: MdxQuery) => {\n  const { frontmatter, body, tableOfContents, slug } = data.mdx;\n  const theme = useTheme();\n\n  return (\n    <Layout\n      frontmatter={frontmatter}\n      location={location}\n      slug={slug}\n      theme={theme}\n      tableOfContentsData={tableOfContents?.items}\n    >\n      <ContentRenderer data={body} theme={theme} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      frontmatter {\n        title\n        status\n        intro\n        core {\n          githubLink\n          sketchLink\n          storybookLink\n        }\n        healthcare {\n          sketchLink\n          storybookLink\n          githubLink\n        }\n        medicare {\n          sketchLink\n          storybookLink\n          githubLink\n        }\n      }\n      slug\n      body\n      tableOfContents(maxDepth: 3)\n    }\n  }\n`;\n\nfunction compareProps(prevProps, nextProps) {\n  const nextLocation = nextProps.location;\n  const prevLocation = prevProps.location;\n  /*\n  return true if passing nextProps to render would return\n  the same result as passing prevProps to render,\n  otherwise return false\n  */\n  if (\n    nextLocation.pathname === prevLocation.pathname &&\n    nextLocation.search === prevLocation.search\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport default React.memo(InfoPage, compareProps);\n"],"names":["InfoPage","data","location","frontmatter","body","tableOfContents","slug","theme","useTheme","tableOfContentsData","items","compareProps","prevProps","nextLocation","nextProps","prevLocation","React"],"sourceRoot":""}