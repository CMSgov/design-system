{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/patterns/overview",
    "result": {"data":{"mdx":{"id":"42b84e2f-e0d8-502a-9f2a-4d624687ceea","frontmatter":{"title":"Patterns","status":null,"relatedUswdsGuidance":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Patterns\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Patterns are solutions and researched best practices that solve recurring user interface design problems:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How do you build complex, multi-part web forms?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How do you provide navigational context?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How do you handle progressive disclosure?\")), mdx(\"h2\", null, \"How are they different from components?\"), mdx(\"p\", null, \"A pattern is more than the sum of its parts. Patterns are solutions, whereas a component can be considered a UI chunk. Patterns consist of design, content strategy, reusable components, and accessibility put together to solve common problems.\"), mdx(\"p\", null, \"Components can be considered concrete, a finite list: buttons, accordions, tables, etc. Patterns might be unique to a site or an application and may evolve with changes in technology or after competitive analysis.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#how-are-they-different-from-components","title":"How are they different from components?"}]}}},"pageContext":{"id":"42b84e2f-e0d8-502a-9f2a-4d624687ceea"}},
    "staticQueryHashes": ["1050346478","2862643552"]}