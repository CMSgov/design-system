{
    "componentChunkName": "component---src-components-info-page-tsx",
    "path": "/getting-started/migrating-to-new-buttons",
    "result": {"data":{"mdx":{"id":"55c2ed51-d223-58db-b4e8-04fcb70e7b0a","frontmatter":{"title":"Migrating to v4 Buttons","status":null,"intro":null,"core":null,"healthcare":null,"medicare":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Migrating to v4 Buttons\",\n  \"order\": 60\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ButtonVariationsTable = makeShortcode(\"ButtonVariationsTable\");\nvar ButtonMigrationTable = makeShortcode(\"ButtonMigrationTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The CMS Design System v4 release introduces an updated button architecture that is not backwards compatible with previous versions of the design system. Please review the following sections to become acquianted with our new buttons and how to migrate your code.\"), mdx(\"h2\", null, \"The new buttons\"), mdx(\"p\", null, \"In order to more consistently apply design token values across our core and child design systems, we now describe button variations by how they look rather than what their role is in a brand. Because different brands can apply different meanings to each of the styles of buttons we offer, we needed a more consistent way of naming buttons as we move towards a unified design system that can be themed by brand.\"), mdx(\"p\", null, \"Below are two tables showing the complete set of buttons available in v4. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Use the doc site's theme selector\"), \" to see what buttons are available in the child design systems.\"), mdx(ButtonVariationsTable, {\n    mdxType: \"ButtonVariationsTable\"\n  }), mdx(\"h2\", null, \"Mapping old buttons to new buttons\"), mdx(\"p\", null, \"While we have provided \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"automatic migration scripts\"), \" as part of this migration guide, it is helpful to know how the old button variations in your app are mapped to the new button architecture. The following tables show how to map buttons defined in React code or in plain HTML with CSS classes. Note that you can \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"use the doc site's theme selector\"), \" to see the buttons that are specific to your brand.\"), mdx(ButtonMigrationTable, {\n    mdxType: \"ButtonMigrationTable\"\n  }), mdx(\"h2\", null, \"Migration scripts\"), mdx(\"p\", null, \"Hello world\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#the-new-buttons","title":"The new buttons"},{"url":"#mapping-old-buttons-to-new-buttons","title":"Mapping old buttons to new buttons"},{"url":"#migration-scripts","title":"Migration scripts"}]}}},"pageContext":{"id":"55c2ed51-d223-58db-b4e8-04fcb70e7b0a"}},
    "staticQueryHashes": ["1050346478","3750824424"]}