{"componentChunkName":"component---src-components-page-templates-info-page-tsx","path":"/foundation/base/","result":{"data":{"mdx":{"id":"5f8e5940-80a7-58e6-81d4-0226e712ecc7","frontmatter":{"title":"Inverse Base","intro":null,"core":null,"healthcare":null,"medicare":null},"slug":"foundation/base","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Inverse Base\",\n  \"order\": 10\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar EmbeddedExample = makeShortcode(\"EmbeddedExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".ds-base--inverse\"), \" to any element sets an inverse \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"background-color\"), \" to that element and its children. This class overwrites those styles applied to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<body>\"), \".\"), mdx(EmbeddedExample, {\n    mdxType: \"EmbeddedExample\"\n  }, mdx(\"div\", {\n    className: \"ds-base--inverse ds-u-padding--2\"\n  }, loremIpsumGenerator('l'))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{}}},"pageContext":{"id":"5f8e5940-80a7-58e6-81d4-0226e712ecc7"}},"staticQueryHashes":["3481578012"]}