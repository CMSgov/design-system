[
  [
    "Deprecated: The event_type is no longer an analytics dimension being tracked."
  ],
  [
    "actions",
    "Buttons or other HTML to be rendered in the \"actions\" bar at the bottom of the dialog.\n\nReactNode",
    "-"
  ],
  [
    "actionsClassName",
    "Additional classes to be added to the actions container.\nstring",
    "-"
  ],
  [
    "alert",
    "If true, the modal will receive a role of alertdialog, instead of its default dialog. The alertdialog role should only be used when an alert, error, or warning occurs.\n\nboolean",
    "-"
  ],
  [
    "analytics",
    "Analytics events tracking is enabled by default. Set this value to false to disable tracking for this component instance.\n\nboolean",
    "-"
  ],
  [
    "analyticsEventTypeOverride",
    "If you need the event_type to be overridden for your use case, you can provide an alternate string here. Suggested values can be found in the EventType enum.\n\nstring\nDeprecated: The event_type is no longer an analytics dimension being tracked.",
    "-"
  ],
  [
    "analyticsLabelOverride",
    "An override for the dynamic content sent to analytics services. By default this content comes from the heading.\n\nIn cases where this componentâ€™s heading may contain sensitive information, use this prop to override what is sent to analytics.\n\nstring",
    "-"
  ],
  [
    "ariaCloseLabel",
    "Aria label for the close button\nstring",
    "-"
  ],
  [
    "backdropClickExits",
    "Pass true to have the dialog close when its backdrop pseudo-element is clicked\nboolean",
    "-"
  ],
  [
    "children",
    "object",
    "-"
  ],
  [
    "className",
    "Additional classes to be added to the root dialog element.\nstring",
    "-"
  ],
  [
    "headerClassName",
    "Additional classes to be added to the header, which wraps the heading and close button.\n\nstring",
    "-"
  ],
  [
    "heading",
    "The Dialog's heading, to be rendered in the header alongside the close button.\nReactNode",
    "-"
  ],
  [
    "id",
    "A custom id attribute for the dialog element\nstring",
    "-"
  ],
  [
    "isOpen",
    "Controls whether the dialog is in an open state\nboolean",
    "-"
  ],
  [
    "onAnalyticsEvent",
    "Optional callback that will intercept analytics events for this component. If none is specified, the design system will use the default analytics function, which can be overwritten globally with the defaultAnalyticsFunction config property.\n\n(event: AnalyticsEvent) => void",
    "-"
  ],
  [
    "onExit*",
    "Called when the user triggers an exit event, like by clicking the close button or pressing the ESC key. The parent of this component is responsible for showing or not showing the dialog, so you need to use this callback to make that happen. The dialog does not hide or remove itself.\n\n(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void",
    "-"
  ],
  [
    "size",
    "The Dialog's size parameter.\n\"narrow\"\n\"wide\"\n\"full\"",
    "-"
  ]
]