[
  [
    "Deprecated: Please provide a `name` property to each item instead."
  ],
  [
    "Deprecated: This is deprecated in favor of autoFocus"
  ],
  [
    "Deprecated: This is no longer used"
  ],
  [
    "Deprecated: Use the `clearInputText` prop (which sets the visible Clear search button text) instead. Providing an `aria-label` on the Clear Search `<button>` can override its visible text label, which may confuse users who rely on both visual and screen reader feedback when the two differ. This prop was originally intended to provide a more descriptive label for screen reader users but is no longer recommended."
  ],
  [
    "ariaClearLabel",
    "string\nDeprecated: Use the `clearInputText` prop (which sets the visible Clear search button text) instead. Providing an `aria-label` on the Clear Search `<button>` can override its visible text label, which may confuse users who rely on both visual and screen reader feedback when the two differ. This prop was originally intended to provide a more descriptive label for screen reader users but is no longer recommended.",
    "Clear search to try again"
  ],
  [
    "autoCompleteLabel",
    "Control the TextField autocomplete attribute. Defaults to \"off\" to support accessibility. Read more.\nstring",
    "-"
  ],
  [
    "autoFocus",
    "boolean",
    "-"
  ],
  [
    "children*",
    "Must contain a TextField component\nReactNode",
    "-"
  ],
  [
    "className",
    "Additional classes to be added to the root element. Useful for adding utility classes.\n\nstring",
    "-"
  ],
  [
    "clearInputText",
    "Text rendered on the page if clearInput prop is passed. Default is \"Clear search\".\nReactNode",
    "Clear Search"
  ],
  [
    "clearSearchButton",
    "Removes the Clear search button when set to false. Default is true.\nboolean",
    "-"
  ],
  [
    "focusTrigger",
    "boolean\nDeprecated: This is deprecated in favor of autoFocus",
    "-"
  ],
  [
    "getA11yStatusMessage",
    "Customize the default status messages announced to screen reader users via aria-live when autocomplete results are populated.\nany\nDeprecated: This is no longer used",
    "-"
  ],
  [
    "id",
    "A unique id to be passed to the child TextField. If no id is passed as a prop, the Autocomplete component will auto-generate one. This prop was provided in cases where an id might need to be passed to multiple components, such as the htmlFor attribute on a label and the id of an input.\n\nstring",
    "-"
  ],
  [
    "inputRef",
    "Access a reference to the child TextField's input element\nRef<any> | MutableRefObject<any>",
    "-"
  ],
  [
    "itemToString",
    "Used to determine the string value for the selected item (which is used to compute the inputValue).\n(item: AutocompleteItem) => string\nDeprecated: Please provide a `name` property to each item instead.",
    "-"
  ],
  [
    "items",
    "Array of objects used to populate the suggestion list that appears below the input as users type. Passing an empty array will show a \"No results\" message. If you do not yet want to show results, this props should be undefined.\n\nAutocompleteItems",
    "-"
  ],
  [
    "label",
    "Adds a heading to the top of the autocomplete list. This can be used to convey to the user that they're required to select an option from the autocomplete list.\nReactNode",
    "-"
  ],
  [
    "labelId",
    "A unique id to be used on the child TextField label tag\nstring",
    "-"
  ],
  [
    "loading",
    "Can be called when the items array is being fetched remotely, or will be delayed for more than 1-2 seconds.\nboolean",
    "-"
  ],
  [
    "loadingMessage",
    "Message users will see when the loading prop is passed to Autocomplete.\nReactNode",
    "Loading..."
  ],
  [
    "noResultsMessage",
    "Message users will see when the items array returns empty and the loading prop is passed to <Autocomplete />.\nReactNode",
    "No results"
  ],
  [
    "onChange",
    "Called when the user selects an item and the selected item has changed. Called with the item that was selected.\n(selectedItem: AutocompleteItem) => void",
    "-"
  ],
  [
    "onInputValueChange",
    "Called when the child TextField value changes. Is called with a string representing the input value.\n(inputValue: string) => void",
    "-"
  ]
]