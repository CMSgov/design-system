[
  [
    "alertRef",
    "Access a reference to the alert div element\n(...args: any[]) => any",
    "-"
  ],
  [
    "autoFocus",
    "Sets the focus on Alert during the first mount\nboolean",
    "-"
  ],
  [
    "children",
    "The alert's body content\nReactNode",
    "-"
  ],
  [
    "className",
    "string",
    "-"
  ],
  [
    "heading",
    "Text for the alert heading\nReactNode",
    "-"
  ],
  [
    "headingId",
    "Optional id used to link the aria-labelledby attribute to the heading. If not provided, a unique id will be automatically generated and used.\nstring",
    "-"
  ],
  [
    "headingLevel",
    "Heading type to override default <h2>.\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"",
    "\"2\""
  ],
  [
    "hideIcon",
    "Boolean to hide the Alert icon\nboolean",
    "-"
  ],
  [
    "id",
    "A unique ID for this element. A unique ID will be generated if one isn't provided.\nstring",
    "-"
  ],
  [
    "role",
    "ARIA role, defaults to 'region'\n\"alert\"\n\"alertdialog\"\n\"region\"\n\"status\"",
    "\"region\""
  ],
  [
    "weight",
    "A string corresponding to the Alert weight classes (lightweight)\n\"lightweight\"",
    "-"
  ],
  [
    "variation",
    "A string corresponding to the Alert variation classes (error, warn, success)\n\"success\"\n\"warn\"\n\"error\"",
    "-"
  ],
  [
    "analytics",
    "Analytics events tracking is enabled by default. Set this value to false to disable tracking for this component instance.\n\nboolean",
    "-"
  ],
  [
    "analyticsLabelOverride",
    "An override for the dynamic content sent to analytics services. By default this content comes from the heading.\n\nIn cases where this componentâ€™s heading may contain sensitive information, use this prop to override what is sent to analytics.\n\nstring",
    "-"
  ],
  [
    "analyticsEventTypeOverride",
    "If you need the event_type to be overridden for your use case, you can provide an alternate string here. Suggested values can be found in the EventType enum.\n\nstring",
    "-"
  ],
  [
    "onAnalyticsEvent",
    "Optional callback that will intercept analytics events for this component. If none is specified, the design system will use the default analytics function, which can be overwritten globally with setDefaultAnalyticsFunction.\n\n(event: AnalyticsEvent) => void",
    "-"
  ],
  [
    "ref",
    "Ref<HTMLDivElement>",
    "-"
  ]
]