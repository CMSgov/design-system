[
  [
    "ariaLabel",
    "Gives more context to screen readers on the Drawer close button.\nstring",
    "-"
  ],
  [
    "closeButtonText",
    "ReactNode",
    "-"
  ],
  [
    "closeButtonVariation",
    "\"solid\"\n\"ghost\"",
    "-"
  ],
  [
    "className",
    "string",
    "-"
  ],
  [
    "footerBody",
    "ReactNode",
    "-"
  ],
  [
    "footerTitle",
    "ReactNode",
    "-"
  ],
  [
    "hasFocusTrap",
    "Enables focus trap functionality within Drawer.\nboolean",
    "-"
  ],
  [
    "heading*",
    "Text for the Drawer heading. Required because the heading will be focused on mount.\nReactNode",
    "-"
  ],
  [
    "headingId",
    "A unique id to be used on heading element to label multiple instances of Drawer.\nstring",
    "-"
  ],
  [
    "headingLevel",
    "Heading type to override default <h3>\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"",
    "-"
  ],
  [
    "headingRef",
    "Ref to heading element\nMutableRefObject<any>",
    "-"
  ],
  [
    "isHeaderSticky",
    "Enables \"sticky\" position of Drawer header element.\nboolean",
    "-"
  ],
  [
    "isFooterSticky",
    "Enables \"sticky\" position of Drawer footer element.\nboolean",
    "-"
  ],
  [
    "onCloseClick*",
    "Called when the user activates the close button or presses the ESC key if focus trapping is enabled. The parent of this component is responsible for showing or not showing the drawer, so you need to use this callback to make that happen. The dialog does not hide itself.\n\n(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void",
    "-"
  ],
  [
    "analytics",
    "Analytics events tracking is enabled by default. Set this value to false to disable tracking for this component instance.\n\nboolean",
    "-"
  ],
  [
    "analyticsLabelOverride",
    "An override for the dynamic content sent to analytics services. By default this content comes from the heading.\n\nIn cases where this componentâ€™s heading may contain sensitive information, use this prop to override what is sent to analytics.\n\nstring",
    "-"
  ],
  [
    "analyticsEventTypeOverride",
    "If you need the event_type to be overridden for your use case, you can provide an alternate string here. Suggested values can be found in the EventType enum.\n\nstring",
    "-"
  ],
  [
    "onAnalyticsEvent",
    "Optional callback that will intercept analytics events for this component. If none is specified, the design system will use the default analytics function, which can be overwritten globally with setDefaultAnalyticsFunction.\n\n(event: AnalyticsEvent) => void",
    "-"
  ]
]