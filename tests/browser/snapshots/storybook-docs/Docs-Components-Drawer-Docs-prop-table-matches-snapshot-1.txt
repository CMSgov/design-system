[
  [
    "ariaLabel",
    "Gives more context to screen readers on the Drawer close button.\nstring",
    "Close help drawer"
  ],
  [
    "backdropClickExits",
    "Pass true to have the dialog close when its backdrop pseudo-element is clicked.\n\nNote: This only works when hasFocusTrap is also set to true, since that causes the dialog to be opened with showModal() which enables the backdrop.\n\nboolean",
    "-"
  ],
  [
    "className",
    "string",
    "-"
  ],
  [
    "closeButtonAriaLabel",
    "Helpful description of the drawer for screenreaders. An alias for ariaLabel specifically added to improve accessibility for the web component version of this component.\nstring",
    "-"
  ],
  [
    "closeButtonText",
    "ReactNode",
    "Close"
  ],
  [
    "closeButtonVariation",
    "\"ghost\"\n\"solid\"",
    "-"
  ],
  [
    "footerBody",
    "ReactNode",
    "-"
  ],
  [
    "footerTitle",
    "ReactNode",
    "-"
  ],
  [
    "hasFocusTrap",
    "Enables focus trap functionality within Drawer. Default is false.\nboolean",
    "-"
  ],
  [
    "heading*",
    "Text for the Drawer heading. Required because the heading will be focused on mount.\nReactNode",
    "-"
  ],
  [
    "headingId",
    "A unique id to be used on heading element to label multiple instances of Drawer.\nstring",
    "-"
  ],
  [
    "headingLevel",
    "Heading type to override default <h3>\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"",
    "3"
  ],
  [
    "headingRef",
    "Ref to heading element\nMutableRefObject<any>",
    "-"
  ],
  [
    "isFooterSticky",
    "Enables \"sticky\" position of Drawer footer element.\nboolean",
    "-"
  ],
  [
    "isHeaderSticky",
    "Enables \"sticky\" position of Drawer header element.\nboolean",
    "-"
  ],
  [
    "isOpen*",
    "Controls whether the dialog is in an open state\nboolean",
    "-"
  ],
  [
    "onCloseClick*",
    "Called when the user activates the close button or presses the ESC key if focus trapping is enabled. The parent of this component is responsible for showing or not showing the drawer, so you need to use this callback to make that happen. The dialog does not hide itself.\n\n(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void",
    "-"
  ]
]