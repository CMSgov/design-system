@import '../settings/index.scss';

$tooltip-icon-size: 16px;
$tooltip-arrow-size: 8px;
$tooltip-plus-border-size: 24px;

$tooltip-color: $color-base-inverse;
$tooltip-background-color: $color-background-inverse;
$tooltip-border: none;
$tooltip-border-radius: 4px;

$tooltip-color-inverse: $color-base;
$tooltip-background-color-inverse: $color-background;
$tooltip-border-inverse: 1px solid $color-gray-dark;

// stylelint-disable selector-no-qualifying-type
.ds-c-tooltip__trigger,
button.ds-c-tooltip__trigger {
  // override user agent button styles
  background: none;
  border: 0;
  display: inline-block;
  margin: 0;
  padding: 4px;
  text-decoration: none;
  &:hover {
    // Turn off cursor style as most of it is covered by the pseudo-after element
    // that makes it so that hovering in area including tooltip trigger means that
    // tooltip is still visible
    cursor: default;
    text-decoration: none;
  }
}
// stylelint-enable selector-no-qualifying-type

// Tooltip arrow
.ds-c-tooltip__arrow {
  height: $tooltip-icon-size;
  overflow: hidden;
  position: absolute;
  width: $tooltip-icon-size;

  &::after {
    background: $tooltip-background-color;
    content: '';
    left: 50%;
    position: absolute;
    width: $tooltip-arrow-size;
    height: $tooltip-arrow-size;
  }
}

// Interior content of tooltip
.ds-c-tooltip__content {
  color: $tooltip-color;
  font-size: $small-font-size;
  font-weight: 400;
  padding: $spacer-1;
}

// The invisible area around the tooltip container that keeps the tooltip visible on hover
.ds-c-tooltip__interactive-border {
  content: '';
  opacity: 0;
  position: absolute;
  width: 100%;
  height: 100%;
}

// The greater tooltip container which gets added in via state
// max-width and z-index are set via props to account for different uses
.ds-c-tooltip {
  background: $tooltip-background-color;
  border: $tooltip-border;
  border-radius: $tooltip-border-radius;
  box-sizing: border-box;
  
  // stylelint-disable max-nesting-depth
  // Tooltip positioning based on placement of trigger
  &[data-placement*='top'] {
    .ds-c-tooltip__arrow {
      top: 100%;
      &::after {
        top: 0;
        transform: translateX(-50%) translateY(-50%) rotate(45deg);
      }
    }
  }
  &[data-placement*='bottom'] {
    .ds-c-tooltip__arrow {
      top: -$tooltip-arrow-size;
      &::after {
        bottom: 0;
        transform: translateX(-50%) translateY(-50%) rotate(45deg);
      }
    }
  }
  &[data-placement*='left'] {
    .ds-c-tooltip__arrow {
      right: -$tooltip-arrow-size;
      &::after {
        left: 0;
        transform: translateX(50%) translateY(50%) rotate(45deg);
      }
    }
  }
  &[data-placement*='right'] {
    .ds-c-tooltip__arrow {
      left: -$tooltip-arrow-size;
      &::after {
        left: 0;
        transform: translateX(50%) translateY(50%) rotate(45deg);
      }
    }
  }
  // stylelint-enable max-nesting-depth
}

// Tooltip transition styles
// http://reactcommunity.org/react-transition-group/css-transition
.ds-c-tooltip-enter {
  opacity: 0;
}

.ds-c-tooltip-enter-active {
  opacity: 1;
  transition: opacity $animation-speed-1;
}

.ds-c-tooltip-exit {
  opacity: 1;
}

.ds-c-tooltip-exit-active {
  opacity: 0;
  transition: opacity $animation-speed-1;
}

// Inverse version of the tooltip body/content
.ds-c-tooltip--inverse {
  background: $tooltip-background-color-inverse;
  border: $tooltip-border-inverse;

  .ds-c-tooltip__arrow::after {
    background: $tooltip-background-color-inverse;
  }

  .ds-c-tooltip__content {
    color: $tooltip-color-inverse;
  }
}