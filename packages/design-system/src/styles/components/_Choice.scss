@import '../settings/index.scss';

$ds-c-inset-border-width: $spacer-half;

// Hide the default browser checkbox/radio button since we'll
// create our own custom version
/* stylelint-disable max-nesting-depth */
.ds-c-choice {
  left: -999em;
  opacity: 0;
  position: absolute;

  // Checked children container
  &__checkedChild {
    border-left: $ds-c-inset-border-width solid $color-primary;
    margin-bottom: $spacer-2;
    margin-left: ($choice-size / 2) - ($ds-c-inset-border-width / 2);
    padding: $spacer-2;

    // Checked children container on dark background
    &--inverse {
      border-left-color: $color-white;
    }

    // Small input variant
    &--small {
      margin-left: $spacer-1;
    }
  }
  + label {
    align-items: center;
    cursor: pointer;
    display: flex;
    flex-wrap: wrap;
    font-weight: $font-normal;
    margin: $spacer-1 0;
    max-width: $measure-base;
    min-height: $choice-size;
    padding-left: $choice-size + $spacer-1;
    position: relative;
    &::before {
      background-color: $color-background;
      border: $choice-border-width solid $choice-border-color;
      box-sizing: border-box;
      content: '\a0';
      height: $choice-size;
      left: 0;
      line-height: $choice-size;
      position: absolute;
      text-indent: 0.15em;
      top: 0;
      width: $choice-size;
    }
  }
  &:disabled {
    + label {
      color: $color-muted;

      &::before {
        background-color: $color-gray-lighter;
        border: 1px solid $color-gray-light;
        cursor: not-allowed;
      }
    }
  }
}
/* stylelint-enable max-nesting-depth */

.ds-c-choice--inverse {
  + label {
    &::before {
      background-color: $color-background-inverse;
      border-color: $choice-border-color-inverse;
    }
  }
  &:focus + label::before {
    @if $ds-include-focus-styles {
      border-color: $choice-border-color-inverse;
      box-shadow: 0 0 0 3px $focus-color-inverse;
    } @else {
      box-shadow: 0 0 0 2px $color-background-inverse, 0 0 2px 4px $color-focus-inverse;
    }
  }
  &:disabled + label {
    color: $color-muted-inverse;
    &::before {
      background-color: rgba($color-muted-inverse, 0.15);
      box-shadow: 0 0 0 1px $color-muted-inverse;
    }
  }
}

// Display an outline
.ds-c-choice:focus + label::before {
  @if $ds-include-focus-styles {
    border-color: $color-base;
    border-width: 3px;
    box-shadow: 0 0 0 3px $focus-color;
    // Transparent outline for Windows High Contrast Mode
    outline: 3px solid transparent;
    outline-offset: 3px;
  } @else {
    box-shadow: 0 0 0 2px $color-background, 0 0 2px 4px $color-focus;
  }
}

@if $ds-include-focus-styles {
  .ds-c-choice--small:focus + label::before {
    border-width: 2px;
  }
  .ds-c-choice:checked:focus + label::before {
    border-color: $color-primary-darker;
  }
}

// Display a checkmark
// Using CSS to display the checkmark because background images don't how in high contrast mode on windows.
.ds-c-choice:checked + label {
  &::before {
    background-color: $color-primary;
    background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 216 146'%3E%3Cpath fill='%23fff' d='M168.86 37.966l-11.08-11.08c-1.52-1.52-3.367-2.28-5.54-2.28-2.172 0-4.02.76-5.54 2.28L93.254 80.414 69.3 56.38c-1.52-1.522-3.367-2.282-5.54-2.282-2.172 0-4.02.76-5.54 2.28L47.14 67.46c-1.52 1.522-2.28 3.37-2.28 5.542 0 2.172.76 4.02 2.28 5.54l29.493 29.493 11.08 11.08c1.52 1.52 3.368 2.28 5.54 2.28 2.173 0 4.02-.76 5.54-2.28l11.082-11.08L168.86 49.05c1.52-1.52 2.283-3.37 2.283-5.54 0-2.174-.76-4.02-2.28-5.54z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-size: contain;
    border-color: $color-primary-darker;
  }
}

// Display a circular radio button
.ds-c-choice[type='radio'] + label::before {
  border-radius: 100%;
}

/*
Right-to-Left
*/

.ds-c-choice--right + label {
  padding-left: 0;
  padding-right: $choice-size + $spacer-1;

  &::before {
    left: auto;
    right: 0;
  }
}

/*
Size variants
*/

.ds-c-choice--small {
  + label {
    min-height: $choice-size-small;
    padding-left: $choice-size-small + $spacer-1;
    padding-top: 0;

    &::before {
      height: $choice-size-small;
      top: 2px;
      width: $choice-size-small;
    }

    &::after {
      border-width: 0 0 3px 3px;
      height: 3px;
      left: 5px;
      top: 8px;
      width: 7px;
    }
  }

  &.ds-c-choice--right + label {
    padding-left: 0;
    padding-right: $choice-size-small + $spacer-1;
  }
}
