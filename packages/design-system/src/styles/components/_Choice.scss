@import '../settings/index.scss';

/**
** Order of choice styles is important to ensure styles follow correct precedent.
** Checkboxes and radios follow the following cascade:
** Normal > Error > Checked > Disabled > Focused
**/

$ds-c-inset-border-width: $spacer-half;

// Layout styles for wrapping choice container
.ds-c-choice-wrapper {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin: 0.5rem 0;
  max-width: $input-max-width;
}

// Styles for label
.ds-c-choice + label,
.ds-c-choice + .ds-c-label {
  cursor: pointer;
  flex: 1 1 min-content;
  font-weight: $font-normal;
  margin-top: 0;
  max-width: max-content;
  transform: translateY(0.25em);
}

.ds-c-choice--small + label,
.ds-c-choice--small + .ds-c-label {
  transform: translateY(-0.125em);
}

// Disabled label styles
label,
.ds-c-label {
  .ds-c-choice:disabled + & {
    color: $color-muted;
  }

  .ds-c-choice.ds-c-choice--inverse:disabled + & {
    color: $color-muted-inverse;
  }

  .ds-c-choice:disabled + &,
  .ds-c-choice.ds-c-choice--inverse:disabled + & {
    cursor: not-allowed;

    @media (-ms-high-contrast: active), (forced-colors: active) {
      color: GrayText;
    }
  }
}

// Styles inherited by both checkbox and radio
.ds-c-choice {
  align-items: center;
  appearance: none;
  background-color: $choice-background-color;
  border: $choice-border-width solid $choice-border-color;
  border-radius: $choice-border-radius;
  cursor: pointer;
  display: grid;
  height: $choice-size;
  justify-items: center;
  margin: 0;
  place-content: center;
  position: relative;
  width: $choice-size;

  &::before {
    box-shadow: inset 0 0 4em 1em $choice-checked-background-color;
    content: '';
    grid-area: 1/-1;
    height: $choice-size;
    opacity: 0;
    // transition: 120ms opacity ease-in-out;
    width: $choice-size;
  }

  // Error
  @if $ds-include-choice-error-highlight {
    &.ds-c-choice--error {
      border-color: $color-error;
    }
  }

  // Checked
  &:checked {
    &::before {
      opacity: 1;
    }

    &:focus {
      border-color: $color-primary-darker;
    }
  }

  // Disabled
  &:disabled {
    background-color: $choice-disabled-background-color;
    border-color: $choice-disabled-border-color;
    color: $color-muted;
    cursor: not-allowed;

    &::before {
      background-color: $choice-disabled-background-color;
      border-color: $choice-disabled-border-color;
    }

    @media (-ms-high-contrast: active), (forced-colors: active) {
      border-color: GrayText;
    }
  }

  // Focus
  &:focus {
    @include focus-styles;
  }
}

// Checkbox styles
.ds-c-choice[type='checkbox'] {
  &::after {
    background-color: transparent;
    border: solid;
    border-color: $color-white;
    border-top-color: transparent;
    border-width: 0 0 4px 4px;
    content: '';
    grid-area: 1/-1;
    height: 4px;
    opacity: 0;
    transform: rotate(-45deg) translateX(0.075em);
    width: 10px;
  }

  &:checked {
    &::after {
      opacity: 1;
    }

    &:focus::before {
      height: $choice-size - ($choice-border-width * 2);
      width: $choice-size - ($choice-border-width * 2);
    }
  }
}

// Radio styles
.ds-c-choice[type='radio'] {
  border-radius: 100%;

  &::before {
    border-radius: 100%;
    height: $choice-radio-button-size;
    width: $choice-radio-button-size;

    @media (-ms-high-contrast: active), (forced-colors: active) {
      background-color: WindowText;
      box-shadow: none;
    }
  }

  &:checked {
    border-color: $choice-checked-background-color;
  }
}

.ds-c-choice--inverse {
  background-color: $choice-background-color-inverse;
  border-color: $choice-border-color-inverse;

  // Error
  @if $ds-include-choice-error-highlight {
    &.ds-c-choice--error {
      border-color: $color-error-light;
    }
  }

  // Disabled
  &:disabled {
    background-color: $choice-disabled-background-color-inverse;
    border-color: $choice-disabled-border-color-inverse;

    @media (-ms-high-contrast: active), (forced-colors: active) {
      border-color: GrayText;
    }
  }
}

// Size variants
.ds-c-choice--small {
  height: $choice-size-small;
  width: $choice-size-small;

  &::before {
    height: $choice-size-small;
    width: $choice-size-small;
  }

  &[type='checkbox']::after {
    border-width: 0 0 3px 3px;
    height: 3px;
    width: 7px;
  }

  &[type='radio']::before {
    height: $choice-radio-button-size-small;
    width: $choice-radio-button-size-small;
  }
}

// TODO: rename to .ds-c-choice__checked-child

// Checked children container
.ds-c-choice__checkedChild {
  border-left: $ds-c-inset-border-width solid $color-primary;
  flex: 1 1 100%;
  margin-bottom: $spacer-2;
  margin-left: ($choice-size / 2) - ($ds-c-inset-border-width / 2);
  padding: $spacer-2;
  padding-right: 0;

  &--inverse {
    border-left-color: $color-white;
  }

  &--small {
    margin-left: $spacer-1;
  }
}
