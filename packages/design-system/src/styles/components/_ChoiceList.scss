@use '../layout' as *;
@use '../mixins';

/**
** Order of choice styles is important to ensure styles follow correct precedent.
** Checkboxes and radios follow the following cascade:
** Normal > Error > Checked > Disabled > Focused
**/

// Layout styles for wrapping choice container
.ds-c-choice-wrapper {
  column-gap: var(--choice-wrapper__gap, 0.5rem);
  display: grid;
  grid-template-areas:
    'check label'
    'check hint'
    'check error-message';
  grid-template-columns: min-content 1fr;
  margin-block-start: $spacer-1;
  max-width: var(--measure-wide);

  &:has(.ds-c-choice--small) {
    column-gap: var(--choice-wrapper__gap--small, 0.5rem);
  }

  .ds-c-label,
  .ds-c-hint--inverse,
  .ds-c-inline-error {
    max-width: max-content;
  }
}

label,
.ds-c-label {
  // Styles for label
  .ds-c-choice + & {
    cursor: pointer;
    font-weight: var(--font-weight-normal);
    grid-area: label;

    // Medicare has a different `translateY` for choice labels
    // If a theme doesn't have a `translateY` for choice labels defined, it will fall back to the normal `translateY`
    margin-block-start: var(--choice__translateY, 0.25em);
  }

  // Medicare has a different `translateY` for small choice labels
  // If a theme doesn't have a `translateY` for small choice labels defined, it will fall back to the normal `translateY`
  .ds-c-choice--small + & {
    margin-block-start: -0.125em;
  }

  // Disabled label styles
  .ds-c-choice:disabled + & {
    color: var(--choice-label__color--disabled);
  }

  .ds-c-choice.ds-c-choice--inverse:disabled + & {
    color: var(--choice-label__color--disabled--inverse);
  }

  .ds-c-choice:disabled + &,
  .ds-c-choice.ds-c-choice--inverse:disabled + & {
    cursor: not-allowed;

    @media (forced-colors: active) {
      color: GrayText;
    }
  }
}

.ds-c-choice-wrapper > .ds-c-hint {
  grid-area: hint;
}

.ds-c-choice-wrapper > .ds-c-inline-error {
  grid-area: error-message;
}

// Styles inherited by both checkbox and radio
.ds-c-choice {
  align-items: center;
  appearance: none;
  background-color: var(--choice__background-color);
  border: var(--choice__border-width) solid var(--choice__border-color);
  border-radius: var(--choice__border-radius);
  cursor: pointer;
  display: grid;
  grid-area: check;
  height: var(--choice__size);
  justify-items: center;
  margin: 0;
  place-content: center;
  position: relative;
  width: var(--choice__size);

  &::before {
    border-radius: inherit;
    box-shadow: inset 0 0 4em 1em var(--choice__background-color--checked);
    content: '';
    grid-area: 1/-1;
    height: var(--choice__size);
    opacity: 0;
    width: var(--choice__size);
  }

  &::before,
  &::after {
    box-sizing: content-box;
  }

  // Checked
  &:checked {
    &::before {
      opacity: 1;
    }

    &:focus {
      border-color: var(--choice__border-color--focus);
    }
  }

  &.ds-c-choice--error {
    border-color: var(--choice__border-color--error);
  }

  // Medicare.gov has a different hover state for checked choices
  // If a theme doesn't have a hover state for checked choices, it will fall back to the normal hover state
  &:not(:disabled):hover {
    border-color: var(--choice__border-color--hover, var(--choice__border-color));
  }

  // Disabled
  &:disabled {
    background-color: var(--choice__background-color--disabled);
    border-color: var(--choice__border-color--disabled);
    color: var(--choice__color--disabled);

    &::before {
      border-color: var(--choice__border-color--disabled);
      box-shadow: inset 0 0 4em 1em var(--choice__border-color--disabled);
    }

    @media (forced-colors: active) {
      border-color: GrayText;
    }
  }

  // Focus
  &:focus {
    @include mixins.focus-styles;
  }
}

// Checkbox styles
.ds-c-choice[type='checkbox'] {
  &::after {
    background-color: transparent;
    border: solid;
    border-block-start-color: transparent;
    border-color: var(--color-white);
    border-width: 0 0 4px 4px;
    content: '';
    grid-area: 1/-1;
    height: 4px;
    opacity: 0;
    transform: rotate(-45deg) translateX(0.075em);
    width: 10px;
  }

  &:checked {
    &::after {
      opacity: 1;
    }
  }

  &:disabled {
    @media (forced-colors: active) {
      &::after {
        border-color: GrayText;
      }
    }
  }
}

// Radio styles
.ds-c-choice[type='radio'] {
  border-radius: 100%;

  &::before {
    border-radius: 100%;
    height: var(--choice__size-radio);
    width: var(--choice__size-radio);

    @media (forced-colors: active) {
      background-color: WindowText;
      box-shadow: none;
    }
  }

  &:checked {
    border-color: var(--choice__background-color--checked);

    &:disabled {
      border-color: var(--choice__border-color--disabled);

      &::before {
        box-shadow: inset 0 0 4em 1em var(--choice__border-color--disabled);
      }

      @media (forced-colors: active) {
        border-color: GrayText;

        &::before {
          background-color: GrayText;
        }
      }
    }
  }
}

.ds-c-choice--inverse {
  background-color: var(--choice__background-color--inverse);
  border-color: var(--choice__border-color--inverse);

  &.ds-c-choice--error {
    border-color: var(--choice__border-color--error--inverse);
  }

  // Medicare.gov has a different hover state for checked choices
  // If a theme doesn't have a hover state for checked choices, it will fall back to the normal hover state
  &:not(:disabled):hover {
    border-color: var(--choice__border-color--hover, var(--choice__border-color--inverse));
  }

  // Disabled
  &:disabled {
    background-color: var(--choice__background-color--disabled--inverse);
    border-color: var(--choice__border-color--disabled--inverse);

    @media (forced-colors: active) {
      border-color: GrayText;
    }
  }
}

// Size variants
.ds-c-choice--small {
  height: var(--choice__size--small);
  width: var(--choice__size--small);

  &::before {
    height: var(--choice__size--small);
    width: var(--choice__size--small);
  }

  &[type='checkbox']::after {
    border-width: 0 0 3px 3px;
    height: 3px;
    width: 7px;
  }

  &[type='radio']::before {
    height: var(--choice__size-radio--small);
    width: var(--choice__size-radio--small);
  }
}

// TODO: rename to .ds-c-choice__checked-child

// Checked children container
.ds-c-choice__checkedChild {
  border-inline-start: $spacer-half solid var(--choice__border-color--left);
  margin-block: $spacer-1 $spacer-2;
  // @TODO: get rid of this calc
  // The origin of this 2px shift is fuzzy, it seems like it's based on
  // the border on alerts and healthcare.gov insets.
  margin-inline-start: calc((var(--choice__size) * 0.5) - 2px);
  padding: $spacer-2;
  padding-inline-end: 0;

  &--inverse {
    border-inline-start-color: var(--color-white);
  }

  &--small {
    margin-inline-start: $spacer-1;
  }

  .ds-c-fieldset > div:last-child & {
    margin-block-end: 0;
  }
}
