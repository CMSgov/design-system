@use '../layout' as *;
@use '../mixins';

/**
** Order of choice styles is important to ensure styles follow correct precedent.
** Checkboxes and radios follow the following cascade:
** Normal > Error > Checked > Disabled > Focused
**/

// Layout styles for wrapping choice container
.ds-c-choice-wrapper {
  display: flex;
  gap: 0.5rem;
  margin: 0.5rem 0;
  max-width: var(--measure-wide);
}

// Styles for label
.ds-c-choice + label,
.ds-c-choice + .ds-c-label {
  cursor: pointer;
  flex-basis: min-content;
  flex-grow: 1;
  font-weight: var(--font-weight-normal);
  margin-top: 0;
  max-width: max-content;
  transform: translateY(0.25em);
}

.ds-c-choice--small + label,
.ds-c-choice--small + .ds-c-label {
  transform: translateY(-0.125em);
}

// Disabled label styles
label,
.ds-c-label {
  .ds-c-choice:disabled + & {
    color: var(--choice-label__color--disabled);
  }

  .ds-c-choice.ds-c-choice--inverse:disabled + & {
    color: var(--choice-label__color--disabled--inverse);
  }

  .ds-c-choice:disabled + &,
  .ds-c-choice.ds-c-choice--inverse:disabled + & {
    cursor: not-allowed;

    @media (-ms-high-contrast: active), (forced-colors: active) {
      color: GrayText;
    }
  }
}

// Styles inherited by both checkbox and radio
.ds-c-choice {
  align-items: center;
  appearance: none;
  background-color: var(--choice__background-color);
  border: var(--choice__border-width) solid var(--choice__border-color);
  border-radius: var(--choice__border-radius);
  cursor: pointer;
  display: grid;
  flex-shrink: 0;
  height: var(--choice__size);
  justify-items: center;
  margin: 0;
  place-content: center;
  position: relative;
  width: var(--choice__size);

  &::before {
    box-shadow: inset 0 0 4em 1em var(--choice__background-color--checked);
    content: '';
    grid-area: 1/-1;
    height: var(--choice__size);
    opacity: 0;
    // transition: 120ms opacity ease-in-out;
    width: var(--choice__size);
  }

  &::before,
  &::after {
    box-sizing: content-box;
  }

  // Checked
  &:checked {
    &::before {
      opacity: 1;
    }

    &:focus {
      border-color: var(--choice__border-color--focus);
    }
  }

  &.ds-c-choice--error {
    border-color: var(--choice__border-color--error);
  }

  // Disabled
  &:disabled {
    background-color: var(--choice__background-color--disabled);
    border-color: var(--choice__border-color--disabled);
    color: var(--choice__color--disabled);
    cursor: not-allowed;

    &::before {
      border-color: var(--choice__border-color--disabled);
      box-shadow: inset 0 0 4em 1em var(--choice__border-color--disabled);
    }

    @media (-ms-high-contrast: active), (forced-colors: active) {
      border-color: GrayText;
    }
  }

  // Focus
  &:focus {
    @include mixins.focus-styles;
  }
}

// Checkbox styles
.ds-c-choice[type='checkbox'] {
  &::after {
    background-color: transparent;
    border: solid;
    border-color: var(--color-white);
    border-top-color: transparent;
    border-width: 0 0 4px 4px;
    content: '';
    grid-area: 1/-1;
    height: 4px;
    opacity: 0;
    transform: rotate(-45deg) translateX(0.075em);
    width: 10px;
  }

  &:checked {
    &::after {
      opacity: 1;
    }
  }

  &:disabled {
    @media (-ms-high-contrast: active), (forced-colors: active) {
      &::after {
        border-color: GrayText;
      }
    }
  }
}

// Radio styles
.ds-c-choice[type='radio'] {
  border-radius: 100%;

  &::before {
    border-radius: 100%;
    height: var(--choice__size-radio);
    width: var(--choice__size-radio);

    @media (-ms-high-contrast: active), (forced-colors: active) {
      background-color: WindowText;
      box-shadow: none;
    }
  }

  &:checked {
    border-color: var(--choice__background-color--checked);

    &:disabled {
      border-color: var(--choice__border-color--disabled);

      &::before {
        box-shadow: inset 0 0 4em 1em var(--choice__border-color--disabled);
      }

      @media (-ms-high-contrast: active), (forced-colors: active) {
        border-color: GrayText;

        &::before {
          background-color: GrayText;
        }
      }
    }
  }
}

.ds-c-choice--inverse {
  background-color: var(--choice__background-color--inverse);
  border-color: var(--choice__border-color--inverse);

  &.ds-c-choice--error {
    border-color: var(--choice__border-color--error);
  }

  // Disabled
  &:disabled {
    background-color: var(--choice__background-color--disabled--inverse);
    border-color: var(--choice__border-color--disabled--inverse);

    @media (-ms-high-contrast: active), (forced-colors: active) {
      border-color: GrayText;
    }
  }
}

// Size variants
.ds-c-choice--small {
  height: var(--choice__size--small);
  width: var(--choice__size--small);

  &::before {
    height: var(--choice__size--small);
    width: var(--choice__size--small);
  }

  &[type='checkbox']::after {
    border-width: 0 0 3px 3px;
    height: 3px;
    width: 7px;
  }

  &[type='radio']::before {
    height: var(--choice__size-radio--small);
    width: var(--choice__size-radio--small);
  }
}

// TODO: rename to .ds-c-choice__checked-child

// Checked children container
.ds-c-choice__checkedChild {
  border-left: $spacer-half solid var(--choice__border-color--left);
  flex: 1 1 100%;
  margin-bottom: $spacer-2;
  // @TODO: get rid of this calc
  // The origin of this 2px shift is fuzzy, it seems like it's based on
  // the border on alerts and healthcare.gov insets.
  margin-left: calc(calc(var(--choice__size) * 0.5) - 2px);
  padding: $spacer-2;
  padding-right: 0;

  &--inverse {
    border-left-color: var(--color-white);
  }

  &--small {
    margin-left: $spacer-1;
  }
}
