@use '../core' as *;
@use '../mixins';

@keyframes slideInDrawer {
  from {
    opacity: 0;
    transform: translate3d(200px, 0, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

/* Help drawer toggle */
.ds-c-drawer__toggle {
  display: block;
  font-weight: $font-weight-normal;
  padding: 0;

  @media (-ms-high-contrast: active), (forced-colors: active) {
    padding: $spacer-half $spacer-2;
  }
}

.ds-c-drawer__toggle--inline {
  display: inline;
}

/* Help drawer wrapper */
.ds-c-drawer {
  background: $drawer__background-color;
  border: 0;
  bottom: 0;
  box-shadow: -2px 0 0 $drawer__border-color;
  height: 100%;
  left: auto;
  margin: 0;
  max-height: 100%;
  max-width: 100%;
  padding: 0;
  position: fixed;
  right: 0;
  top: 0;
  width: 100%;
  z-index: $z-drawer;

  // If `hasFocusTrap` enabled, `background` should
  // not be visible.
  &::backdrop {
    background: transparent;
  }

  @media (min-width: $media-width-md) {
    animation: slideInDrawer $animation-speed-2 ease-in-out both; // slide in from the right
    max-width: 33%; // this equates to 4 grid columns
  }

  @media (min-width: $media-width-xl) {
    max-width: $measure-base;
  }

  @media (-ms-high-contrast: active), (forced-colors: active) {
    border: 1px solid WindowText;
    border-left: $spacer-3 solid WindowText;
  }
}

.ds-c-drawer__window {
  height: 100%;
  overflow: auto;
  overscroll-behavior: contain;

  @supports (display: flex) {
    display: flex;
    flex-direction: column;
  }
}

/* Help drawer header */
.ds-c-drawer__header {
  align-items: center;
  background-color: $drawer-header__background-color;
  display: flex;
  gap: $spacer-2;
  justify-content: space-between;
  padding: $spacer-2;

  @supports (display: flex) {
    flex: 0 0 auto;
  }

  @media (-ms-high-contrast: active), (forced-colors: active) {
    border-bottom: 1px solid ButtonText;
  }
}

.ds-c-drawer__header-heading {
  margin: 0;
}

.ds-c-drawer__close-button {
  align-self: flex-start;
}

// This element is focusable via a tabindex attribute.
.ds-c-drawer__header-heading:focus {
  @include mixins.focus-styles;
}

// Using `overflow: auto` instead of `position: sticky` on sticky els
// due to a Mozilla bug where sticky els don't calc reflow when inside
// a flex container: https://bugzilla.mozilla.org/show_bug.cgi?id=1585254
.ds-c-drawer--is-sticky {
  overflow: auto;
}

/* Help drawer body content */
.ds-c-drawer__body {
  font-size: $font-size-base;
  padding: $spacer-2;

  @media (min-width: $media-width-md) {
    font-size: $font-size-sm;
  }

  @media (min-width: $media-width-lg) {
    font-size: $font-size-base;
  }

  @supports (display: flex) {
    flex: 1 1 auto;
  }

  @media (-ms-high-contrast: active), (forced-colors: active) {
    border-top: 1px solid ButtonText;
  }
}

/* Help drawer footer */
.ds-c-drawer__footer {
  background-color: $drawer-footer__background-color;
  line-height: $font-line-height-base;
  padding: $spacer-2;

  @supports (display: flex) {
    flex: 0 0 auto;
  }
}

.ds-c-drawer__footer-title {
  margin: 0;
}
