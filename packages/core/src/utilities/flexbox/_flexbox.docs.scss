/*
Flexbox

Use the [flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) utility classes to control various flexbox properties. These are especially useful when combined with [flexbox grid](/layout/grid#layout.grid.alignment) classes.

For these utility classes to work, first create a flex container &mdash; you can use the [`.ds-u-display--flex`](/utilities/display-visibility) utility class &mdash; then apply these  utility classes to the container's direct children elements.

Style guide: utilities.flexbox
*/

/*
Flex direction

Use the `flex-direction` utility class on a flexbox container to change the alignment of its child elements on the main axis (x-axis by default).

> The CSS `flex-direction` property defines how the browser distributes space between and around content items along the main axis of their container. &mdash; [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction)

**Format**: `.ds-u-flex-direction--[row|column|row-reverse|column-reverse]`

**Responsive format**: `.ds-u-[breakpoint]-flex-direction--[row|column|row-reverse|column-reverse]`

Markup: flex-direction.example.html

Style guide: utilities.flexbox.flex-direction
*/

/*
Justify content

Use the `justify-content` utility class on a flexbox container to change the alignment of its child elements on the main axis (x-axis by default).

> The CSS `justify-content` property defines how the browser distributes space between and around content items along the main axis of their container. &mdash; [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content)

**Format**: `.ds-u-justify-content--[start|end|center|between|around]`

**Responsive format**: `.ds-u-[breakpoint]-justify-content--[start|end|center|between|around]`

Markup: justify-content.example.html

Style guide: utilities.flexbox.justify-content
*/

/*
Align items

Use the `align-items` utility class on a flexbox container to change the alignment of its child elements on the cross axis (y-axis by default).

> The CSS `align-items` property defines how the browser distributes space between and around flex items along the cross-axis of their container. This means it works like `justify-content` but in the perpendicular direction. &mdash; [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items)

**Format**: `.ds-u-align-items--[start|end|center|baseline|stretch]`

**Responsive format**: `.ds-u-[breakpoint]-align-items--[start|end|center|baseline|stretch]`

Markup: align-items.example.html

Style guide: utilities.flexbox.align-items
*/

/*
Flex-wrap

Use the `flex-wrap` utility class on a flexbox container to change how its child elements wrap.

> The CSS `flex-wrap` property specifies whether flex items are forced into a single line or can be wrapped onto multiple lines. If wrapping is allowed, this property also enables you to control the direction in which lines are stacked. &mdash; [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap)

**Format**: `.ds-u-flex-wrap--[nowrap|wrap|reverse]`

**Responsive format**: `.ds-u-[breakpoint]-flex-wrap--[nowrap|wrap|reverse]`

Markup: flex-wrap.example.html

Style guide: utilities.flexbox.flex-wrap
*/

/*
Responsive flexbox

@responsive

Use a [breakpoint prefix](/guidelines/responsive) to change the flexbox at specific breakpoints.

Markup: flexbox-responsive.example.html

Style guide: utilities.flexbox.responsive
*/
