
/*
Flexbox

Use the [flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) utility classes to control various flexbox properties. These are especially useful when combined with [flexbox grid](/layout/grid#layout.grid.alignment) classes.

#### Usage

For these utility classes to work, first create a flex container &mdash; you can use the [`ds-u-display--flex`](/utilities/display-visibility) utility class &mdash; then apply these  utility classes to the container's direct children elements.

Style guide: utilities.flexbox
*/

/*
Justify content

Use the `justify-content` utility class on a flexbox container to change the alignment of its child elements on the main axis (x-axis by default).

> The CSS `justify-content` property defines how the browser distributes space between and around content items along the main axis of their container. &mdash; [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content)

The classes follow the format: `ds-u-justify-content--{value}` and `ds-u-{breakpoint}-justify-content--{value}` where `breakpoint` is one of the [breakpoint prefixes](/guidelines/responsive), and `value` is one of:

- `start` (browser default)
- `end`
- `center`
- `between`
- `around`

Markup:
<section>
<% ['start','end','center','between','around'].forEach(value => { %>
  <code class="preview__label">ds-u-justify-content--<%= value %></code>
  <article class="ds-u-justify-content--<%= value %> ds-u-display--flex ds-u-fill--primary-darkest">
    <div class="ds-u-fill--white ds-u-margin--1"><%= value %></div>
    <div class="ds-u-fill--white ds-u-margin--1"><%= value %></div>
    <div class="ds-u-fill--white ds-u-margin--1"><%= value %></div>
  </article>
<% }) %>
</section>

Style guide: utilities.flexbox.justify-content
*/

/*
Align items

Use the `align-items` utility class on a flexbox container to change the alignment of its child elements on the cross axis (y-axis by default).

> The CSS `align-items` property defines how the browser distributes space between and around flex items along the cross-axis of their container. This means it works like `justify-content` but in the perpendicular direction. &mdash; [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items)

The classes follow the format: `ds-u-align-items--{value}` and `ds-u-{breakpoint}-align-items--{value}` where `breakpoint` is one of the [breakpoint prefixes](/guidelines/responsive), and `value` is one of:

- `start`
- `end`
- `center`
- `baseline`
- `stretch` (browser default)

Markup:
<section>
<% ['start','end','center','baseline','stretch'].forEach(value => { %>
  <code class="preview__label">ds-u-align-items--<%= value %></code>
  <article class="ds-u-align-items--<%= value %> ds-u-display--flex ds-u-fill--primary-darkest" style="height: 75px">
    <div class="ds-u-fill--white ds-u-margin--1"><%= value %></div>
    <div class="ds-u-fill--white ds-u-margin--1"><%= value %></div>
    <div class="ds-u-fill--white ds-u-margin--1"><%= value %></div>
  </article>
<% }) %>
</section>

Style guide: utilities.flexbox.align-items
*/

/*
Flex-wrap

Use the `flex-wrap` utility class on a flexbox container to change how its child elements wrap.

> The CSS `flex-wrap` property specifies whether flex items are forced into a single line or can be wrapped onto multiple lines. If wrapping is allowed, this property also enables you to control the direction in which lines are stacked. &mdash; [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap)

The classes follow the format: `ds-u-flex-wrap--{value}` and `ds-u-{breakpoint}-flex-wrap--{value}` where `breakpoint` is one of the [breakpoint prefixes](/guidelines/responsive), and `value` is one of:

- `nowrap` (browser default)
- `wrap`
- `reverse`

Markup:
<section>
<% ['nowrap','wrap','reverse'].forEach(value => { %>
  <code class="preview__label">ds-u-flex-wrap--<%= value %></code>
  <article class="ds-u-flex-wrap--<%= value %> ds-u-display--flex ds-u-fill--primary-darkest">
    <div class="ds-u-fill--white ds-u-margin--1 ds-u-padding-y--2 ds-u-text-align--center" style="width: 50%"><%= value %> element #1</div>
    <div class="ds-u-fill--white ds-u-margin--1 ds-u-padding-y--2 ds-u-text-align--center" style="width: 50%"><%= value %> element #2</div>
    <div class="ds-u-fill--white ds-u-margin--1 ds-u-padding-y--2 ds-u-text-align--center" style="width: 50%"><%= value %> element #3</div>
  </article>
<% }) %>
</section>

Style guide: utilities.flexbox.flex-wrap
*/

/*
Responsive flexbox

@responsive

Use a [breakpoint prefix](/guidelines/responsive) to change the flexbox at specific breakpoints.

Markup:
<section>
  <article class="ds-u-sm-justify-content--center ds-u-md-justify-content--between ds-u-lg-justify-content--around ds-u-display--flex ds-u-fill--primary-darkest">
    <div class="ds-u-fill--white ds-u-margin--1">element #1</div>
    <div class="ds-u-fill--white ds-u-margin--1">element #2</div>
    <div class="ds-u-fill--white ds-u-margin--1">element #3</div>
  </article>
</section>

Style guide: utilities.flexbox.responsive
*/
