/*
Select

A select field allows users to select one option from a list.

@status Deprecated

@uswds https://standards.usa.gov/components/form-controls/#dropdown

Markup: select.example.html

Style guide: components.select
*/

/*
`<ChoiceList>`

@react-component ChoiceList

Style guide: components.select.choicelist
*/

/*
`<Select>`

A `Select` component can be used to render an HTML `select` menu. Any _undocumented_ props that you pass to this component will be passed to the `select` element, so you can use this to set additional attributes if necessary.

Class-based component gives flexibility for active focus management by allowing refs to be passed.

@react-component Select

Style guide: components.select.react
*/

/*
---

### When to use

- Use sparingly — only when a user needs to choose from about 7 to 15 possible options and you have limited space to display the options.

### When to consider alternatives

- If the list of options is short. Use [radio buttons or checkboxes](/components/choice) instead.
- If the list of options is very long. Let users type the same information into a [text input](/components/text-field) that suggests possible options instead. Long lists can sometimes be broken into multiple shorter lists by asking a few questions up-front to filter out options.
- If you need to allow users to select more than one option at once. Users often don’t understand how to select multiple items from dropdowns. Use checkboxes instead.
- If the data is highly familiar to users, such as the day, month, or year of their birth.

### Usage

- Choose a sensible order for the options to enable visual scanning of the lists.
- Test dropdowns thoroughly with members of your target audience. Several usability experts suggest they should be the “UI of last resort.” Many users find them confusing and difficult to use.
- Avoid making options in one dropdown menu change based on the input to another. Users often don’t understand how selecting an item in one impacts another.
- When most users will (or should) pick a particular option, make it the default: `<option selected="selected">Default</option>`
- Don’t use JavaScript to automatically submit the form (or do anything else) when an option is selected. Offer a “submit” button at the end of the form instead. Users often change their choices multiple times. Auto-submission is also less accessible.

**[View the "Forms" guidelines for additional guidance and best practices.](/guidelines/forms/)**

### Accessibility

- Make sure your dropdown has a label. Don’t replace it with the default menu option (for example, removing the “State” label and just having the dropdown read “Select a state” by default).
- Don’t use JavaScript to automatically submit the form (or do anything else) when an option is selected. Auto-submission disrupts screen readers because they select each option as they read them.
- On some devices the list of options cannot be zoomed, which means that some people with visual impairments cannot use them.

### Related patterns

- [Checkbox and Radio](/components/choice)
- [Text field](/components/text-field)

### Learn more

- [Form Guidelines](/guidelines/forms/)
- [Asking for a date of birth](https://designnotes.blog.gov.uk/2013/12/05/asking-for-a-date-of-birth/)
- [Four steps for choosing form elements on the Web (PDF)](http://www.formsthatwork.com/files/Articles/dropdown.pdf)
- [Dropdowns: Design Guidelines](https://www.nngroup.com/articles/drop-down-menus/)

Style guide: components.select.guidance
*/
