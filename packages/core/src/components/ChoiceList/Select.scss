@import '../../settings/index';

/*
Select

A select field allows users to select one option from a list.

@status prototype

@uswds https://standards.usa.gov/components/form-controls/#dropdown

Markup:
<label class="ds-c-label ds-u-margin-top--0" for="options">Field label</label>
<select class="ds-c-field ds-c-field--select" name="options" id="options">
  <option value="value1">Option A</option>
  <option value="value2">Option B</option>
  <option value="value3">Option C</option>
</select>
<div class="ds-base ds-base--inverse ds-u-padding--2 ds-u-margin-top--2">
  <label class="ds-c-label ds-u-margin-top--0" for="options-inverse">Field label</label>
  <select class="ds-c-field ds-c-field--select ds-c-field--inverse" name="options-inverse" id="options-inverse">
    <option value="value1">Option A</option>
    <option value="value2">Option B</option>
    <option value="value3">Option C</option>
  </select>
</div>

Style guide: components.select
*/

.ds-c-field--select {
  appearance: none;
  background-color: $color-white;
  background-image: url('#{$image-path}/arrow-down.png');
  background-image: url('#{$image-path}/arrow-down.svg');
  background-position: right $small-font-size center;
  background-repeat: no-repeat;
  background-size: $small-font-size;

  &[multiple] {
    background-image: none;
  }
}

/*
React - `<Select>`

@react-component Select

Style guide: components.select.react
*/

/*
React - `<ChoiceList>`

@react-component ChoiceList

Style guide: components.select.choicelist-react
*/

/*
---

## Accessibility

- Make sure your dropdown has a label. Don’t replace it with the default menu option (for example, removing the “State” label and just having the dropdown read “Select a state” by default).
- Don’t use JavaScript to automatically submit the form (or do anything else) when an option is selected. Auto-submission disrupts screen readers because they select each option as they read them.

## Usability

### When to use

- Use sparingly — only when a user needs to choose from about seven to 15 possible options and you have limited space to display the options.

### When to consider something else

- If the list of options is very short. Use radio buttons instead.
- If the list of options is very long. Let users type the same information into a text input that suggests possible options instead.
- If you need to allow users to select more than one option at once. Users often don’t understand how to select multiple items from dropdowns. Use checkboxes instead.

### Guidance

- Test dropdowns thoroughly with members of your target audience. Several usability experts suggest they should be the “UI of last resort.” Many users find them confusing and difficult to use.
- Avoid making options in one dropdown menu change based on the input to another. Users often don’t understand how selecting an item in one impacts another.
- When most users will (or should) pick a particular option, make it the default: `<option selected="selected">Default</option>`
- Don’t use JavaScript to automatically submit the form (or do anything else) when an option is selected. Offer a “submit” button at the end of the form instead. Users often change their choices multiple times. Auto-submission is also less accessible.

Style guide: components.select.guidance
*/
