@import '@cmsgov/design-system-support/src/settings/index';

/*
Step List

@responsive

@status beta

A step list represents a user's progression through an application or multi-page
form. It serves as a table of contents and a way to quickly see where they are
and what they should be working on next.

Markup:
<div style="max-width: 628px">
  <ol class="ds-c-step-list ds-u-margin-top--4">
    <li class="ds-c-step ds-c-step--completed">
      <h2 class="ds-c-step__header">
        <div class="ds-c-step__title">Choose a tax year</div>
        <div class="ds-c-step__actions">
          <div class="ds-c-step__completed-text">Completed</div>
          <a href="#step-1">
            Edit<span class="ds-u-visibility--screen-reader">
              {" "}
              "Choose a tax year"
            </span>
          </a>
        </div>
      </h2>
    </li>
    <li class="ds-c-step ds-c-step--current">
      <h2 class="ds-c-step__header">
        <div class="ds-c-step__title">Enter household details</div>
        <div class="ds-c-step__actions">
          <a href="#step-2" class="ds-c-button ds-c-button--primary">
            Resume<span class="ds-u-visibility--screen-reader">
              {" "}
              "Enter household details"
            </span>
          </a>
        </div>
      </h2>
      <div class="ds-c-step__description">
        Answer questions about who in your household qualifies for a premium tax
        credit and information on each person, including date of birth,
        location(s) they lived in for the year, and months of marketplace
        coverage.
      </div>
      <ol class="ds-c-step__substeps">
        <li class="ds-c-substep">
          <div class="ds-c-substep__line">
            <div class="ds-c-substep__title">Overall household</div>
            <a href="#step-2a">
              Edit<span class="ds-u-visibility--screen-reader">
                {" "}
                "Overall household"
              </span>
            </a>
          </div>
        </li>
        <li class="ds-c-substep">
          <div class="ds-c-substep__line">
            <div class="ds-c-substep__title">Bob's information</div>
          </div>
        </li>
        <li class="ds-c-substep">
          <div class="ds-c-substep__line">
            <div class="ds-c-substep__title">Barb's information</div>
          </div>
        </li>
      </ol>
    </li>
    <li class="ds-c-step">
      <h2 class="ds-c-step__header">
        <div class="ds-c-step__title">Review your information</div>
        <div class="ds-c-step__actions" />
      </h2>
    </li>
    <li class="ds-c-step">
      <h2 class="ds-c-step__header">
        <div class="ds-c-step__title">View premium results</div>
        <div class="ds-c-step__actions" />
      </h2>
    </li>
  </ol>
</div>

Style guide: patterns.step-list
*/

$step-list-number-size: 32px !default;
$step-list-number-size-mobile: 24px !default;
$step-list-number-font-size: 20px !default;
$step-list-number-font-size-mobile: $small-font-size !default;
$step-list-number-border-size: 2px !default;
$step-list-number-margin: 10px !default;
$step-list-padding-h: 0 !default;
$step-list-padding-left: $step-list-padding-h + $step-list-number-margin + $step-list-number-size;
$step-list-breakpoint: $width-md !default;
$step-margin: $spacer-2 !default;
$step-border-width: 1px !default;
$step-button-height: 38px !default;
$current-step-color: $color-primary !default;

.ds-c-step-list {
  list-style-type: none;
  margin: 0;
  padding: 0 $step-list-padding-h;
  padding-left: $step-list-padding-left;
}

.ds-c-step {
  color: $color-muted;
  counter-increment: step-counter;
  margin-bottom: $step-margin;
  padding-bottom: $step-margin;
  position: relative;

  &::before {
    border: $step-list-number-border-size solid $color-muted;
    border-radius: 50%;
    box-sizing: border-box;
    color: $color-muted;
    content: counter(step-counter);
    display: block;
    font-size: $step-list-number-font-size-mobile;
    height: $step-list-number-size-mobile;
    left: -($step-list-number-margin + $step-list-number-size-mobile);
    line-height: $step-list-number-size-mobile - $step-list-number-border-size * 2;
    position: absolute;
    text-align: center;
    top: ($step-button-height - $step-list-number-size-mobile) / 2;
    width: $step-list-number-size-mobile;

    @media (min-width: $step-list-breakpoint) {
      font-size: $step-list-number-font-size;
      height: $step-list-number-size;
      left: -($step-list-number-margin + $step-list-number-size);
      line-height: $step-list-number-size - $step-list-number-border-size * 2;
      padding-left: 1px;
      top: ($step-button-height - $step-list-number-size) / 2;
      width: $step-list-number-size;
    }
  }

  &::after {
    border-bottom: $step-border-width solid $border-color;
    bottom: 0;
    content: '';
    display: block;
    height: 1px;
    left: -$step-list-padding-left;
    position: absolute;
    right: -$step-list-padding-h;
  }
}

.ds-c-step--current,
.ds-c-step--completed {
  padding-bottom: $step-margin + $step-button-height;

  .ds-c-step__actions {
    bottom: $step-margin;
    position: absolute;
  }

  &::before {
    border: 0 none;
    color: $color-white;
    line-height: $step-list-number-size-mobile;

    @media (min-width: $step-list-breakpoint) {
      line-height: $step-list-number-size;
    }
  }

  @media (min-width: $step-list-breakpoint) {
    padding-bottom: $step-margin;

    .ds-c-step__actions {
      bottom: auto;
      position: inherit;
    }
  }
}

.ds-c-step--current {
  .ds-c-step__header {
    color: $current-step-color;
  }

  &::before {
    background: $current-step-color;
  }
}

.ds-c-step--completed {
  .ds-c-step__header {
    color: $color-base;
  }

  .ds-c-step__substeps {
    color: $color-base;
  }

  &::before {
    background: $color-base;
  }
}

.ds-c-step__header {
  font-size: $h5-font-size;
  margin: 0;

  @media (min-width: $step-list-breakpoint) {
    display: flex;
    font-size: $h3-font-size;
    justify-content: space-between;
  }
}

.ds-c-step__title {
  line-height: $step-button-height;
}

.ds-c-step__actions {
  font-size: $small-font-size;
  text-align: right;

  .ds-c-step--completed & a {
    font-weight: $font-normal;
  }

  @media (min-width: $step-list-breakpoint) {
    font-size: $base-font-size;
  }
}

.ds-c-step__completed-text {
  display: inline-block;
  line-height: $step-button-height - 12px;
  margin-right: $spacer-2;
  padding-top: 6px;

  &::before {
    background-image: url('#{$image-path}/checkmark-green.svg');
    background-size: contain;
    box-sizing: border-box;
    content: '';
    display: inline-block;
    height: 12px;
    margin-right: $spacer-1;
    width: 16px;
  }

  @media (min-width: $step-list-breakpoint) {
    display: block;
    margin-right: 0;
  }
}

.ds-c-step__description {
  font-size: $small-font-size;
  margin-bottom: $spacer-1;

  .ds-c-step--current &,
  .ds-c-step--completed & {
    margin-top: $spacer-1;
  }

  @media (min-width: $step-list-breakpoint) {
    font-size: $base-font-size;
    max-width: 75%;
  }
}

.ds-c-step__substeps {
  list-style-type: none;
  margin: 0;
  margin-bottom: $spacer-1;
  padding-left: $spacer-5;
}

.ds-c-substep {
  display: block;
  font-size: $small-font-size;
  position: relative;

  &::before {
    content: '\2022';
    left: -$spacer-3;
    position: absolute;
    top: 0;
  }
}

.ds-c-substep__title {
  display: inline-block;
  margin-right: $spacer-1;

  @media (min-width: $step-list-breakpoint) {
    display: block;
  }
}

.ds-c-substep__line {
  @media (min-width: $step-list-breakpoint) {
    display: flex;
    justify-content: space-between;
  }
}

/*
Start, Resume, and Edit links

A user interacts with the steps through "Start", "Resume", and "Edit"
links.

Visually "Start" and "Resume" are buttons, but all three are implemented
with `<a>` tags. In the React component, the links' `href` properties are
determined by the `step` object's `href` property. One can also
optionally pass an `onEnterStep` function that will cancel the default
link behavior and call `onEnterStep` with `href` as a parameter for
apps that handle routing with JavaScript.

When a step has substeps, the React component will automatically set the
`href` property of the parent step's "Start" and "Resume" buttons to match
the current (incomplete) substep's `href`. The "Edit" button will only
appear on substeps that have been completed.

Style guide: patterns.step-list.buttons
*/

/*
`<StepList>`

@react-component StepList

Style guide: patterns.step-list.react
*/

/*
Step object

A `step` object contains all information needed to render the step, including
text, progress, and routing information.

Step object properties:
- **id** (`string`) - Unique string representing the step. Will be passed to onEnterStep as second parameter
- **href** (`string`) - URL or partial URL that routes to the step. Will be passed to onEnterStep as first parameter
- **completed** (`bool`) - Whether the step has been completed
- **started** (`bool`) - Whether the step has been started
- **isNextStep** (`bool`) - Whether this is the next unstarted step
- **title** (`string`) - Text to display as the step title
- **description** (`string`) - Additional text to display under (only rendered for top-level steps)

Style guide: patterns.step-list.step-object
*/
