// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog close button text and variation can be changed 1`] = `
Object {
  "props": Object {
    "children": "Foo",
    "closeButtonVariation": "danger",
    "closeText": "No thank you. I don't like saving money",
  },
  "wrapper": <Displaced
    dialogClass="ds-c-dialog ds-base"
    escapeExits={true}
    focusDialog={true}
    includeDefaultStyles={false}
    mounted={true}
    titleId="dialog-title dialog-content"
    underlayClass="ds-c-dialog-wrap"
    underlayClickExits={false}
  >
    <div
      role="document"
    >
      <header
        className="ds-c-dialog__header"
        role="banner"
      >
        <Button
          aria-label="Close modal dialog"
          className="ds-c-dialog__close"
          component="button"
          type="button"
          variation="danger"
        >
          No thank you. I don't like saving money
        </Button>
      </header>
      <main
        role="main"
      >
        <div
          id="dialog-content"
        >
          Foo
        </div>
      </main>
    </div>
  </Displaced>,
}
`;

exports[`Dialog renders react-aria-modal 1`] = `
<Dialog
  ariaCloseLabel="Close modal dialog"
  closeButtonVariation="transparent"
  closeText="Close"
  escapeExitDisabled={false}
  getApplicationNode={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  heading="Foo"
  onExit={[MockFunction]}
  underlayClickExits={false}
>
  <Displaced
    dialogClass="ds-c-dialog ds-base"
    escapeExits={true}
    focusDialog={true}
    getApplicationNode={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    includeDefaultStyles={false}
    mounted={true}
    onExit={[MockFunction]}
    titleId="dialog-title dialog-content"
    underlayClass="ds-c-dialog-wrap"
    underlayClickExits={false}
  >
    <Portal
      containerInfo={
        <div>
          <div>
            <div
              class="ds-c-dialog-wrap"
            >
              <div
                aria-labelledby="dialog-title dialog-content"
                class="ds-c-dialog ds-base"
                id="react-aria-modal-dialog"
                role="dialog"
                tabindex="-1"
              >
                <div
                  role="document"
                >
                  <header
                    class="ds-c-dialog__header"
                    role="banner"
                  >
                    <h1
                      class="ds-h2"
                      id="dialog-title"
                    >
                      Foo
                    </h1>
                    <button
                      aria-label="Close modal dialog"
                      class="ds-c-button ds-c-button--transparent ds-c-dialog__close"
                      type="button"
                    >
                      Close
                    </button>
                  </header>
                  <main
                    role="main"
                  >
                    <div
                      id="dialog-content"
                    >
                      Bar
                    </div>
                  </main>
                </div>
              </div>
            </div>
          </div>
        </div>
      }
    >
      <Modal
        dialogClass="ds-c-dialog ds-base"
        dialogId="react-aria-modal-dialog"
        escapeExits={true}
        focusDialog={true}
        focusTrapPaused={false}
        getApplicationNode={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
          }
        }
        includeDefaultStyles={false}
        mounted={true}
        onExit={[MockFunction]}
        scrollDisabled={true}
        titleId="dialog-title dialog-content"
        underlayClass="ds-c-dialog-wrap"
        underlayClickExits={false}
        underlayColor="rgba(0,0,0,0.5)"
        underlayProps={Object {}}
      >
        <FocusTrap
          _createFocusTrap={[Function]}
          active={true}
          focusTrapOptions={
            Object {
              "initialFocus": "#react-aria-modal-dialog",
            }
          }
          paused={false}
          tag="div"
        >
          <div>
            <div
              className="ds-c-dialog-wrap"
              style={Object {}}
            >
              <div
                aria-labelledby="dialog-title dialog-content"
                className="ds-c-dialog ds-base"
                id="react-aria-modal-dialog"
                key="b"
                role="dialog"
                style={Object {}}
                tabIndex="-1"
              >
                <div
                  role="document"
                >
                  <header
                    className="ds-c-dialog__header"
                    role="banner"
                  >
                    <h1
                      className="ds-h2"
                      id="dialog-title"
                    >
                      Foo
                    </h1>
                    <Button
                      aria-label="Close modal dialog"
                      className="ds-c-dialog__close"
                      component="button"
                      onClick={[MockFunction]}
                      type="button"
                      variation="transparent"
                    >
                      <button
                        aria-label="Close modal dialog"
                        className="ds-c-button ds-c-button--transparent ds-c-dialog__close"
                        onClick={[Function]}
                        type="button"
                      >
                        Close
                      </button>
                    </Button>
                  </header>
                  <main
                    role="main"
                  >
                    <div
                      id="dialog-content"
                    >
                      Bar
                    </div>
                  </main>
                </div>
              </div>
            </div>
          </div>
        </FocusTrap>
      </Modal>
    </Portal>
  </Displaced>
</Dialog>
`;

exports[`Dialog renders with additional classNames and size 1`] = `
Object {
  "props": Object {
    "actions": <span>
      Pretend these are actions
    </span>,
    "actionsClassName": "test-action",
    "children": "Foo",
    "className": "test-dialog",
    "headerClassName": "test-header",
    "size": "full",
  },
  "wrapper": <Displaced
    dialogClass="ds-c-dialog ds-base test-dialog ds-c-dialog--full"
    escapeExits={true}
    focusDialog={true}
    includeDefaultStyles={false}
    mounted={true}
    titleId="dialog-title dialog-content"
    underlayClass="ds-c-dialog-wrap"
    underlayClickExits={false}
  >
    <div
      role="document"
    >
      <header
        className="ds-c-dialog__header test-header"
        role="banner"
      >
        <Button
          aria-label="Close modal dialog"
          className="ds-c-dialog__close"
          component="button"
          type="button"
          variation="transparent"
        >
          Close
        </Button>
      </header>
      <main
        role="main"
      >
        <div
          id="dialog-content"
        >
          Foo
        </div>
      </main>
      <aside
        className="ds-c-dialog__actions test-action"
        role="complementary"
      >
        <span>
          Pretend these are actions
        </span>
      </aside>
    </div>
  </Displaced>,
}
`;
