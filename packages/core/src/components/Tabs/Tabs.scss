@import '../../settings/index';

/*
Tabs

@status prototype

Markup:
<div class="ds-c-tabs" role="tablist" aria-label="Settings">
  <a
    class="ds-c-tabs__item"
    href="#panel-profile"
    role="tab"
    aria-selected="true"
    aria-controls="panel-profile"
    id="tab-profile"
  >
    Profile
  </a>
  <a
    class="ds-c-tabs__item"
    href="#panel-comms"
    role="tab"
    aria-selected="false"
    aria-controls="panel-comms"
    id="tab-comms"
  >
    Communication preferences
  </a>
</div>
<div class="ds-c-tabs__panel" id="panel-profile" aria-labelledby="tab-profile" role="tabpanel">
  Profile panel content
</div>
<div class="ds-c-tabs__panel" id="panel-comms" aria-hidden="true" aria-labelledby="tab-comms" aria-selected="false" role="tabpanel">
  Communication preferences content
</div>

Style guide: components.tabs
*/
.ds-c-tabs {
  border-bottom: 1px solid $border-color;
  display: flex;
}

.ds-c-tabs__item {
  background-color: $color-background;
  border-left: 1px solid $border-color;
  border-top: 1px solid $border-color;
  color: $color-base;
  cursor: pointer;
  display: inline-block;
  font-size: $base-font-size;
  font-weight: $font-bold;
  line-height: $reset-line-height;
  padding: $spacer-2 $spacer-3;
  position: relative;
  text-decoration: none;

  &:last-child {
    border-right: 1px solid $border-color;
  }

  // States
  &[aria-selected='true'] {
    border-bottom: 1px $color-white transparent;
    color: $color-primary;
    margin-bottom: -1px;
    pointer-events: none;

    // Use pseudo-element for top border to avoid weird default border rendering
    &::after {
      background-color: $color-primary;
      content: '';
      height: $spacer-half;
      left: -1px;
      position: absolute;
      right: -1px;
      top: -1px;
    }
  }

  &:focus,
  &:hover {
    color: $color-primary;
  }

  &:active {
    color: $color-primary-darker;
  }
}

.ds-c-tabs__panel {
  background-color: $color-background;
  border-bottom: 1px solid $border-color;
  border-left: 1px solid $border-color;
  border-right: 1px solid $border-color;
  padding: $spacer-3;

  &[aria-hidden='true'] {
    /* stylelint-disable declaration-no-important */
    display: none !important;
  }
}

/*
`<Tabs>`

@react-component Tabs

Style guide: components.tabs.react-tabs
*/

/*
`<Tab>`

@react-component Tab

Style guide: components.tabs.react-tab
*/

/*
Guidelines

## Accessibility

- Use an anchor link (`a`) to create the tabs. This allows you to link directly to a tab, and allows you to progressively enhance the page, retaining default browser behavior like opening links in a new window.
- Ensure the HTML markup includes the proper ARIA attributes:
  - For tabs: `role`, `aria-selected`, `aria-controls`
  - For the tabs list parent: `role`, `aria-label`
  - For a tab panel: `role`, `aria-labelledby`

## Further reading

- [How Tabs Should Work](https://24ways.org/2015/how-tabs-should-work/)
- [Simple ARIA tab interface](http://heydonworks.com/practical_aria_examples/#tab-interface)

Style guide: components.tabs.guidelines
*/
