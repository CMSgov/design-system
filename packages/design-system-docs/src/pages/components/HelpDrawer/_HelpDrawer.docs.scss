/*
Help Drawer

@analytics

A help drawer provides a space for medium to long-form help
content â€” content that's too long or not common enough to warrant
being on the page by default.

On large screens it's fixed to the side of the screen, and on
smaller screens it overlays the entire screen.

Render the drawer below the toggle bottom that triggers it.
This way the markup remains semantically sound and screen reader friendly.

Markup: help-drawer.example.html

Style guide: components.help-drawer
*/

/*
`<HelpDrawer>`

@react-example HelpDrawer.example.jsx

@react-props HelpDrawer.jsx

Style guide: components.help-drawer.react-help-drawer
*/

/*
`<HelpDrawerToggle>`

@react-props HelpDrawerToggle.jsx

Style guide: components.help-drawer.react-help-drawer-toggle
*/

/*
Analytics Event Object

Note: the only value that can be overwritten is the `ga_eventLabel` / `heading` value via the `analyticsLabelOverride` prop

<table class="ds-c-table ds-c-table--compact">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Default</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="ds-u-font-weight--bold">event_name</code></td>
      <td><code>string</code></td>
      <td><code>'help_drawer_opened'</code> or <code>'help_drawer_closed'</code></td>
      <td>
        <p>When drawer mounts on page, value will be <code>'help_drawer_opened'</code>. When drawer unmounts from page, value will be <code>'help_drawer_closed'</code></p>
      </td>
    </tr>
    <tr>
      <td><code class="ds-u-font-weight--bold">event_type</code></td>
      <td><code>string</code></td>
      <td><code>'ui interaction'</code></td>
      <td></td>
    </tr>
    <tr>
      <td><code class="ds-u-font-weight--bold">ga_eventAction</code></td>
      <td><code>string</code></td>
      <td><code>'opened help drawer'</code> or <code>'closed help drawer'</code></td>
      <td>
        <p>When drawer mounts on page, value will be <code>'opened help drawer'</code>. When drawer unmounts from page, value will be <code>'closed help drawer'</code></p>
      </td>
    </tr>
    <tr>
      <td><code class="ds-u-font-weight--bold">ga_eventCategory</code></td>
      <td><code>string</code></td>
      <td><code>'ui components'</code></td>
      <td></td>
    </tr>
    <tr>
      <td><code class="ds-u-font-weight--bold">ga_eventLabel</code></td>
      <td><code>string</code></td>
      <td>HelpDrawer prop: <code>analyticsLabelOverride</code> or <code>heading</code> or <code>title</code></td>
      <td>
        <p>This value will be defaulted to value of prop <code>heading</code> (if it is a string) or <code>title</code>. You may overwrite this by passing a value to the <code>analyticsLabelOverride</code> prop.</p>
      </td>
    </tr>
    <tr>
      <td>
        <code class="ds-u-font-weight--bold">ga_eventType</code>
      </td>
      <td><code>string</code></td>
      <td><code>'cmsds'</code></td>
      <td></td>
    </tr>
    <tr>
      <td>
        <code class="ds-u-font-weight--bold">ga_eventValue</code>
      </td>
      <td><code>string</code></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td><code class="ds-u-font-weight--bold">heading</code></td>
      <td><code>string</code></td>
      <td>HelpDrawer prop: <code>analyticsLabelOverride</code> or <code>heading</code> or <code>title</code></td>
      <td>
        <p>This value will be defaulted to value of prop <code>heading</code> (if it is a string) or <code>title</code>. You may overwrite this by passing a value to the <code>analyticsLabelOverride</code> prop. Same as <code>ga_eventLabel</code></p>
      </td>
    </tr>
  </tbody>
</table>

Style guide: components.help-drawer.analytics
*/

/*
---

### When to use

- When users need help content to remain viewable while also allowing the user to views/interacts with the main page.
- When the help content is longer than 2 sentences.
- When the content needs to be available at a particular point in the process, but doesn't need to be included on the main page.
- When the content just needs to be available at the user's discretion, to provide additional details or context.
- When users may need additional information to complete the task than can be supplied on the main page without overwhelming the primary content.

### When to consider alternatives

- When the content is timely/urgent, or critical to the action being taken.
- When the content is intended to clarify or call attention to other content on the page.
- When the content must be displayed without being initiated by a user action.
- When additional information is necessary to the primary information the user is interacting with.

### Usage

- Link text used to trigger the help drawer should be specific and descriptive.
  - Avoid using only "Learn more" to link to help drawer content
  - Limit the amount of link text
- Help drawer content area should include a close button clearly at the top.

### Accessibility

- Focus should move to the content in the help drawer after the user has opened it.
- Help Drawer should support keyboard navigation.
    - `Enter` and `Space` to select the highlighted item.
    - `Tab` to move the focus sequentially through the list of focusable items
    - `Shift + Tab` to move the focus sequentially through the list of focusable items in reversed order

### Future Work

Future design iterations and possible user research to ensure the enhanced help drawer link design isn't confused or mistaken for transitional hyperlinks, glossary terms, or tooltips.

Style guide: components.help-drawer.guidance
*/

/*
Google Analytics

**Analytics event tracking is disabled by default.**

### Enable event tracking

- Import and set the `setHelpDrawerSendsAnalytics` feature flag to `true` in your application's entry file:

```JSX
import { setHelpDrawerSendsAnalytics } from "@cmsgov/<design-system-package>";
setHelpDrawerSendsAnalytics(true);
```
On application where the page has `utag` loaded, the data goes to Tealium which allows it to route to Google Analytics or the currently approved data analytics tools.

### Disable event tracking

- For the `analytics` prop, pass the value `false` to the component to disable analytics tracking for a singular component instance

```JSX
analytics={false}
}
```

### Override  event tracking

- A custom heading value can be sent for an analytics event by using the prop `analyticsLabelOverride`
*/
