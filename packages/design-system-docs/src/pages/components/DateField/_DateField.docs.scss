/*
Date field

@uswds https://designsystem.digital.gov/components/form-controls/#date-input

Three text fields are the easiest way for users to enter most dates.

Markup: datefield.example.html

Style guide: components.date-field
*/

/*
`<DateField>`

@react-example DateField.example.jsx

@react-props DateField.jsx

Style guide: components.date-field.react
*/

/*
---

### When to use

- Use this format for most dates, particularly memorized dates.

### When to consider alternatives

- If users are trying to schedule something, a calendar picker might make more sense. Be sure to also provide an option for text entry as well.

### Usage

- Ensure you've [installed both the Core package and Layout package]({{root}}/startup/installation)
- Allow users to enter the date as flexibly as possible, for example, allowing `1` as well as `01` for a month input.
- Be sure each field is properly labeled â€” some countries enter dates in day, month, year order.
- It may be tempting to switch all or some of these text fields to drop downs, but these tend to be more difficult to use than text boxes.
- When handling date errors, if the part of the date that has an error is known, only highlight the part with an error. For example, if month and day are valid inputs, but the year is invalid, use `yearInvalid=true` so that only the year field will be highlighted red.
- If the entire date is incorrect, all fields can be highlighted. For example, if a date in the past is required and a date in the future is entered, all fields should be highlighted.

### Accessibility

- These text fields should follow the [accessibility guidelines for all text inputs]({{root}}/components/text-field/#guidance).
- Do not use JavaScript to auto advance the focus from one field to the next. This makes it difficult for keyboard-only users to navigate and correct mistakes.

### Related patterns

- [Text field]({{root}}/components/text-field/)
- [Grid]({{root}}/utilities/grid/)

Style guide: components.date-field.guidance
*/
